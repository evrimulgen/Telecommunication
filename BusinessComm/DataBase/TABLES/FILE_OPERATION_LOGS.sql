CREATE TABLE FILE_OPERATION_LOGS
(
  FILE_OPERATION_LOG_ID   INTEGER PRIMARY KEY,
  FILE_NAME             VARCHAR2(200),
  FILE_NAME_NEW             VARCHAR2(200),
  FILE_OPERATION_TYPE_ID INTEGER,
  OPERATION_START_DATE_TIME        DATE,
  OPERATION_END_DATE_TIME        DATE,
  FROM_PATH             VARCHAR2(500),
  TO_PATH             VARCHAR2(500),
  ERROR_TEXT varchar2(500)
)
TABLESPACE TS_LOGS;


COMMENT ON TABLE FILE_OPERATION_LOGS IS 'Лог операции с файлами';

COMMENT ON COLUMN FILE_OPERATION_LOGS.FILE_OPERATION_LOG_ID IS 'Идентификатор записи';

COMMENT ON COLUMN FILE_OPERATION_LOGS.FILE_NAME IS 'Имя файла';

COMMENT ON COLUMN FILE_OPERATION_LOGS.FILE_NAME_NEW IS 'Новое имя файла';

COMMENT ON COLUMN FILE_OPERATION_LOGS.FILE_OPERATION_TYPE_ID IS 'Тип операции с файлом (Таблица FILE_OPERATION_TYPES)';

COMMENT ON COLUMN FILE_OPERATION_LOGS.OPERATION_START_DATE_TIME IS 'Время начала операции';

COMMENT ON COLUMN FILE_OPERATION_LOGS.OPERATION_END_DATE_TIME IS 'Время завершения операции';

COMMENT ON COLUMN FILE_OPERATION_LOGS.FROM_PATH IS 'Путь расположения файла до операции';

COMMENT ON COLUMN FILE_OPERATION_LOGS.TO_PATH IS 'Путь расположения файла после операции';

COMMENT ON COLUMN FILE_OPERATION_LOGS.ERROR_TEXT IS 'Текст ошибки, если операция совершилась с ошибкой';

CREATE SEQUENCE S_FILE_OPERATION_LOGS
  START WITH 0
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 20
  NOORDER;
  
CREATE OR REPLACE TRIGGER TI_FILE_OPERATION_LOGS
--#Version=1
  BEFORE INSERT ON FILE_OPERATION_LOGS FOR EACH ROW
BEGIN
    :NEW.FILE_OPERATION_LOG_ID := S_FILE_OPERATION_LOGS.NEXTVAL;
    :NEW.OPERATION_START_DATE_TIME := SYSDATE;
END;  

ALTER TABLE FILE_OPERATION_LOGS ADD CONSTRAINT FK_FILE_OPERATION_TYPE_ID FOREIGN KEY (FILE_OPERATION_TYPE_ID) REFERENCES FILE_OPERATION_TYPES (FILE_OPERATION_TYPE_ID);