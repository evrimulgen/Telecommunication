CREATE TABLE OPERATOR_ACCOUNT_NAMES(
  OPERATOR_ACCOUNT_NAME_ID Integer NOT NULL primary key,
  MOBILE_OPERATOR_NAME_ID Integer,
  ACCOUNT_NAME Varchar2(50 CHAR) NOT NULL,
  DATE_CREATED Date NOT NULL,
  USER_CREATED Varchar2(30 CHAR) NOT NULL,
  DATE_UPDATED Date NOT NULL,
  USER_UPDATED Varchar2(30 CHAR) NOT NULL,
  
  CONSTRAINT FK_MOBILE_OPERATOR_NAME_ID3
  FOREIGN KEY (MOBILE_OPERATOR_NAME_ID) 
  REFERENCES MOBILE_OPERATOR_NAMES (MOBILE_OPERATOR_NAME_ID)
  ENABLE VALIDATE
)
/
  
COMMENT ON TABLE OPERATOR_ACCOUNT_NAMES IS 'Название счетов у оператора связи'
/
COMMENT ON COLUMN OPERATOR_ACCOUNT_NAMES.OPERATOR_ACCOUNT_NAME_ID IS 'Идентификатор записи'
/
COMMENT ON COLUMN OPERATOR_ACCOUNT_NAMES.MOBILE_OPERATOR_NAME_ID IS 'Идентификатор оператора связи из MOBILE_OPERATOR_NAMES.MOBILE_OPERATOR_NAME_ID'
/
COMMENT ON COLUMN OPERATOR_ACCOUNT_NAMES.ACCOUNT_NAME IS 'Название счета'
/
COMMENT ON COLUMN OPERATOR_ACCOUNT_NAMES.DATE_CREATED IS 'Дата создания записи'
/
COMMENT ON COLUMN OPERATOR_ACCOUNT_NAMES.USER_CREATED IS 'Пользователь создавший запись'
/
COMMENT ON COLUMN OPERATOR_ACCOUNT_NAMES.DATE_UPDATED IS 'Дата обновления записи'
/
COMMENT ON COLUMN OPERATOR_ACCOUNT_NAMES.USER_UPDATED IS 'Обновивший пользователь'
/

CREATE SEQUENCE S_OPERATOR_ACCOUNT_NAME_ID
  START WITH 0
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

GRANT SELECT ON S_OPERATOR_ACCOUNT_NAME_ID TO BUSINESS_COMM_ROLE;

CREATE OR REPLACE TRIGGER TUI_OPERATOR_ACCOUNT_NAMES
BEFORE INSERT OR UPDATE
ON OPERATOR_ACCOUNT_NAMES
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
BEGIN

 IF INSERTING THEN
    IF NVL(:NEW.OPERATOR_ACCOUNT_NAME_ID, 0) = 0 then
      :NEW.OPERATOR_ACCOUNT_NAME_ID := S_OPERATOR_ACCOUNT_NAME_ID.NEXTVAL;
    END IF;
    :NEW.USER_CREATED := USER;
    :NEW.DATE_CREATED := SYSDATE;
 END IF;
 
 
  :NEW.USER_UPDATED := USER;
  :NEW.DATE_UPDATED := SYSDATE;
 
END ;
/

GRANT DELETE, INSERT, SELECT, UPDATE ON OPERATOR_ACCOUNT_NAMES TO BUSINESS_COMM_ROLE;

GRANT SELECT, UPDATE ON OPERATOR_ACCOUNT_NAMES TO BUSINESS_COMM_ROLE_RO;

CREATE INDEX I_OPERATOR_ACC_NAMES_ID_NAME ON OPERATOR_ACCOUNT_NAMES
(OPERATOR_ACCOUNT_NAME_ID, ACCOUNT_NAME);
/

-- добавляем foreign key - связку на filials.filial_id, удаляем колонку mobile_operator_name_id
alter table operator_account_names add filial_id number;
comment on column operator_account_names.filial_id is 'Филиал оператора FILIALS.FILIAL_ID';
update operator_account_names a set a.filial_id = decode(a.mobile_operator_name_id,31,81,a.mobile_operator_name_id);
alter table operator_account_names modify filial_id not null;
alter table operator_account_names
  add constraint FK_FILIAL_ID3 foreign key (FILIAL_ID)
  references filials (FILIAL_ID);
alter table operator_account_names drop constraint FK_MOBILE_OPERATOR_NAME_ID3;    
alter table operator_account_names drop column mobile_operator_name_id;
