CREATE TABLE OPERATOR_PHONE_STATUSES(
  OPERATOR_PHONE_STATUSE_ID Integer NOT NULL primary key,
  MOBILE_OPERATOR_NAME_ID Integer,
  STATUS_NAME Varchar2(30 CHAR) NOT NULL,
  DATE_CREATED Date NOT NULL,
  USER_CREATED Varchar2(30 CHAR) NOT NULL,
  DATE_UPDATED Date NOT NULL,
  USER_UPDATED Varchar2(30 CHAR) NOT NULL,
  
  CONSTRAINT FK_MOBILE_OPERATOR_NAME_ID2
  FOREIGN KEY (MOBILE_OPERATOR_NAME_ID) 
  REFERENCES MOBILE_OPERATOR_NAMES (MOBILE_OPERATOR_NAME_ID)
  ENABLE VALIDATE
)
/
  
COMMENT ON TABLE OPERATOR_PHONE_STATUSES IS 'Название счетов у оператора связи'
/
COMMENT ON COLUMN OPERATOR_PHONE_STATUSES.OPERATOR_PHONE_STATUSE_ID IS 'Идентификатор записи'
/
COMMENT ON COLUMN OPERATOR_PHONE_STATUSES.MOBILE_OPERATOR_NAME_ID IS 'Идентификатор оператора связи из MOBILE_OPERATOR_NAMES.MOBILE_OPERATOR_NAME_ID'
/
COMMENT ON COLUMN OPERATOR_PHONE_STATUSES.STATUS_NAME IS 'Название статуса'
/
COMMENT ON COLUMN OPERATOR_PHONE_STATUSES.DATE_CREATED IS 'Дата создания записи'
/
COMMENT ON COLUMN OPERATOR_PHONE_STATUSES.USER_CREATED IS 'Пользователь создавший запись'
/
COMMENT ON COLUMN OPERATOR_PHONE_STATUSES.DATE_UPDATED IS 'Дата обновления записи'
/
COMMENT ON COLUMN OPERATOR_PHONE_STATUSES.USER_UPDATED IS 'Обновивший пользователь'
/

CREATE SEQUENCE S_OPERATOR_PHONE_STATUSE_ID
  START WITH 0
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

GRANT SELECT ON S_OPERATOR_PHONE_STATUSE_ID TO BUSINESS_COMM_ROLE;

CREATE OR REPLACE TRIGGER TUI_OPERATOR_PHONE_STATUSES
BEFORE INSERT OR UPDATE
ON OPERATOR_PHONE_STATUSES
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
BEGIN

 IF INSERTING THEN
    IF NVL(:NEW.OPERATOR_PHONE_STATUSE_ID, 0) = 0 then
      :NEW.OPERATOR_PHONE_STATUSE_ID := S_OPERATOR_PHONE_STATUSE_ID.NEXTVAL;
    END IF;
    :NEW.USER_CREATED := USER;
    :NEW.DATE_CREATED := SYSDATE;
 END IF;
 
 
  :NEW.USER_UPDATED := USER;
  :NEW.DATE_UPDATED := SYSDATE;
 
END ;
/

GRANT DELETE, INSERT, SELECT, UPDATE ON OPERATOR_PHONE_STATUSES TO BUSINESS_COMM_ROLE;

GRANT SELECT, UPDATE ON OPERATOR_PHONE_STATUSES TO BUSINESS_COMM_ROLE_RO;

CREATE INDEX I_OPERATOR_PHONE_STAT_ID_NAME ON OPERATOR_PHONE_STATUSES
(OPERATOR_PHONE_STATUSE_ID, STATUS_NAME);
/

-- добавляем foreign key - связку на filials.filial_id, удаляем колонку mobile_operator_name_id
alter table OPERATOR_PHONE_STATUSES add filial_id number;
comment on column OPERATOR_PHONE_STATUSES.filial_id is 'Филиал оператора FILIALS.FILIAL_ID';
update OPERATOR_PHONE_STATUSES a set a.filial_id = decode(a.mobile_operator_name_id,31,81,a.mobile_operator_name_id);
alter table OPERATOR_PHONE_STATUSES modify filial_id not null;
alter table OPERATOR_PHONE_STATUSES
  add constraint FK_FILIAL_ID2 foreign key (FILIAL_ID)
  references filials (FILIAL_ID);
alter table OPERATOR_PHONE_STATUSES drop constraint FK_MOBILE_OPERATOR_NAME_ID2;    
alter table OPERATOR_PHONE_STATUSES drop column mobile_operator_name_id;