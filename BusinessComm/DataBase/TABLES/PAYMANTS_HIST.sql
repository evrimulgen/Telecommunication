
CREATE TABLE PAYMANTS_HIST
(
  PAYMENT_ID          INTEGER,
  VIRTUAL_ACCOUNT_ID  INTEGER,
  PHONE_ID            INTEGER,
  INN                 VARCHAR2(12 CHAR),
  DATE_PAY            DATE,
  SUM_PAY             NUMBER(15,2),
  DOC_NUMBER          VARCHAR2(10 CHAR),
  PAYMENT_PURPOSE     VARCHAR2(500 CHAR),
  USER_CREATED        VARCHAR2(30 CHAR),
  DATE_CREATED        DATE,
  USER_LAST_UPDATED   VARCHAR2(30 CHAR),
  DATE_LAST_UPDATED   DATE,
  PAYMENT_FILE_ID     INTEGER,
  YEAR_MONTH          INTEGER,
  PAYER_BIK           INTEGER,
  PAYMANT_ID_HIST     INTEGER                   NOT NULL,
  HIST_DATE_CREATED DATE NOT NULL
);

COMMENT ON TABLE PAYMANTS_HIST IS 'Платежи';

COMMENT ON COLUMN PAYMANTS_HIST.PAYMENT_ID IS 'Ссылка на таблицу PAYMANTS.PAYMENT_ID';

COMMENT ON COLUMN PAYMANTS_HIST.VIRTUAL_ACCOUNT_ID IS 'Идентификтор группового договора VIRTUAL_ACCOUNTS.VIRTUAL_ACCOUNTS_ID';

COMMENT ON COLUMN PAYMANTS_HIST.PHONE_ID IS 'Идентификатор номера телефона PHONES.PHONE_ID';

COMMENT ON COLUMN PAYMANTS_HIST.INN IS 'ИНН плательщика';

COMMENT ON COLUMN PAYMANTS_HIST.DATE_PAY IS 'Дата платежа';

COMMENT ON COLUMN PAYMANTS_HIST.SUM_PAY IS 'Сумма платежа';

COMMENT ON COLUMN PAYMANTS_HIST.DOC_NUMBER IS 'Номер платежного документа';

COMMENT ON COLUMN PAYMANTS_HIST.PAYMENT_PURPOSE IS 'Назначение платежа';

COMMENT ON COLUMN PAYMANTS_HIST.USER_CREATED IS 'ПОЛЬЗОВАТЕЛЬ, СОЗДАВШИЙ';

COMMENT ON COLUMN PAYMANTS_HIST.DATE_CREATED IS 'ДАТА СОЗДАНИЯ';

COMMENT ON COLUMN PAYMANTS_HIST.USER_LAST_UPDATED IS 'ПОЛЬЗОВАТЕЛЬ, ИЗМЕНИВШИЙ';

COMMENT ON COLUMN PAYMANTS_HIST.DATE_LAST_UPDATED IS 'ДАТА ПОСЛЕДНЕГО ИЗМЕНЕНИЯ';

COMMENT ON COLUMN PAYMANTS_HIST.PAYMENT_FILE_ID IS 'Идентификатор загруженнго файла (PAYMENTS_FILES.FILE_ID)';

COMMENT ON COLUMN PAYMANTS_HIST.YEAR_MONTH IS 'Год_месяц платежа';

COMMENT ON COLUMN PAYMANTS_HIST.PAYER_BIK IS 'Бик плательщика';

COMMENT ON COLUMN PAYMANTS_HIST.PAYMANT_ID_HIST IS 'Первичный ключ';

COMMENT ON COLUMN PAYMANTS_HIST.PAYMANT_ID_HIST IS 'Дата создания записи в логе';


CREATE UNIQUE INDEX PAYMANT_HIST_PK ON PAYMANTS_HIST
(PAYMANT_ID_HIST);


ALTER TABLE PAYMANTS_HIST ADD (
  CONSTRAINT PAYMANT_HIST_PK
  PRIMARY KEY
  (PAYMANT_ID_HIST)
  USING INDEX PAYMANT_HIST_PK
  ENABLE VALIDATE);


CREATE SEQUENCE S_PAYMENT_HIST_ID
  START WITH 0
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;
  
CREATE OR REPLACE TRIGGER TI_PAYMANT_HIST
BEFORE INSERT
ON PAYMANTS_HIST
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
BEGIN

 IF INSERTING THEN
    IF NVL(:NEW.PAYMANT_ID_HIST, 0)=0 THEN
      :NEW.PAYMANT_ID_HIST := S_PAYMENT_HIST_ID.NEXTVAL;
    END IF;
	:NEW.HIST_DATE_CREATED := SYSDATE;
  end if;
END ;
/
 

GRANT SELECT, INSERT ON PAYMANTS_HIST TO BUSINESS_COMM_ROLE;

GRANT SELECT, INSERT ON PAYMANTS_HIST TO BUSINESS_COMM_ROLE_RO;

GRANT SELECT ON S_PAYMENT_HIST_ID TO BUSINESS_COMM_ROLE;