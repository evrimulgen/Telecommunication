CREATE TABLE PAYMENTS_TYPE
(
  ID_PAYMENTS_TYPE    INTEGER                   NOT NULL,
  NAME_PAYMENTS_TYPE  VARCHAR2(60 CHAR)         NOT NULL,
  USER_CREATED        VARCHAR2(30 CHAR)         NOT NULL,
  DATE_CREATED        DATE                      NOT NULL,
  USER_LAST_UPDATED   VARCHAR2(30 CHAR)         NOT NULL,
  DATE_LAST_UPDATED   DATE                      NOT NULL,
  CONSTRAINT PAYMENTS_TYPE_PK
  PRIMARY KEY
  (ID_PAYMENTS_TYPE)
  USING INDEX PAYMENTS_TYPE_PK
  ENABLE VALIDATE
);

COMMENT ON TABLE PAYMENTS_TYPE IS 'Cправочник прочих разовых начислений';

COMMENT ON COLUMN PAYMENTS_TYPE.ID_PAYMENTS_TYPE IS 'Идентификатор записи';

COMMENT ON COLUMN PAYMENTS_TYPE.NAME_PAYMENTS_TYPE IS 'Наименование';

COMMENT ON COLUMN PAYMENTS_TYPE.USER_CREATED IS 'Пользователь, создавший запись';

COMMENT ON COLUMN PAYMENTS_TYPE.DATE_CREATED IS 'Дата/время создания записи';

COMMENT ON COLUMN PAYMENTS_TYPE.USER_LAST_UPDATED IS 'Пользователь, редактировавший запись последним';

COMMENT ON COLUMN PAYMENTS_TYPE.DATE_LAST_UPDATED IS 'Дата/время последней редакции записи';



CREATE UNIQUE INDEX PAYMENTS_TYPE_PK ON PAYMENTS_TYPE
(ID_PAYMENTS_TYPE);


CREATE OR REPLACE TRIGGER TIUВ_PAYMENTS_TYPE BEFORE DELETE OR INSERT OR UPDATE
ON PAYMENTS_TYPE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
 
  IF INSERTING THEN
    IF NVL(:NEW.ID_PAYMENTS_TYPE, 0) = 0 then
      :NEW.ID_PAYMENTS_TYPE := S_NEW_PAYMENTS_TYPE.NEXTVAL;
    END IF;
    :NEW.USER_CREATED := USER;
    :NEW.DATE_CREATED := SYSDATE;
    :NEW.USER_LAST_UPDATED := USER;
    :NEW.DATE_LAST_UPDATED := SYSDATE;
  END IF;
  if UPDATING THEN
    :NEW.USER_LAST_UPDATED := USER;
    :NEW.DATE_LAST_UPDATED := SYSDATE;
  end if;
  IF DELETING THEN
    if (:OLD.ID_PAYMENTS_TYPE = 0) THEN
       RAISE_APPLICATION_ERROR(-20001,'Эту запись удалять нельзя!');
    END IF;
  END IF; 
END ;
/

GRANT INSERT, UPDATE, SELECT, DELETE ON PAYMENTS_TYPE TO BUSINESS_COMM_ROLE;

GRANT SELECT ON PAYMENTS_TYPE TO BUSINESS_COMM_ROLE_RO;
