CREATE TABLE USER_NAMES
(
  USER_NAME_ID            INTEGER               NOT NULL,
  USER_FIO                VARCHAR2(60 CHAR)     NOT NULL,
  USER_NAME               VARCHAR2(30 CHAR)     NOT NULL,
  ENCRYPT_PWD             INTEGER               DEFAULT 1 NOT NULL,
  USER_NAME_CREATED       VARCHAR2(30 CHAR)     NOT NULL,
  USER_NAME_LAST_UPDATED  VARCHAR2(30 CHAR)     NOT NULL,
  DATE_CREATED            DATE                  NOT NULL,
  DATE_LAST_UPDATED       DATE                  NOT NULL
);

COMMENT ON TABLE USER_NAMES IS 'Справочник пользователей системы';

COMMENT ON COLUMN USER_NAMES.USER_NAME_ID IS 'ИД записи';

COMMENT ON COLUMN USER_NAMES.USER_FIO IS 'ФИО пользователя';

COMMENT ON COLUMN USER_NAMES.USER_NAME IS 'Имя пользователя в Oracle';

COMMENT ON COLUMN USER_NAMES.ENCRYPT_PWD IS 'Шифрованный пароль';

COMMENT ON COLUMN USER_NAMES.USER_NAME_CREATED IS 'Пользователь создавщий запись';

COMMENT ON COLUMN USER_NAMES.USER_NAME_LAST_UPDATED IS 'Имя пользователя, последним обновившим запись';

COMMENT ON COLUMN USER_NAMES.DATE_CREATED IS 'Дата создания записи';

COMMENT ON COLUMN USER_NAMES.DATE_LAST_UPDATED IS 'Дата послденего обновления записи';



--  The object is created when the parent object is created.

CREATE UNIQUE INDEX USER_NAMES_PK ON USER_NAMES
(USER_NAME_ID);


ALTER TABLE USER_NAMES ADD (
  CONSTRAINT USER_NAMES_PK
  PRIMARY KEY
  (USER_NAME_ID)
  USING INDEX USER_NAMES_PK
  ENABLE VALIDATE,
  UNIQUE (USER_NAME)
  USING INDEX
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
                FLASH_CACHE      DEFAULT
                CELL_FLASH_CACHE DEFAULT
               )
  ENABLE VALIDATE);



CREATE SEQUENCE S_NEW_USER_NAME_ID
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER;


CREATE OR REPLACE TRIGGER TIU_USER_NAMES
BEFORE INSERT OR UPDATE
ON USER_NAMES
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
  IF INSERTING THEN
    IF NVL(:NEW.USER_NAME_ID, 0) = 0 then
      :NEW.USER_NAME_ID := S_NEW_USER_NAME_ID.NEXTVAL;
    END IF;
    :NEW.USER_NAME_CREATED := USER;
    :NEW.DATE_CREATED := SYSDATE;
  END IF;
  if UPDATING THEN
    :NEW.USER_NAME_LAST_UPDATED := USER;
    :NEW.DATE_LAST_UPDATED := SYSDATE;
  end if;
END;

GRANT SELECT ON S_NEW_USER_NAME_ID TO BUSINESS_COMM_ROLE;

GRANT DELETE, INSERT, SELECT, UPDATE ON USER_NAMES TO BUSINESS_COMM_ROLE;

GRANT SELECT, UPDATE ON USER_NAMES TO BUSINESS_COMM_ROLE_RO;


CREATE INDEX I_USER_USER_FIO ON USER_NAMES
(USER_FIO);