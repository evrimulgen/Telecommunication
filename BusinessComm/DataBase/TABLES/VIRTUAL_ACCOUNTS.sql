
CREATE TABLE VIRTUAL_ACCOUNTS(
  VIRTUAL_ACCOUNTS_ID Integer NOT NULL,
  VIRTUAL_ACCOUNTS_NAME Varchar2(150 char ) NOT NULL,
  VIRTUAL_ACCOUNTS_IS_ACTIVE Integer NOT NULL,
  USER_CREATED             VARCHAR2(30 BYTE)    NOT NULL,
  DATE_CREATED             DATE                 NOT NULL,
  USER_LAST_UPDATED        VARCHAR2(30 BYTE)    NOT NULL,
  DATE_LAST_UPDATED        DATE                 NOT NULL,
  COMMENTS                    VARCHAR2(250 CHAR),
  INN                         VARCHAR2(12 CHAR),
  EMEIL                       VARCHAR2(100 CHAR)
);

COMMENT ON TABLE  VIRTUAL_ACCOUNTS IS 'Справочник групп лицевых счетов виртуального оператора';
COMMENT ON COLUMN VIRTUAL_ACCOUNTS.VIRTUAL_ACCOUNTS_ID IS 'Идентификатор записи';
COMMENT ON COLUMN VIRTUAL_ACCOUNTS.VIRTUAL_ACCOUNTS_NAME IS 'Название группы';
COMMENT ON COLUMN VIRTUAL_ACCOUNTS.VIRTUAL_ACCOUNTS_IS_ACTIVE IS 'Признак группы (0 - не дейсвующая, 1- дейсвующая)';
COMMENT ON COLUMN VIRTUAL_ACCOUNTS.USER_CREATED IS 'Пользователь, создавший запись';
COMMENT ON COLUMN VIRTUAL_ACCOUNTS.DATE_CREATED IS 'Дата/время создания записи';
COMMENT ON COLUMN VIRTUAL_ACCOUNTS.USER_LAST_UPDATED IS 'Пользователь, редактировавший запись последним';
COMMENT ON COLUMN VIRTUAL_ACCOUNTS.DATE_LAST_UPDATED IS 'Дата/время последней редакции записи';
COMMENT ON COLUMN VIRTUAL_ACCOUNTS.COMMENTS IS 'Комментарий к счету';
COMMENT ON COLUMN VIRTUAL_ACCOUNTS.INN IS 'ИНН в строчном формате';
COMMENT ON COLUMN VIRTUAL_ACCOUNTS.EMEIL IS 'Емейл ';


CREATE UNIQUE INDEX VIRTUAL_ACCOUNTS_PK ON VIRTUAL_ACCOUNTS (VIRTUAL_ACCOUNTS_ID);
 
ALTER TABLE VIRTUAL_ACCOUNTS ADD (CONSTRAINT VIRTUAL_ACCOUNTS_PK PRIMARY KEY (VIRTUAL_ACCOUNTS_ID) 
  USING INDEX VIRTUAL_ACCOUNTS_PK ENABLE VALIDATE);

  
CREATE SEQUENCE S_NEW_VIRTUAL_ACCOUNTS_ID
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER TUI_VIRTUAL_ACCOUNTS
BEFORE DELETE OR INSERT OR UPDATE
ON VIRTUAL_ACCOUNTS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
 IF INSERTING THEN
    IF NVL(:NEW.VIRTUAL_ACCOUNTS_ID, 0) = 0 then
      :NEW.VIRTUAL_ACCOUNTS_ID := S_NEW_VIRTUAL_ACCOUNTS_ID.NEXTVAL;
    END IF;
    :NEW.USER_CREATED := USER;
    :NEW.DATE_CREATED := SYSDATE;
    :NEW.USER_LAST_UPDATED := USER;
    :NEW.DATE_LAST_UPDATED := SYSDATE;
  END IF;
  if UPDATING THEN
    :NEW.USER_LAST_UPDATED := USER;
    :NEW.DATE_LAST_UPDATED := SYSDATE;
  end if;
  if DELETING then
    if :OLD.VIRTUAL_ACCOUNTS_ID = 0 then
       RAISE_APPLICATION_ERROR(-20001,'Эту запись удалять нельзя!');
    end if;   
  end if;  
   
END ;
/

GRANT SELECT ON S_NEW_VIRTUAL_ACCOUNTS_ID TO BUSINESS_COMM_ROLE;
GRANT DELETE, INSERT, SELECT, UPDATE ON VIRTUAL_ACCOUNTS TO BUSINESS_COMM_ROLE;
GRANT SELECT, UPDATE ON VIRTUAL_ACCOUNTS TO BUSINESS_COMM_ROLE_RO;

ALTER TABLE VIRTUAL_ACCOUNTS
ADD (COMMENTS VARCHAR2(250 CHAR));

ALTER TABLE VIRTUAL_ACCOUNTS ADD (COMMENTS VARCHAR2(250 CHAR));
COMMENT ON COLUMN VIRTUAL_ACCOUNTS.COMMENTS IS 'Комментарий к счету';


 CREATE INDEX I_virtual_accounts_names_inn ON   virtual_accounts
   (VIRTUAL_ACCOUNTS_ID, VIRTUAL_ACCOUNTS_NAME, INN);
   
SET DEFINE OFF;
Insert into VIRTUAL_ACCOUNTS
   (VIRTUAL_ACCOUNTS_ID, VIRTUAL_ACCOUNTS_NAME, VIRTUAL_ACCOUNTS_IS_ACTIVE, COMMENTS)
 Values
   (0, 'НЕОПОЗНАННЫЕ ПЛАТЕЖИ', 1, 'Копилка для платежей с неизвестных ИНН');
COMMIT;
   