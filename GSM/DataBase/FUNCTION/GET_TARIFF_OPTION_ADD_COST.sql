CREATE OR REPLACE FUNCTION GET_TARIFF_OPTION_ADD_COST(
  pACCOUNT_ID IN INTEGER,
  pYEAR_MONTH IN INTEGER,
  pPHONE_NUMBER IN VARCHAR2
  ) RETURN NUMBER IS
--Version=1
  CURSOR C IS
    SELECT PO.TURN_ON_DATE,
           PO.TURN_OFF_DATE,
           TC.MONTHLY_COST,
           TC.OPERATOR_MONTHLY_COST,
           TC.TURN_ON_COST,
           TC.OPERATOR_TURN_ON_COST
      FROM DB_LOADER_ACCOUNT_PHONE_OPTS PO,
           TARIFF_OPTIONS OP,
           TARIFF_OPTION_COSTS TC
      WHERE PO.ACCOUNT_ID = pACCOUNT_ID
        AND PO.YEAR_MONTH = pYEAR_MONTH
        AND PO.PHONE_NUMBER = pPHONE_NUMBER
        AND PO.OPTION_CODE = OP.OPTION_CODE
        AND OP.TARIFF_OPTION_ID = TC.TARIFF_OPTION_ID
        AND (TC.MONTHLY_COST <> TC.OPERATOR_MONTHLY_COST
              OR TC.TURN_ON_COST <> TC.OPERATOR_TURN_ON_COST);
  vDUMMY C%ROWTYPE;   
  ITOG NUMBER(13, 2);    
  vBEGIN DATE;
  vEND DATE;         
  vBEGIN_YM DATE;
  vEND_YM DATE;       
BEGIN 
  ITOG:=0;
  vBEGIN_YM:=TO_DATE(TO_CHAR(pYEAR_MONTH)||'01', 'YYYYMMDD');
  vEND_YM:=LAST_DAY(vBEGIN_YM);
  FOR rec IN C LOOP
    vBEGIN:=rec.TURN_ON_DATE;
    IF vBEGIN < vBEGIN_YM THEN
      vBEGIN:=vBEGIN_YM;
    END IF;
    vEND:=NVL(rec.TURN_OFF_DATE, TO_DATE('20501231', 'YYYYMMDD'));
    IF vEND > vEND_YM THEN
      vEND:=vEND_YM;
    END IF;
    IF rec.TURN_ON_COST <> rec.OPERATOR_TURN_ON_COST THEN
      IF rec.TURN_ON_DATE >= vBEGIN_YM THEN
        ITOG:=ITOG + rec.TURN_ON_COST - rec.OPERATOR_TURN_ON_COST;
      END IF;
    END IF;
    IF rec.MONTHLY_COST <> rec.OPERATOR_MONTHLY_COST THEN
      ITOG:=ITOG + (rec.MONTHLY_COST - rec.OPERATOR_MONTHLY_COST)*(vEND - vBEGIN + 1)/(vEND_YM - vBEGIN_YM + 1);
    END IF;
  END LOOP;
  RETURN ITOG;
END;

--GRANT EXECUTE ON GET_TARIFF_OPTION_ADD_COST TO LONTANA_ROLE;

/