CREATE OR REPLACE PROCEDURE GET_TARIFF_OPTION_COST(
  pOPERATOR_ID IN INTEGER,
  pTARIFF_ID IN INTEGER,
  pOPTION_CODE IN VARCHAR2,
  pDATE IN DATE,
  pTURN_ON_COST OUT NUMBER,
  pMONTHLY_COST OUT NUMBER
  ) IS
--#Version=1
BEGIN
  pTURN_ON_COST := NULL;
  pMONTHLY_COST := NULL;
  FOR REC IN (
    SELECT TARIFF_OPTION_COSTS.TURN_ON_COST, 
           TARIFF_OPTION_COSTS.MONTHLY_COST,
           TARIFF_OPTION_COSTS.TARIFF_OPTION_COST_ID
      FROM TARIFF_OPTIONS,
           TARIFF_OPTION_COSTS
      WHERE TARIFF_OPTIONS.TARIFF_OPTION_ID=TARIFF_OPTION_COSTS.TARIFF_OPTION_ID
        AND TARIFF_OPTIONS.OPERATOR_ID=pOPERATOR_ID
        AND TARIFF_OPTIONS.OPTION_CODE=pOPTION_CODE
        AND TARIFF_OPTION_COSTS.BEGIN_DATE <= pDATE
        AND TARIFF_OPTION_COSTS.END_DATE >= pDATE
  ) LOOP
    pTURN_ON_COST := REC.TURN_ON_COST;
    pMONTHLY_COST := REC.MONTHLY_COST;
    IF pTARIFF_ID IS NOT NULL THEN
      FOR RECNEW IN (
        SELECT TARIFF_OPTION_NEW_COST.TURN_ON_COST, 
               TARIFF_OPTION_NEW_COST.MONTHLY_COST    
          FROM TARIFF_OPTION_NEW_COST               
          WHERE TARIFF_OPTION_NEW_COST.TARIFF_OPTION_COST_ID=REC.TARIFF_OPTION_COST_ID
            AND TARIFF_OPTION_NEW_COST.TARIFF_ID=pTARIFF_ID
      ) LOOP
        pTURN_ON_COST := RECNEW.TURN_ON_COST;
        pMONTHLY_COST := RECNEW.MONTHLY_COST;    
        EXIT;    
      END LOOP; 
    END IF;
    EXIT;
  END LOOP;
--
/* Тестирование
DECLARE
  T NUMBER;
  M NUMBER;
BEGIN
  GET_TARIFF_OPTION_COST(3, 2, 'CLIR_88', SYSDATE, T, M);
  DBMS_OUTPUT.PUT_LINE(T);
  DBMS_OUTPUT.PUT_LINE(M);
END;
*/
--
END;
/

