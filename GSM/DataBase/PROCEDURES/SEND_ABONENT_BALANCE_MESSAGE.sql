CREATE OR REPLACE PROCEDURE SEND_ABONENT_BALANCE_MESSAGE(
  pPHONE_NUMBER IN VARCHAR2,
  pREQUEST_ID IN VARCHAR2,
  pERROR_MESSAGE OUT VARCHAR2,
  pIS_SENT_BEFORE OUT NUMBER
  ) IS
--#Version=4
  CURSOR C IS
    SELECT 1
    FROM ABONENT_BALANCE_MESSAGES
    WHERE ABONENT_BALANCE_MESSAGES.UNIQUE_REQUEST_ID=pREQUEST_ID;
  CURSOR C2 IS
    SELECT 1
    FROM ABONENT_BALANCE_MESSAGES
    WHERE ABONENT_BALANCE_MESSAGES.PHONE_NUMBER=pPHONE_NUMBER
      AND ABONENT_BALANCE_MESSAGES.REQUEST_DATE_TIME>SYSDATE-1/24; -- 1 ЧАС
  vDUMMY BINARY_INTEGER;
  vBALANCE_MESSAGE VARCHAR2(300 CHAR);
  vBALANCE_VALUE NUMBER(10, 2);
  vFOUND BOOLEAN;  
  CURSOR C3 IS
    SELECT *
    FROM DB_LOADER_ACCOUNT_PHONES
    WHERE DB_LOADER_ACCOUNT_PHONES.PHONE_NUMBER = pPHONE_NUMBER
      AND DB_LOADER_ACCOUNT_PHONES.YEAR_MONTH = TO_NUMBER(TO_CHAR(SYSDATE, 'YYYYMM'));
  DUMMY3 C3%ROWTYPE;    
--
BEGIN
  IF pREQUEST_ID IS NULL THEN
    vFOUND := FALSE;
  ELSE
    OPEN C;
    FETCH C INTO vDUMMY;
    vFOUND := C%FOUND;
    CLOSE C;
  END IF;
  IF NOT vFOUND THEN
    vBALANCE_VALUE := GET_ABONENT_BALANCE(pPHONE_NUMBER);
    vBALANCE_MESSAGE := 'Баланс телефона ' || pPHONE_NUMBER || ' равен: ' || vBALANCE_VALUE || ' руб.';
    OPEN C3;
    FETCH C3 INTO DUMMY3;
    IF C3%FOUND THEN
      pERROR_MESSAGE := SUBSTR(LOADER3_PCKG.SEND_SMS(pPHONE_NUMBER, 'Balance', vBALANCE_MESSAGE), 1, 200);
    ELSE
      /*pERROR_MESSAGE := LOADER3_PCKG.GET_PARTNER_BALANCE(pPHONE_NUMBER);
      vBALANCE_MESSAGE:= SUBSTR(pERROR_MESSAGE, INSTR(pERROR_MESSAGE, 'request'), INSTR(pERROR_MESSAGE,  '/code')+5-INSTR(pERROR_MESSAGE, 'request'));
      IF INSTR(pERROR_MESSAGE, '0', INSTR(pERROR_MESSAGE, 'code')) > 0 THEN
        pERROR_MESSAGE:='';
      END IF;*/
      null;
    END IF;
    CLOSE C3;
    INSERT INTO ABONENT_BALANCE_MESSAGES (
      UNIQUE_REQUEST_ID,
      REQUEST_DATE_TIME,
      PHONE_NUMBER,
      BALANCE_VALUE,
      BALANCE_MESSAGE,
      ERROR_MESSAGE
    ) VALUES (
      pREQUEST_ID,
      SYSDATE,
      SUBSTR(pPHONE_NUMBER, -10, 10), /* Последние 10 символов */
      vBALANCE_VALUE,
      vBALANCE_MESSAGE,
      pERROR_MESSAGE
      );
    pIS_SENT_BEFORE := 0;
  ELSE
    pIS_SENT_BEFORE := 1;
  END IF;
END;
/