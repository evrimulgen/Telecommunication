CREATE OR REPLACE PROCEDURE SET_PHONE_HISTORY2(
  pPHONE_NUMBER IN VARCHAR2,
  pPHONE_IS_ACTIVE IN NUMBER,
  pCELL_PLAN_CODE IN VARCHAR2,
  pCONSERVATION IN NUMBER,
  pSYSTEM_BLOCK IN NUMBER,
  pSTATUS_ID IN INTEGER, 
  pDATE_REPORT IN DATE
  ) IS
  PRAGMA AUTONOMOUS_TRANSACTION;
  CURSOR H(PH IN VARCHAR2, CH IN DATE) IS
    SELECT D.*, D.ROWID
      FROM DB_LOADER_ACCOUNT_PHONE_HISTS D
      WHERE D.PHONE_NUMBER = PH
        AND D.BEGIN_DATE <= CH
        AND D.END_DATE >= CH
        AND NOT EXISTS (SELECT 1
                          FROM DB_LOADER_ACCOUNT_PHONE_HISTS D2
                          WHERE D2.PHONE_NUMBER = PH
                            AND D2.BEGIN_DATE <= CH
                            AND D2.END_DATE >= CH
                            AND D2.ROWID <> D.ROWID
                            AND D2.END_DATE > D.END_DATE);
  vDUMMY_H H%ROWTYPE;   
BEGIN              
    OPEN H(pPHONE_NUMBER, pDATE_REPORT);
    FETCH H INTO vDUMMY_H;
    IF H%FOUND THEN
      IF NVL(pPHONE_IS_ACTIVE, 0) <> NVL(vDUMMY_H.PHONE_IS_ACTIVE, 0) 
          OR NVL(pCELL_PLAN_CODE, '0') <> NVL(vDUMMY_H.CELL_PLAN_CODE, '0') 
          OR NVL(pCONSERVATION, 0) <> NVL(vDUMMY_H.CONSERVATION, 0) 
          OR NVL(pSYSTEM_BLOCK, 0) <> NVL(vDUMMY_H.SYSTEM_BLOCK, 0)
          OR NVL(pSTATUS_ID, 0) <> NVL(vDUMMY_H.STATUS_ID, 0) THEN
        if pDATE_REPORT <> vDUMMY_H.END_DATE then
          if (pDATE_REPORT <> vDUMMY_H.begin_DATE) AND(pDATE_REPORT <> vDUMMY_H.begin_DATE + 1/24/60/60) then
            UPDATE DB_LOADER_ACCOUNT_PHONE_HISTS D
              SET D.END_DATE = pDATE_REPORT - 1/24/60/60  --  -1sec
              WHERE D.ROWID = vDUMMY_H.ROWID; /*D.PHONE_NUMBER = :NEW.PHONE_NUMBER
            AND D.BEGIN_DATE <= pDATE_REPORT
            AND D.END_DATE >= pDATE_REPORT;*/
            INSERT INTO DB_LOADER_ACCOUNT_PHONE_HISTS(PHONE_NUMBER, BEGIN_DATE, END_DATE, PHONE_IS_ACTIVE, 
                                                      CELL_PLAN_CODE, CONSERVATION, SYSTEM_BLOCK, STATUS_ID)
              VALUES(pPHONE_NUMBER, pDATE_REPORT, vDUMMY_H.END_DATE, pPHONE_IS_ACTIVE, 
                     pCELL_PLAN_CODE, pCONSERVATION, pSYSTEM_BLOCK, pSTATUS_ID);
          else            
            UPDATE DB_LOADER_ACCOUNT_PHONE_HISTS D
              SET D.PHONE_IS_ACTIVE = pPHONE_IS_ACTIVE,  --  -1sec
                  D.CELL_PLAN_CODE = pCELL_PLAN_CODE,
                  D.CONSERVATION = pCONSERVATION,
                  D.SYSTEM_BLOCK = pSYSTEM_BLOCK,
                  D.STATUS_ID = pSTATUS_ID
              WHERE D.ROWID = vDUMMY_H.ROWID;
          end if;
        end if;
        if vDUMMY_H.END_DATE <> TO_DATE('01.01.3000','DD.MM.YYYY') then        
          UPDATE DB_LOADER_ACCOUNT_PHONE_HISTS D
            SET D.PHONE_IS_ACTIVE = pPHONE_IS_ACTIVE,
                D.CELL_PLAN_CODE = pCELL_PLAN_CODE,
                D.CONSERVATION = pCONSERVATION,
                D.SYSTEM_BLOCK = pSYSTEM_BLOCK,
                D.STATUS_ID = pSTATUS_ID              
            WHERE D.PHONE_NUMBER = pPHONE_NUMBER
              AND D.BEGIN_DATE > pDATE_REPORT
              AND D.END_DATE > pDATE_REPORT;
        end if;   
        COMMIT;        
      END IF;
    ELSE
      INSERT INTO DB_LOADER_ACCOUNT_PHONE_HISTS(PHONE_NUMBER, BEGIN_DATE, END_DATE, PHONE_IS_ACTIVE, 
                                                CELL_PLAN_CODE, CONSERVATION, SYSTEM_BLOCK, STATUS_ID)
        VALUES(pPHONE_NUMBER, pDATE_REPORT, TO_DATE('01.01.3000','DD.MM.YYYY'), pPHONE_IS_ACTIVE, 
               pCELL_PLAN_CODE, pCONSERVATION, pSYSTEM_BLOCK, pSTATUS_ID);
      COMMIT;
    END IF;
    CLOSE H;
end;
/

