CREATE TABLE LOG_WORK_USER_CRM
(
USER_NAME_ID NUMBER,
CRM_PHONEUNREF_ID NUMBER,
BEGIN_DATE DATE,
END_DATE DATE
);

CREATE INDEX I_USER_NAME_ID ON LOG_WORK_USER_CRM
(USER_NAME_ID);

CREATE INDEX I_CRM_PHONEUNREF_ID ON LOG_WORK_USER_CRM
(CRM_PHONEUNREF_ID);

COMMENT ON TABLE LOG_WORK_USER_CRM IS 'лог работы пользователей на рабочих местах (пользовател€х октел) в CRM';

COMMENT ON COLUMN LOG_WORK_USER_CRM.USER_NAME_ID IS 'ID пользовател€';

COMMENT ON COLUMN LOG_WORK_USER_CRM.CRM_PHONEUNREF_ID IS 'ID пользовател€ октелл (рабочее место)';

COMMENT ON COLUMN LOG_WORK_USER_CRM.BEGIN_DATE IS 'ƒата начала работы';

COMMENT ON COLUMN LOG_WORK_USER_CRM.END_DATE IS 'ƒата окончани€';

CREATE SYNONYM CRM_USER.LOG_WORK_USER_CRM FOR LOG_WORK_USER_CRM;

--#if not ColumnExists("LOG_WORK_USER_CRM.DATE_CREATED")
ALTER TABLE LOG_WORK_USER_CRM ADD DATE_CREATED DATE;
COMMENT ON COLUMN LOG_WORK_USER_CRM.DATE_CREATED IS 'ƒата создани€ записи';
--#end if

--#if not ColumnExists("LOG_WORK_USER_CRM.DATE_LAST_UPDATED")
ALTER TABLE LOG_WORK_USER_CRM ADD DATE_LAST_UPDATED DATE;
COMMENT ON COLUMN LOG_WORK_USER_CRM.DATE_LAST_UPDATED IS 'ƒата изменени€ записи';
--#end if

CREATE OR REPLACE TRIGGER TIU_LOG_WORK_USER_CRM
BEFORE INSERT OR UPDATE
ON LOG_WORK_USER_CRM 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
  IF INSERTING THEN
    :NEW.DATE_CREATED := SYSDATE;
  END IF;
  :NEW.DATE_LAST_UPDATED := SYSDATE;
END;

GRANT DELETE, INSERT, SELECT, UPDATE ON LOG_WORK_USER_CRM TO CRM_USER;