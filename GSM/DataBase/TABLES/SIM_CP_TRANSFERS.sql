CREATE TABLE SIM_CP_TRANSFERS(
  TRANSFER_ID INTEGER PRIMARY KEY,
  ACCOUNT_FROM INTEGER NOT NULL,
  ACCOUNT_TO INTEGER NOT NULL,
  TRANSFER_SUM NUMBER(13, 2) NOT NULL,
  DATE_BEGIN DATE,
  DATE_END DATE,
  RESULTAT VARCHAR2(200 CHAR),
  USER_CREATED VARCHAR2(30 CHAR),
  DATE_CREATED DATE,
  USER_LAST_UPDATED VARCHAR2(30 CHAR),
  DATE_LAST_UPDATED DATE
  )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE S_NEW_TRANSFER_ID
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;
    
CREATE OR REPLACE FUNCTION NEW_TRANSFER_ID RETURN INTEGER IS
--#Version=1
  vRES INTEGER;
BEGIN
  SELECT S_NEW_TRANSFER_ID.NEXTVAL INTO vRES
    FROM DUAL;
  RETURN vRES;
END;
/

CREATE OR REPLACE TRIGGER TIU_SIM_CP_TRANSFERS
  BEFORE INSERT OR UPDATE ON SIM_CP_TRANSFERS FOR EACH ROW
--#Version=5
DECLARE
  PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
  IF INSERTING THEN
    IF NVL(:NEW.TRANSFER_ID, 0) = 0 then
      :NEW.TRANSFER_ID := NEW_TRANSFER_ID;
    END IF;
    :NEW.USER_CREATED:=USER;
    :NEW.DATE_CREATED:=SYSDATE;
    :NEW.DATE_BEGIN:=SYSDATE;
  END IF;
  IF UPDATING THEN
    IF INSTR(:NEW.RESULTAT, 'Перевод успешно выполнен')>0 then
      :NEW.TRANSFERED_SUM:=:NEW.TRANSFER_SUM;
    ELSE
      IF INSTR(:NEW.RESULTAT, 'Переведен остаток:')>0 then
        :NEW.TRANSFERED_SUM:=TO_NUMBER(REPLACE(REPLACE(:NEW.RESULTAT, 'Переведен остаток: '),'.',','));
      ELSE
        :NEW.TRANSFERED_SUM:=0;
      END IF;    
    END IF;
  END IF;
  :NEW.USER_LAST_UPDATED:=USER;
  :NEW.DATE_LAST_UPDATED:=SYSDATE;
END;
/

CREATE INDEX I_SIM_CP_TRANSFERS_ACC_FROM ON SIM_CP_TRANSFERS
(ACCOUNT_FROM)
LOGGING
NOPARALLEL;

CREATE INDEX I_SIM_CP_TRANSFERS_ACC_TO ON SIM_CP_TRANSFERS
(ACCOUNT_TO)
LOGGING
NOPARALLEL;

CREATE INDEX I_SIM_CP_TRANSFERS_DATE_END ON SIM_CP_TRANSFERS
(DATE_END)
LOGGING
NOPARALLEL;

CREATE INDEX I_SIM_CP_TRANSFERS_RESULTAT ON SIM_CP_TRANSFERS
(RESULTAT)
LOGGING
NOPARALLEL;

GRANT INSERT, UPDATE ON SIM_CP_TRANSFERS TO LONTANA_ROLE;

ALTER TABLE SIM_CP_TRANSFERS ADD TRANSFERED_SUM NUMBER(13, 2);
