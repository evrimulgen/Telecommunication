CREATE TABLE CURRENT_ABONENT_TARIFFS(
  CURRENT_ABONENT_TARIFF_ID INTEGER PRIMARY KEY NOT NULL,
  TARIFF_ID Integer NOT NULL,
  ABONENT_ID Integer NOT NULL
)
/

-- Table and Columns comments section
  
COMMENT ON COLUMN CURRENT_ABONENT_TARIFFS.CURRENT_ABONENT_TARIFF_ID IS 'Идентификатор записи';
/
COMMENT ON TABLE CURRENT_ABONENT_TARIFFS IS 'Справочник с  текущих тарифов у абонента'
/
COMMENT ON COLUMN CURRENT_ABONENT_TARIFFS.TARIFF_ID IS 'Идентификатор тарифа'
/
COMMENT ON COLUMN CURRENT_ABONENT_TARIFFS.ABONENT_ID IS 'Идентификатор абонента'
/

  
ALTER TABLE CURRENT_ABONENT_TARIFFS ADD (
  CONSTRAINT FK_CURRENT_ABONENT_TARIFF_ID
  FOREIGN KEY (TARIFF_ID) 
  REFERENCES TARIFFS (TARIFF_ID)
  );  
  
ALTER TABLE CURRENT_ABONENT_TARIFFS ADD (
  CONSTRAINT FK_CA_ABONENT_ID
  FOREIGN KEY (ABONENT_ID) 
  REFERENCES IVIDEON_ABONENTS (ABONENT_ID)
  );

ALTER TABLE CURRENT_ABONENT_TARIFFS ADD(

 DATE_TARIFF_ON Date NOT NULL,
 USER_CREATED Varchar2(30 CHAR) NOT NULL,
 DATE_CREATED Date NOT NULL

);

/
COMMENT ON COLUMN CURRENT_ABONENT_TARIFFS.DATE_TARIFF_ON IS 'Дата подключения на тариф'
/
COMMENT ON COLUMN CURRENT_ABONENT_TARIFFS.USER_CREATED IS 'Создавший пользователь'
/
COMMENT ON COLUMN CURRENT_ABONENT_TARIFFS.DATE_CREATED IS 'Дата создания записи'
/

CREATE SEQUENCE S_CURRENT_ABONENT_TARIFFS
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1;


CREATE OR REPLACE TRIGGER TI_CURRENT_ABONENT_TARIFFS
  BEFORE INSERT ON CURRENT_ABONENT_TARIFFS
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
BEGIN
   
  :NEW.USER_CREATED := USER;
  :NEW.DATE_CREATED := SYSDATE;
  
  IF NVL( :NEW.CURRENT_ABONENT_TARIFF_ID, 0) = 0 THEN
    :NEW.CURRENT_ABONENT_TARIFF_ID := S_CURRENT_ABONENT_TARIFFS.NEXTVAL;
  END IF;
  
  
  IF :NEW.DATE_TARIFF_ON IS NULL THEN
    :NEW.DATE_TARIFF_ON := SYSDATE;  
  END IF;


END;
/  