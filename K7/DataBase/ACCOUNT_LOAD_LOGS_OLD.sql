ALTER TABLE CORP_MOBILE.ACCOUNT_LOAD_LOGS
 DROP PRIMARY KEY CASCADE;

DROP TABLE CORP_MOBILE.ACCOUNT_LOAD_LOGS CASCADE CONSTRAINTS;

CREATE TABLE CORP_MOBILE.ACCOUNT_LOAD_LOGS
(
  ACCOUNT_LOAD_LOG_ID   INTEGER,
  ACCOUNT_ID            INTEGER,
  LOAD_DATE_TIME        DATE,
  IS_SUCCESS            NUMBER(1),
  ERROR_TEXT            VARCHAR2(2000 CHAR),
  ACCOUNT_LOAD_TYPE_ID  INTEGER,
  BEELINE_RN            VARCHAR2(30 BYTE),
  BAN                   INTEGER
)
TABLESPACE TS_LOGS
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          39M
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
ENABLE ROW MOVEMENT;

COMMENT ON TABLE CORP_MOBILE.ACCOUNT_LOAD_LOGS IS 'Журнал загрузок информации с сайта оператора';

COMMENT ON COLUMN CORP_MOBILE.ACCOUNT_LOAD_LOGS.ACCOUNT_LOAD_LOG_ID IS 'Код записи (первичный ключ)';

COMMENT ON COLUMN CORP_MOBILE.ACCOUNT_LOAD_LOGS.ACCOUNT_ID IS 'Код лицевого счёта';

COMMENT ON COLUMN CORP_MOBILE.ACCOUNT_LOAD_LOGS.LOAD_DATE_TIME IS 'Дата и время загрузки';

COMMENT ON COLUMN CORP_MOBILE.ACCOUNT_LOAD_LOGS.IS_SUCCESS IS 'Признак успешной загрузки (1 - успешно, 0 - ошибка)';

COMMENT ON COLUMN CORP_MOBILE.ACCOUNT_LOAD_LOGS.ERROR_TEXT IS 'Текст ошибки, если она была';

COMMENT ON COLUMN CORP_MOBILE.ACCOUNT_LOAD_LOGS.ACCOUNT_LOAD_TYPE_ID IS 'Код вида загрузки';

COMMENT ON COLUMN CORP_MOBILE.ACCOUNT_LOAD_LOGS.BEELINE_RN IS 'Код отчета Билайн';

COMMENT ON COLUMN CORP_MOBILE.ACCOUNT_LOAD_LOGS.BAN IS 'Номер бана';



CREATE INDEX CORP_MOBILE.I_ACCOUNT_LOAD_LOGS_BEELINE_RN ON CORP_MOBILE.ACCOUNT_LOAD_LOGS
(BEELINE_RN)
LOGGING
TABLESPACE TS_LOGS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE INDEX CORP_MOBILE.I_ACCOUNT_LOAD_LOGS_TYPE_ER_DT ON CORP_MOBILE.ACCOUNT_LOAD_LOGS
(ACCOUNT_LOAD_TYPE_ID, ERROR_TEXT, LOAD_DATE_TIME)
LOGGING
TABLESPACE TS_LOGS
PCTFREE    10
INITRANS   2
MAXTRANS   166
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL
COMPRESS 2;


CREATE INDEX CORP_MOBILE.I_ACCOUNT_LOAD_LOGS_DT ON CORP_MOBILE.ACCOUNT_LOAD_LOGS
(ACCOUNT_LOAD_TYPE_ID, IS_SUCCESS, LOAD_DATE_TIME)
LOGGING
TABLESPACE TS_LOGS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL
COMPRESS 2;


CREATE INDEX CORP_MOBILE.I_ACCOUNT_LOAD_LOGS_ACC_LOAD_D ON CORP_MOBILE.ACCOUNT_LOAD_LOGS
(ACCOUNT_ID, LOAD_DATE_TIME)
LOGGING
TABLESPACE TS_LOGS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          26M
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL
COMPRESS 1;


CREATE INDEX CORP_MOBILE.I_ACCOUNT_LOAD_LOGS_ACC_LOADD3 ON CORP_MOBILE.ACCOUNT_LOAD_LOGS
(ACCOUNT_ID, LOAD_DATE_TIME, ERROR_TEXT)
LOGGING
TABLESPACE TS_LOGS
PCTFREE    10
INITRANS   2
MAXTRANS   166
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL
COMPRESS 1;


CREATE INDEX CORP_MOBILE.I_ACCOUNT_LOAD_LOGS_ACC_LOADD4 ON CORP_MOBILE.ACCOUNT_LOAD_LOGS
(ACCOUNT_LOAD_TYPE_ID, SUBSTR(NVL("ERROR_TEXT",'Ok!'),1,3), LOAD_DATE_TIME, ACCOUNT_ID)
LOGGING
TABLESPACE TS_LOGS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL
COMPRESS 2;


CREATE UNIQUE INDEX CORP_MOBILE.PK_ACCOUNT_LOAD_LOGS ON CORP_MOBILE.ACCOUNT_LOAD_LOGS
(ACCOUNT_LOAD_LOG_ID)
LOGGING
TABLESPACE TS_LOGS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          16M
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE INDEX CORP_MOBILE.I_ACCOUNT_LOAD_LOGS_ACC_LOADD2 ON CORP_MOBILE.ACCOUNT_LOAD_LOGS
(ACCOUNT_ID, CASE  WHEN ("ERROR_TEXT" LIKE '%Ok!%' OR "ERROR_TEXT" IS NULL) THEN 1 ELSE 0 END , LOAD_DATE_TIME)
LOGGING
TABLESPACE TS_LOGS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL
COMPRESS 2;


CREATE OR REPLACE SYNONYM CORP_MOBILE_C14012016.ACCOUNT_LOAD_LOGS FOR CORP_MOBILE.ACCOUNT_LOAD_LOGS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_C20151112.ACCOUNT_LOAD_LOGS FOR CORP_MOBILE.ACCOUNT_LOAD_LOGS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_C20151125.ACCOUNT_LOAD_LOGS FOR CORP_MOBILE.ACCOUNT_LOAD_LOGS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_C20151214.ACCOUNT_LOAD_LOGS FOR CORP_MOBILE.ACCOUNT_LOAD_LOGS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_C20151214_2.ACCOUNT_LOAD_LOGS FOR CORP_MOBILE.ACCOUNT_LOAD_LOGS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_PET.ACCOUNT_LOAD_LOGS FOR CORP_MOBILE.ACCOUNT_LOAD_LOGS;


ALTER TABLE CORP_MOBILE.ACCOUNT_LOAD_LOGS ADD (
  CHECK (IS_SUCCESS IN (0, 1))
  ENABLE VALIDATE,
  CONSTRAINT PK_ACCOUNT_LOAD_LOGS
  PRIMARY KEY
  (ACCOUNT_LOAD_LOG_ID)
  USING INDEX CORP_MOBILE.PK_ACCOUNT_LOAD_LOGS
  ENABLE VALIDATE);

ALTER TABLE CORP_MOBILE.ACCOUNT_LOAD_LOGS ADD (
  CONSTRAINT FK_ACCOUNT_LOAD_TYPE_ID 
  FOREIGN KEY (ACCOUNT_LOAD_TYPE_ID) 
  REFERENCES CORP_MOBILE.ACCOUNT_LOAD_TYPES (ACCOUNT_LOAD_TYPE_ID)
  ENABLE VALIDATE);

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.ACCOUNT_LOAD_LOGS TO CORP_MOBILE_C14012016;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.ACCOUNT_LOAD_LOGS TO CORP_MOBILE_C20151112;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.ACCOUNT_LOAD_LOGS TO CORP_MOBILE_C20151125;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.ACCOUNT_LOAD_LOGS TO CORP_MOBILE_C20151214;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.ACCOUNT_LOAD_LOGS TO CORP_MOBILE_C20151214_2;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.ACCOUNT_LOAD_LOGS TO CORP_MOBILE_PET;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.ACCOUNT_LOAD_LOGS TO CORP_MOBILE_ROLE;

GRANT SELECT ON CORP_MOBILE.ACCOUNT_LOAD_LOGS TO CORP_MOBILE_ROLE_RO;
