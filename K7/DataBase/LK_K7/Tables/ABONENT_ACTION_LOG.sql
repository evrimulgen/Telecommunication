CREATE TABLE K7_LK.ABONENT_ACTION_LOG (
  ID INTEGER CONSTRAINT PK_ABONENT_ACTIONS_ID PRIMARY KEY,
  USER_ID INTEGER not null, 
  USER_EVENT_ID INTEGER,
  EVENT_DATE DATE NOT NULL,
  USER_CREATED VARCHAR2(30) NOT NULL,
  
  CONSTRAINT FK_USER_EVENT_ID
  FOREIGN KEY
  (USER_EVENT_ID)
  REFERENCES K7_LK.USER_EVENTS (USER_EVENT_ID)
  ENABLE VALIDATE
);
/
COMMENT ON TABLE K7_LK.ABONENT_ACTION_LOG IS 'Лог дейстивй абонента на сайте';
/
COMMENT ON COLUMN K7_LK.ABONENT_ACTION_LOG.ID IS 'Ид записи';
/
COMMENT ON COLUMN K7_LK.ABONENT_ACTION_LOG.USER_ID IS 'Идентификатор пользователя (CONTRACT_ID)';
/
COMMENT ON COLUMN K7_LK.ABONENT_ACTION_LOG.USER_EVENT_ID IS 'Ид записи из USER_EVENTS.USER_EVENT_ID';
/
COMMENT ON COLUMN K7_LK.ABONENT_ACTION_LOG.EVENT_DATE IS 'Дат события';
/
COMMENT ON COLUMN K7_LK.ABONENT_ACTION_LOG.USER_CREATED IS 'Пользователь создавший запись';
/

CREATE SEQUENCE K7_LK.S_ABONENT_ACTION_LOG_ID
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER;
/  


CREATE OR REPLACE TRIGGER K7_LK.TBI_ABONENT_ACTION_LOG
  BEFORE INSERT ON K7_LK.ABONENT_ACTION_LOG  
  FOR EACH ROW
BEGIN
  
  if nvl(:NEW.ID, 0) = 0 then
    :NEW.ID := K7_LK.S_ABONENT_ACTION_LOG_ID.NEXTVAL;  
  end if;
   
  :NEW.USER_CREATED := USER;
  :NEW.EVENT_DATE := SYSDATE;
END;
/