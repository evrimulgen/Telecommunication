CREATE OR REPLACE VIEW K7_LK.LK_USERS
AS
SELECT
--#Version=1
  CONTRACTS.CONTRACT_ID ID,
  CONTRACTS.CONTRACT_DATE BEGIN_DATE,
  CONTRACTS.PHONE_NUMBER_FEDERAL LOGIN,
  CONTRACTS.USER_PASSWORD USER_PASSWORD,
  CONTRACTS.USER_PASSWORD_HASH,
  case nvl(CONTRACTS.IS_CREDIT_CONTRACT, 0)
    when 0 then 'авансовая'
  else
    'кредитная'
  end contract_type_name
    
  ,
  ABONENTS.SURNAME || ' ' || ABONENTS.NAME || ' ' || ABONENTS.PATRONYMIC FIO,
  TARIFFS.TARIFF_ID,
  TARIFFS.TARIFF_NAME,
  TARIFFS.TARIFF_CODE_CRM CRM_UUID,
  CORP_MOBILE.GET_ABONENT_BALANCE (CONTRACTS.PHONE_NUMBER_FEDERAL, null, null, 1) BALANCE,
  NVL((SELECT SUM(PROMISED_SUM) FROM CORP_MOBILE.V_ACTIVE_PROMISED_PAYMENTS WHERE V_ACTIVE_PROMISED_PAYMENTS.PHONE_NUMBER=CONTRACTS.PHONE_NUMBER_FEDERAL), 0) PROMISED_PAYMENT_SUM,
  (SELECT MIN(PROMISED_DATE) FROM CORP_MOBILE.V_ACTIVE_PROMISED_PAYMENTS WHERE V_ACTIVE_PROMISED_PAYMENTS.PHONE_NUMBER=CONTRACTS.PHONE_NUMBER_FEDERAL) PROMISED_PAYMENT_DATE,
  ABONENT_ADD_INFO.NAME ,
  ABONENT_ADD_INFO.EMAIL,
  ABONENT_ADD_INFO.BirthDay,
  ABONENT_ADD_INFO.PASSPORT,
  ABONENT_ADD_INFO.KeyWORD,
  
  GET_ABONENT_WARNING(CONTRACTS.CONTRACT_ID) WARNING_MESSAGE
FROM 
  CORP_MOBILE.CONTRACTS, 
  CORP_MOBILE.CONTRACT_CANCELS CCS, 
  CORP_MOBILE.ABONENTS,
  CORP_MOBILE.TARIFFS,
  K7_LK.ABONENT_ADD_INFO
WHERE 
  (CONTRACTS.USER_PASSWORD IS NOT NULL OR CONTRACTS.USER_PASSWORD_HASH IS NOT NULL)
  AND CONTRACTS.CONTRACT_ID = CCS.CONTRACT_ID(+) 
  AND CCS.CONTRACT_CANCEL_DATE IS NULL
  AND ABONENTS.ABONENT_ID(+)=CONTRACTS.ABONENT_ID
  AND TARIFFS.TARIFF_ID(+)=CONTRACTS.CURR_TARIFF_ID
  AND ABONENT_ADD_INFO.CONTRACT_ID(+)=CONTRACTS.CONTRACT_ID;
/

GRANT SELECT ON CONTRACTS TO K7_LK;
/
GRANT SELECT ON CONTRACT_CANCELS TO K7_LK;
/
GRANT SELECT ON ABONENTS TO K7_LK;
/
GRANT SELECT ON TARIFFS TO K7_LK;
/
GRANT SELECT ON PROMISED_PAYMENTS TO K7_LK;
/
GRANT SELECT ON V_ACTIVE_PROMISED_PAYMENTS TO K7_LK;
/
GRANT EXECUTE ON GET_ABONENT_BALANCE TO K7_LK;
/
