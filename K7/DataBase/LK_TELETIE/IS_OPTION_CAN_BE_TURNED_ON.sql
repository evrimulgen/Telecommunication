CREATE OR REPLACE FUNCTION CORP_MOBILE_LK.IS_OPTION_CAN_BE_TURNED_ON(
  pPHONE_NUMBER IN VARCHAR2,
  pTARIFF_OPTION_ID INTEGER
) RETURN NUMBER IS
--#Version=2
--
-- Проверяем, может ли быть подключена услуга.
-- Если нет, то возвращается 0, если может, то 1
--
CURSOR C_LIMITS IS
  SELECT 
    CONTRACT_ID,
    NVL(DISCONNECT_LIMIT, 0), 
    BALANCE
  FROM 
    CORP_MOBILE.V_PHONE_NUMBER_LIMITS
  WHERE 
    PHONE_NUMBER=pPHONE_NUMBER;
--
CURSOR C_OPTION_COST(pCONTRACT_ID INTEGER) IS
  SELECT 
    NVL(DISCR_SPISANIE, 0) DISCR_SPISANIE,
    TURN_ON_COST,
    MONTHLY_COST
  FROM 
    TABLE(AVAILABLE_OPTIONS_FOR_ABONENT(pCONTRACT_ID))
  WHERE
    TARIFF_OPTION_ID = pTARIFF_OPTION_ID;
--
vCONTRACT_ID INTEGER;
vDISCONNECT_LIMIT NUMBER;
vBALANCE NUMBER;
vTURN_COST NUMBER;
recOPTION_COST C_OPTION_COST%ROWTYPE;
--
vRESULT INTEGER;
--
BEGIN 
  vRESULT := 0;
  OPEN C_LIMITS;
  FETCH C_LIMITS INTO vCONTRACT_ID, vDISCONNECT_LIMIT, vBALANCE;
  CLOSE C_LIMITS;
  IF vDISCONNECT_LIMIT IS NOT NULL AND vBALANCE IS NOT NULL THEN
    -- Теперь стоимость услуги
    OPEN C_OPTION_COST(vCONTRACT_ID);
    FETCH C_OPTION_COST INTO recOPTION_COST;
    CLOSE C_OPTION_COST;
    IF recOPTION_COST.DISCR_SPISANIE IS NOT NULL THEN
      vTURN_COST := recOPTION_COST.TURN_ON_COST;
      -- У услуг с дискретным списанием единоразово списывается и стоимость и абонплата
      IF recOPTION_COST.DISCR_SPISANIE = 1 THEN
        vTURN_COST := vTURN_COST + recOPTION_COST.MONTHLY_COST;
      END IF;
      -- Если баланс минус стоимость услуги меньше порога отключения, то запрещаем подключение
      IF vBALANCE - vTURN_COST > vDISCONNECT_LIMIT THEN
        vRESULT := 1;
      END IF; 
    END IF;
  END IF;
  RETURN vRESULT;
END;
/
