GRANT SELECT, UPDATE(OPTION_NAME_FOR_AB, CAN_BE_TURNED_BY_ABONENT) ON TARIFF_OPTIONS TO CORP_MOBILE_LK;


-- После пересоздания надо всегда создавать заново триггер!!! 
CREATE OR REPLACE VIEW CORP_MOBILE_LK.V_TARIFF_OPTIONS AS
SELECT
--#Version=1
  OPTS.TARIFF_OPTION_ID ID,
  OPTS.OPTION_CODE CODE, 
  OPTS.OPTION_NAME NAME,
  OPTS.OPTION_NAME_FOR_AB NAME_FOR_ABONENT,
  ADD_INFO.CATEGORY_NAME,
  ADD_INFO.DESCRIPTION,
  NVL(OPTS.CAN_BE_TURNED_BY_ABONENT, 0) CAN_BE_TURNED_BY_ABONENT
FROM 
  CORP_MOBILE.TARIFF_OPTIONS OPTS, 
  CORP_MOBILE_LK.TARIFF_OPTION_ADD_INFO ADD_INFO
WHERE 
  ADD_INFO.TARIFF_OPTION_ID(+)=OPTS.TARIFF_OPTION_ID
/

-- select * from CORP_MOBILE_LK.V_TARIFF_OPTIONS

CREATE OR REPLACE TRIGGER CORP_MOBILE_LK.T_V_TARIFF_OPTIONS
INSTEAD OF UPDATE ON CORP_MOBILE_LK.V_TARIFF_OPTIONS
FOR EACH ROW
DECLARE
--#Version=1
  CURSOR cFIND IS
    SELECT TARIFF_OPTION_ID
    FROM TARIFF_OPTION_ADD_INFO
    WHERE TARIFF_OPTION_ADD_INFO.TARIFF_OPTION_ID=:NEW.ID;
  vDUMMY INTEGER;
BEGIN
  OPEN cFIND;
  FETCH cFIND INTO vDUMMY;
  IF cFIND%FOUND THEN
    UPDATE TARIFF_OPTION_ADD_INFO
    SET
      TARIFF_OPTION_ADD_INFO.CATEGORY_NAME = :NEW.CATEGORY_NAME,
      TARIFF_OPTION_ADD_INFO.DESCRIPTION = :NEW.DESCRIPTION
    WHERE
      TARIFF_OPTION_ADD_INFO.TARIFF_OPTION_ID=:NEW.ID;
  ELSE
    INSERT INTO TARIFF_OPTION_ADD_INFO (
      TARIFF_OPTION_ID,
      CATEGORY_NAME,
      DESCRIPTION
    ) VALUES (
      :NEW.ID,
      :NEW.CATEGORY_NAME,
      :NEW.DESCRIPTION
      );
  END IF;
  CLOSE cFIND;
  UPDATE CORP_MOBILE.TARIFF_OPTIONS
    SET OPTION_NAME_FOR_AB = :NEW.NAME_FOR_ABONENT,
      CAN_BE_TURNED_BY_ABONENT = :NEW.CAN_BE_TURNED_BY_ABONENT
    WHERE TARIFF_OPTION_ID=:NEW.ID;
END;
/
