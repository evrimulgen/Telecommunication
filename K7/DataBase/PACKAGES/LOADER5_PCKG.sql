CREATE OR REPLACE PACKAGE LOADER5_PCKG IS
-- Пакет к Дилер-Программе.
--Version=6
-- 1 Крайнов. Создание пакета
--
  FUNCTION GET_ACC_ID_BY_ACC_NUMBER(
    pACCOUNT_NUMBER IN NUMBER
    ) RETURN INTEGER;
--    
  FUNCTION UPDATE_DETAIL_TYPES(
    pTYPE_CONNECTION IN VARCHAR2,
    pTYPE_CALL IN VARCHAR2,
    pCOMMENT_CALL IN VARCHAR2
    ) RETURN INTEGER;
--
  FUNCTION UPDATE_DETAIL(
    pACCOUNT_NUMBER IN VARCHAR2,
    pYEAR_MONTH IN INTEGER,
    pPHONE_NUMBER IN VARCHAR2,
    pDETAIL_TYPE_ID IN INTEGER,
    pCOST IN NUMBER
    ) RETURN VARCHAR2;   
--
  FUNCTION UPDATE_DETAIL_ARRAY(
    pACCOUNT_NUMBER IN VARCHAR2,
    pYEAR_MONTH_ARRAY IN DBMS_SQL.VARCHAR2_TABLE,
    pPHONE_NUMBER_ARRAY IN DBMS_SQL.VARCHAR2_TABLE,
    pDETAIL_TYPE_ID_ARRAY IN DBMS_SQL.NUMBER_TABLE,
    pCOST_ARRAY IN DBMS_SQL.NUMBER_TABLE
    ) RETURN VARCHAR2;
--
  PROCEDURE DELETE_DETAILS_BY_PERIOD(
    pACCOUNT_NUMBER IN NUMBER,
    pYEAR_MONTH IN INTEGER
    );
--
  FUNCTION UPDATE_DETAIL_PACKAGE(
    pACCOUNT_NUMBER IN VARCHAR2,
    pYEAR_MONTH_PACKAGE IN VARCHAR2,
    pPHONE_NUMBER_PACKAGE IN VARCHAR2,
    pDETAIL_TYPE_ID_PACKAGE IN VARCHAR2,
    pCOST_PACKAGE IN VARCHAR2
    ) RETURN VARCHAR2;    
--  
  FUNCTION CALC_DILER_PAYMENT(
    pACCOUNT_ID IN INTEGER,
    pYEAR_MONTH IN INTEGER,
    pPHONE_NUMBER IN VARCHAR2,
    pFULL_SUM IN INTEGER DEFAULT 0
    ) RETURN NUMBER;   
--  
  FUNCTION CALC_OPTION_COST(
    pACCOUNT_ID IN INTEGER,
    pYEAR_MONTH IN INTEGER,
    pPHONE_NUMBER IN VARCHAR2,
    pTARIFF_ID IN INTEGER,
    pFULL_SUM IN INTEGER DEFAULT 0,
    pCHANGE IN INTEGER DEFAULT 1
    ) RETURN NUMBER;
--   
  FUNCTION CALC_INSTALLMENT_DILER(
    pYEAR_MONTH IN INTEGER,
    pPHONE_NUMBER IN VARCHAR2
    ) RETURN NUMBER;
--
  FUNCTION CALC_OLD_MONTH_IN_MINUS(
    pYEAR_MONTH IN INTEGER,
    pPHONE_NUMBER IN VARCHAR2
    ) RETURN NUMBER;
--    
END LOADER5_PCKG;
/

CREATE OR REPLACE PACKAGE BODY LOADER5_PCKG IS
--
  FUNCTION GET_ACC_ID_BY_ACC_NUMBER(
    pACCOUNT_NUMBER IN NUMBER
    ) RETURN INTEGER IS
    CURSOR C IS
      SELECT ACCOUNTS.ACCOUNT_ID
        FROM ACCOUNTS
        WHERE ACCOUNTS.ACCOUNT_NUMBER=pACCOUNT_NUMBER;
    vDUMMY C%ROWTYPE;    
  BEGIN
    OPEN C;
    FETCH C INTO vDUMMY;
    IF C%FOUND THEN
      RETURN vDUMMY.ACCOUNT_ID;
    ELSE
      RETURN 0;
    END IF;  
    CLOSE C;
  END;    
--
  FUNCTION UPDATE_DETAIL_TYPES(
    pTYPE_CONNECTION IN VARCHAR2,
    pTYPE_CALL IN VARCHAR2,
    pCOMMENT_CALL IN VARCHAR2
    ) RETURN INTEGER IS
  --
    CURSOR C IS 
      SELECT DETAIL_TYPE_ID
        FROM DETAIL_TYPES
        WHERE (TYPE_CONNECTION=pTYPE_CONNECTION)
          AND (TYPE_CALL=pTYPE_CALL OR (pTYPE_CALL IS NULL AND TYPE_CALL IS NULL)) 
          AND COMMENT_CALL=pCOMMENT_CALL;
    vDUMMY C%ROWTYPE;      
  BEGIN
    OPEN C;
    FETCH C INTO vDUMMY;
    IF C%FOUND THEN
      RETURN vDUMMY.DETAIL_TYPE_ID;
    ELSE
      CLOSE C;
      INSERT INTO DETAIL_TYPES(TYPE_CONNECTION, TYPE_CALL, COMMENT_CALL)
        VALUES(pTYPE_CONNECTION, pTYPE_CALL, pCOMMENT_CALL);
      OPEN C;
      FETCH C INTO vDUMMY;
      IF C%FOUND THEN
        RETURN vDUMMY.DETAIL_TYPE_ID;
      ELSE
        RETURN 0;
      END IF;  
    END IF;
    CLOSE C;                            
  END UPDATE_DETAIL_TYPES;
--
  FUNCTION UPDATE_DETAILS_INFO(
    pACCOUNT_ID IN INTEGER,
    pYEAR_MONTH IN VARCHAR2,
    pPHONE_NUMBER IN VARCHAR2
    ) RETURN INTEGER IS
  --
    CURSOR C IS 
      SELECT DETAILS_INFO.DETAIL_INFO_ID
        FROM DETAILS_INFO
        WHERE DETAILS_INFO.ACCOUNT_ID=pACCOUNT_ID
          AND DETAILS_INFO.YEAR_MONTH=pYEAR_MONTH
          AND DETAILS_INFO.PHONE_NUMBER=pPHONE_NUMBER;
    vDUMMY C%ROWTYPE;      
  BEGIN
    OPEN C;
    FETCH C INTO vDUMMY;
    IF C%FOUND THEN
      RETURN vDUMMY.DETAIL_INFO_ID;
    ELSE
      CLOSE C;
      INSERT INTO DETAILS_INFO(ACCOUNT_ID, YEAR_MONTH, PHONE_NUMBER)
        VALUES(pACCOUNT_ID, pYEAR_MONTH, pPHONE_NUMBER);
      OPEN C;
      FETCH C INTO vDUMMY;
      IF C%FOUND THEN
        RETURN vDUMMY.DETAIL_INFO_ID;
      ELSE
        RETURN 0;
      END IF;  
    END IF;
    CLOSE C;                            
  END UPDATE_DETAILS_INFO;
--  
  FUNCTION UPDATE_DETAIL(
    pACCOUNT_NUMBER IN VARCHAR2,
    pYEAR_MONTH IN INTEGER,
    pPHONE_NUMBER IN VARCHAR2,
    pDETAIL_TYPE_ID IN INTEGER,
    pCOST IN NUMBER
    ) RETURN VARCHAR2 IS
    CURSOR C(pDETAIL_INFO_ID IN INTEGER, pDETAIL_TYPE_ID IN INTEGER) IS
      SELECT DETAIL_STATS.DETAIL_STATS_ID,
             DETAIL_STATS.SUM_COST
        FROM DETAIL_STATS
        WHERE DETAIL_STATS.DETAIL_INFO_ID=pDETAIL_INFO_ID
          AND DETAIL_STATS.DETAIL_TYPE_ID=pDETAIL_TYPE_ID;       
    I INTEGER;
    vACCOUNT_ID INTEGER;
    vDUMMY C%ROWTYPE;
    vDETAIL_INFO_ID INTEGER;
  BEGIN
    vACCOUNT_ID:=LOADER5_PCKG.GET_ACC_ID_BY_ACC_NUMBER(TO_NUMBER(pACCOUNT_NUMBER));
    IF vACCOUNT_ID<>0 THEN
      IF pYEAR_MONTH IS NOT NULL
          AND pPHONE_NUMBER IS NOT NULL
          AND pDETAIL_TYPE_ID IS NOT NULL
          AND pCOST IS NOT NULL THEN
        vDETAIL_INFO_ID:=UPDATE_DETAILS_INFO(vACCOUNT_ID, 
                                             pYEAR_MONTH,
                                             pPHONE_NUMBER);
        OPEN C(vDETAIL_INFO_ID, pDETAIL_TYPE_ID);
        FETCH C INTO vDUMMY;
        IF C%FOUND THEN
          UPDATE DETAIL_STATS
            SET SUM_COST=vDUMMY.SUM_COST+pCOST
            WHERE DETAIL_STATS_ID=vDUMMY.DETAIL_STATS_ID;
        ELSE                                     
          INSERT INTO DETAIL_STATS(DETAIL_INFO_ID, DETAIL_TYPE_ID, SUM_COST)
            VALUES(vDETAIL_INFO_ID, pDETAIL_TYPE_ID, pCOST);    
        END IF;     
        CLOSE C;                            
      END IF;
      RETURN NULL;
    ELSE
      RETURN 'Договора с таким номером в базе не существует';
    END IF;
  EXCEPTION WHEN OTHERS THEN
    RETURN SQLERRM;      
  END;        
-- 
  FUNCTION UPDATE_DETAIL_ARRAY(
    pACCOUNT_NUMBER IN VARCHAR2,
    pYEAR_MONTH_ARRAY IN DBMS_SQL.VARCHAR2_TABLE,
    pPHONE_NUMBER_ARRAY IN DBMS_SQL.VARCHAR2_TABLE,
    pDETAIL_TYPE_ID_ARRAY IN DBMS_SQL.NUMBER_TABLE,
    pCOST_ARRAY IN DBMS_SQL.NUMBER_TABLE
    ) RETURN VARCHAR2 IS     
    I INTEGER;
    vACCOUNT_ID INTEGER;
    vRESULT VARCHAR2(300 CHAR);
  BEGIN
    vACCOUNT_ID:=GET_ACC_ID_BY_ACC_NUMBER(pACCOUNT_NUMBER);
    IF vACCOUNT_ID<>0 THEN
      FOR I IN pYEAR_MONTH_ARRAY.FIRST..pYEAR_MONTH_ARRAY.LAST LOOP
        vRESULT:=UPDATE_DETAIL(pACCOUNT_NUMBER,
                               pYEAR_MONTH_ARRAY(I),
                               pPHONE_NUMBER_ARRAY(I),
                               pDETAIL_TYPE_ID_ARRAY(I),
                               pCOST_ARRAY(I));
        IF vRESULT IS NOT NULL THEN  
          RETURN vRESULT;                        
        END IF;
      END LOOP;
      RETURN NULL;
    ELSE
      RETURN 'Договора с таким номером в базе не существует';
    END IF;
  END;  
-- 
  FUNCTION UPDATE_DETAIL_PACKAGE(
    pACCOUNT_NUMBER IN VARCHAR2,
    pYEAR_MONTH_PACKAGE IN VARCHAR2,
    pPHONE_NUMBER_PACKAGE IN VARCHAR2,
    pDETAIL_TYPE_ID_PACKAGE IN VARCHAR2,
    pCOST_PACKAGE IN VARCHAR2
    ) RETURN VARCHAR2 IS     
    I INTEGER;
    J INTEGER;
    vACCOUNT_ID INTEGER;
    vRESULT VARCHAR2(300 CHAR);
    vYEAR_MONTH_PACKAGE VARCHAR2(2000 CHAR);
    vPHONE_NUMBER_PACKAGE VARCHAR2(2000 CHAR);
    vDETAIL_TYPE_ID_PACKAGE VARCHAR2(2000 CHAR);
    vCOST_PACKAGE VARCHAR2(2000 CHAR);   
    vYEAR_MONTH INTEGER;
    vPHONE_NUMBER VARCHAR2(10 CHAR);
    vDETAIL_TYPE_ID INTEGER;
    vCOST NUMBER(13, 2);    
    DELIMITER VARCHAR2(1 CHAR);   
  BEGIN
    vRESULT:='Данные неправильны';
    DELIMITER:=';';
    vACCOUNT_ID:=GET_ACC_ID_BY_ACC_NUMBER(pACCOUNT_NUMBER);
    IF vACCOUNT_ID<>0 THEN
      vYEAR_MONTH_PACKAGE:=pYEAR_MONTH_PACKAGE;
      vPHONE_NUMBER_PACKAGE:=pPHONE_NUMBER_PACKAGE;
      vDETAIL_TYPE_ID_PACKAGE:=pDETAIL_TYPE_ID_PACKAGE;
      vCOST_PACKAGE:=pCOST_PACKAGE;
      LOOP
        J:=INSTR(vYEAR_MONTH_PACKAGE, DELIMITER);
        IF J<>0 THEN
          vYEAR_MONTH:=TO_NUMBER(SUBSTR(vYEAR_MONTH_PACKAGE, 1, J-1));
          vYEAR_MONTH_PACKAGE:=SUBSTR(vYEAR_MONTH_PACKAGE, J+1, LENGTH(vYEAR_MONTH_PACKAGE)-J);
        ELSE
          vYEAR_MONTH:=TO_NUMBER(vYEAR_MONTH_PACKAGE);
          vYEAR_MONTH_PACKAGE:=NULL;
        END IF;
        J:=INSTR(vPHONE_NUMBER_PACKAGE, DELIMITER);
        IF J<>0 THEN
          vPHONE_NUMBER:=SUBSTR(vPHONE_NUMBER_PACKAGE, 1, J-1);
          vPHONE_NUMBER_PACKAGE:=SUBSTR(vPHONE_NUMBER_PACKAGE, J+1, LENGTH(vPHONE_NUMBER_PACKAGE)-J);
        ELSE
          vPHONE_NUMBER:=vPHONE_NUMBER_PACKAGE;
          vPHONE_NUMBER_PACKAGE:=NULL;
        END IF;
        J:=INSTR(vDETAIL_TYPE_ID_PACKAGE, DELIMITER);
        IF J<>0 THEN
          vDETAIL_TYPE_ID:=TO_NUMBER(SUBSTR(vDETAIL_TYPE_ID_PACKAGE, 1, J-1));
          vDETAIL_TYPE_ID_PACKAGE:=SUBSTR(vDETAIL_TYPE_ID_PACKAGE, J+1, LENGTH(vDETAIL_TYPE_ID_PACKAGE)-J);
        ELSE
          vDETAIL_TYPE_ID:=TO_NUMBER(vDETAIL_TYPE_ID_PACKAGE);
          vDETAIL_TYPE_ID_PACKAGE:=NULL;
        END IF;
        J:=INSTR(vCOST_PACKAGE, DELIMITER);
        IF J<>0 THEN
          vCOST:=TO_NUMBER(SUBSTR(vCOST_PACKAGE, 1, J-1));
          vCOST_PACKAGE:=SUBSTR(vCOST_PACKAGE, J+1, LENGTH(vCOST_PACKAGE)-J);
        ELSE
          vCOST:=TO_NUMBER(vCOST_PACKAGE);
          vCOST_PACKAGE:=NULL;
        END IF;
        IF (vYEAR_MONTH IS NOT NULL)AND(vPHONE_NUMBER IS NOT NULL)
            AND(vDETAIL_TYPE_ID IS NOT NULL)AND(vCOST IS NOT NULL) THEN
          vRESULT:=UPDATE_DETAIL(vACCOUNT_ID, vYEAR_MONTH, vPHONE_NUMBER, vDETAIL_TYPE_ID, vCOST);
        END IF;
        EXIT WHEN (vYEAR_MONTH_PACKAGE IS NULL)OR(vPHONE_NUMBER_PACKAGE IS NULL)
                    OR(vDETAIL_TYPE_ID_PACKAGE IS NULL)OR(vCOST_PACKAGE IS NULL)OR(vRESULT IS NOT NULL);
      END LOOP;
      IF vRESULT IS NULL THEN
        RETURN NULL;
      ELSE
        RETURN vRESULT;
      END IF;
    ELSE
      RETURN 'Договора с таким номером в базе не существует';
    END IF; 
  END;    
--
  PROCEDURE DELETE_DETAILS_BY_PERIOD(
    pACCOUNT_NUMBER IN NUMBER,
    pYEAR_MONTH IN INTEGER
    ) IS
    vACCOUNT_ID INTEGER;
  BEGIN
    vACCOUNT_ID:=GET_ACC_ID_BY_ACC_NUMBER(pACCOUNT_NUMBER);
    FOR rec IN(SELECT DETAILS_INFO.DETAIL_INFO_ID
                 FROM DETAILS_INFO
                 WHERE DETAILS_INFO.ACCOUNT_ID=vACCOUNT_ID
                   AND DETAILS_INFO.YEAR_MONTH=pYEAR_MONTH
              )
    LOOP
      DELETE DETAIL_STATS
        WHERE DETAIL_STATS.DETAIL_INFO_ID=rec.DETAIL_INFO_ID;
    END LOOP;
    DELETE DETAILS_INFO
      WHERE DETAILS_INFO.ACCOUNT_ID=vACCOUNT_ID
        AND DETAILS_INFO.YEAR_MONTH=pYEAR_MONTH;         
  END;  
--
  FUNCTION CALC_DILER_PAYMENT(
    pACCOUNT_ID IN INTEGER,
    pYEAR_MONTH IN INTEGER,
    pPHONE_NUMBER IN VARCHAR2,
    pFULL_SUM IN INTEGER DEFAULT 0
    ) RETURN NUMBER IS
    vSUM NUMBER(13, 2);
  BEGIN
    vSUM:=0;
    FOR rec IN(SELECT DETAIL_STATS.SUM_COST,
                      DETAIL_TYPES.DILER_PAY
                 FROM DETAIL_STATS,
                      DETAILS_INFO,
                      DETAIL_TYPES
                 WHERE DETAIL_STATS.DETAIL_INFO_ID=DETAILS_INFO.DETAIL_INFO_ID
                   AND DETAILS_INFO.ACCOUNT_ID=pACCOUNT_ID
                   AND DETAILS_INFO.YEAR_MONTH=pYEAR_MONTH
                   AND DETAILS_INFO.PHONE_NUMBER=pPHONE_NUMBER
                   AND DETAIL_STATS.DETAIL_TYPE_ID=DETAIL_TYPES.DETAIL_TYPE_ID)
    LOOP
      IF (rec.DILER_PAY=1)OR(pFULL_SUM=1) THEN
        vSUM:=vSUM+rec.SUM_COST;
      END IF;
    END LOOP;    
    RETURN vSUM;
  END;   
--
  FUNCTION CALC_OPTION_COST(
    pACCOUNT_ID IN INTEGER,
    pYEAR_MONTH IN INTEGER,
    pPHONE_NUMBER IN VARCHAR2,
    pTARIFF_ID IN INTEGER,
    pFULL_SUM IN INTEGER DEFAULT 0,
    pCHANGE IN INTEGER DEFAULT 1
    ) RETURN NUMBER IS
    vSUM NUMBER(16, 5);
    vACTIV DBMS_SQL.NUMBER_TABLE;
    vCOUNT INTEGER;
    I INTEGER;
    J INTEGER;
    MONTH_BEGIN DATE;
    MONTH_END DATE;
    DAY_OPTS DATE;
  BEGIN
    MONTH_BEGIN:=TO_DATE(TO_CHAR(pYEAR_MONTH)||'01', 'YYYYMMDD');
    MONTH_END:=LAST_DAY(MONTH_BEGIN);
    vCOUNT:=TRUNC(MONTH_END)-TRUNC(MONTH_BEGIN)+1;
    FOR I IN 1..vCOUNT
    LOOP
      vACTIV(I):=0;    
    END LOOP;
    FOR rec IN(SELECT DB_LOADER_ACCOUNT_PHONE_HISTS.BEGIN_DATE,
                      DB_LOADER_ACCOUNT_PHONE_HISTS.END_DATE
                 FROM DB_LOADER_ACCOUNT_PHONE_HISTS
                 WHERE DB_LOADER_ACCOUNT_PHONE_HISTS.PHONE_NUMBER=pPHONE_NUMBER
                   AND DB_LOADER_ACCOUNT_PHONE_HISTS.END_DATE>=MONTH_BEGIN
                   AND DB_LOADER_ACCOUNT_PHONE_HISTS.BEGIN_DATE<=MONTH_END
                   AND DB_LOADER_ACCOUNT_PHONE_HISTS.PHONE_IS_ACTIVE=1)
    LOOP      
      IF rec.BEGIN_DATE<MONTH_BEGIN THEN
        rec.BEGIN_DATE:=MONTH_BEGIN;
      END IF;
      IF rec.END_DATE>MONTH_END THEN
        rec.END_DATE:=MONTH_END;
      END IF;
      IF rec.BEGIN_DATE<=rec.END_DATE THEN
        FOR J IN TO_NUMBER(TO_CHAR(rec.BEGIN_DATE, 'DD'))..TO_NUMBER(TO_CHAR(rec.END_DATE, 'DD'))
        LOOP
          vACTIV(J):=1;    
        END LOOP;
      END IF;
    END LOOP;     
    vSUM:=0;
    FOR rec IN(SELECT TARIFF_OPTION_COSTS.TARIFF_OPTION_COST_ID,
                      TARIFF_OPTION_COSTS.BEGIN_DATE,
                      TARIFF_OPTION_COSTS.END_DATE,
                      TARIFF_OPTION_COSTS.TURN_ON_COST,
                      TARIFF_OPTION_COSTS.MONTHLY_COST,
                      TARIFF_OPTION_COSTS.OPERATOR_TURN_ON_COST,
                      TARIFF_OPTION_COSTS.OPERATOR_MONTHLY_COST,
                      DB_LOADER_ACCOUNT_PHONE_OPTS.TURN_ON_DATE,
                      DB_LOADER_ACCOUNT_PHONE_OPTS.TURN_OFF_DATE,
                      DB_LOADER_ACCOUNT_PHONE_OPTS.OPTION_CODE,
                      NVL(TARIFF_OPTIONS.KOEF_KOMISS, 0) KOEF_KOMISS   
                 FROM DB_LOADER_ACCOUNT_PHONE_OPTS, 
                      TARIFF_OPTIONS, 
                      TARIFF_OPTION_COSTS
                 WHERE DB_LOADER_ACCOUNT_PHONE_OPTS.ACCOUNT_ID=pACCOUNT_ID
                   AND DB_LOADER_ACCOUNT_PHONE_OPTS.PHONE_NUMBER=pPHONE_NUMBER
                   AND DB_LOADER_ACCOUNT_PHONE_OPTS.YEAR_MONTH=pYEAR_MONTH
                   AND DB_LOADER_ACCOUNT_PHONE_OPTS.TURN_ON_DATE<=MONTH_END
                   AND ((DB_LOADER_ACCOUNT_PHONE_OPTS.TURN_OFF_DATE>=MONTH_BEGIN)
                       OR (DB_LOADER_ACCOUNT_PHONE_OPTS.TURN_OFF_DATE IS NULL))
                   AND DB_LOADER_ACCOUNT_PHONE_OPTS.OPTION_CODE=TARIFF_OPTIONS.OPTION_CODE
                   and NVL(TARIFF_OPTIONS.KOEF_KOMISS, 0)>=pFULL_SUM
                   AND TARIFF_OPTIONS.TARIFF_OPTION_ID=TARIFF_OPTION_COSTS.TARIFF_OPTION_ID
                   AND TARIFF_OPTION_COSTS.BEGIN_DATE<=MONTH_END
                   AND ((TARIFF_OPTION_COSTS.END_DATE>=MONTH_BEGIN)
                       OR (TARIFF_OPTION_COSTS.END_DATE IS NULL)))
    LOOP
      IF NOT((pTARIFF_ID=458 OR pTARIFF_ID=459 OR pTARIFF_ID=478 OR pTARIFF_ID = 599 OR pTARIFF_ID = 699
               OR pTARIFF_ID = 700 OR pTARIFF_ID = 701 OR pTARIFF_ID = 820 OR pTARIFF_ID=903 OR pTARIFF_ID=904)
              AND (rec.OPTION_CODE='PLUS' OR rec.OPTION_CODE='SMSR300')) THEN
        FOR J IN 1..vCOUNT
        LOOP
          IF vACTIV(J)=1 THEN
            DAY_OPTS:=TO_DATE(TO_CHAR(pYEAR_MONTH*100+J), 'YYYYMMDD');
            IF (rec.TURN_ON_DATE<=DAY_OPTS)AND(rec.TURN_OFF_DATE>=DAY_OPTS or rec.TURN_OFF_DATE is null) THEN
              vSUM:=vSUM+(CASE 
                            WHEN pCHANGE=0 THEN rec.OPERATOR_MONTHLY_COST
                            ELSE rec.MONTHLY_COST
                          END)/vCOUNT;
            END IF;
          END IF;    
        END LOOP;
      END IF;
    END LOOP;    
    RETURN TRUNC(vSUM, 2);
  END;   
--   
  FUNCTION CALC_INSTALLMENT_DILER(
    pYEAR_MONTH IN INTEGER,
    pPHONE_NUMBER IN VARCHAR2
    ) RETURN NUMBER IS
  ITOG NUMBER;  
  BEGIN
    ITOG:=0;
    RETURN ITOG;
  END;  
--   
  FUNCTION CALC_OLD_MONTH_IN_MINUS(
    pYEAR_MONTH IN INTEGER,
    pPHONE_NUMBER IN VARCHAR2
    ) RETURN NUMBER IS
  ITOG NUMBER;  
  BEGIN
    ITOG:=0;
    RETURN ITOG;
  END;  
--
END;
/

--GRANT EXECUTE ON LOADER5_PCKG TO CORP_MOBILE_ROLE;

--GRANT EXECUTE ON LOADER5_PCKG TO CORP_MOBILE_ROLE_RO;