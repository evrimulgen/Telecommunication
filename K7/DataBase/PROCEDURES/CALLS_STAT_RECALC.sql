CREATE OR REPLACE PROCEDURE CALLS_STAT_RECALC(
  pYEAR_MONTH IN INTEGER,
  pSUBSCR_NO IN NUMBER DEFAULT -1 
  ) IS
  CURSOR CUR(pAT_FT_CODE IN VARCHAR2) IS
    SELECT CS.*, CS.ROWID
      FROM CALL_STATISTICS CS
      WHERE CS.YEAR_MONTH = pYEAR_MONTH
        AND CS.SUBSCR_NO = pSUBSCR_NO
        AND CS.AT_FT_CODE = pAT_FT_CODE;
  vDUMMY CUR%ROWTYPE;  
  vYEAR_MONTH_STR VARCHAR2(7 CHAR);      
BEGIN
  DELETE FROM CALL_STATISTICS_TEMP;
  vYEAR_MONTH_STR:=TO_CHAR(TRUNC(pYEAR_MONTH/100))||'_'||SUBSTR('00'||TO_CHAR(pYEAR_MONTH-TRUNC(pYEAR_MONTH/100)*100), -2, 2);
  IF pSUBSCR_NO <> -1 THEN
    EXECUTE IMMEDIATE
      'INSERT INTO CALL_STATISTICS_TEMP(YEAR_MONTH, SUBSCR_NO, AT_FT_CODE, CALL_SUM, 
                                        DATA_VOL, ZERO_COST_DATA_VOL, 
                                        AT_C_DR_SC, ZERO_COST_AT_C_DR_SC, 
                                        AT_CDRRD_M, ZERO_COST_AT_CDRRD_M, 
                                        AMOUNT, ZERO_COST_AMOUNT)
         SELECT :vYEAR_MONTH, C.SUBSCR_NO, C.AT_FT_CODE, SUM(C.CALL_COST),
                SUM(C.DATA_VOL), SUM(CASE WHEN C.CALL_COST = 0 THEN C.DATA_VOL ELSE 0 END),
                SUM(C.AT_C_DR_SC), SUM(CASE WHEN C.CALL_COST = 0 THEN C.AT_C_DR_SC ELSE 0 END), 
                SUM(C.AT_CDRRD_M), SUM(CASE WHEN C.CALL_COST = 0 THEN C.AT_CDRRD_M ELSE 0 END), 
                SUM(1), SUM(CASE WHEN C.CALL_COST = 0 THEN 1 ELSE 0 END)
           FROM CALL_' || vYEAR_MONTH_STR || ' C
           WHERE C.SUBSCR_NO = :vSUBSCR_NO
           GROUP BY C.SUBSCR_NO, C.AT_FT_CODE'
      USING pYEAR_MONTH, pSUBSCR_NO;
  ELSE
    EXECUTE IMMEDIATE
      'INSERT INTO CALL_STATISTICS_TEMP(YEAR_MONTH, SUBSCR_NO, AT_FT_CODE, CALL_SUM, 
                                        DATA_VOL, ZERO_COST_DATA_VOL, 
                                        AT_C_DR_SC, ZERO_COST_AT_C_DR_SC, 
                                        AT_CDRRD_M, ZERO_COST_AT_CDRRD_M,
                                        AMOUNT, ZERO_COST_AMOUNT)
         SELECT :vYEAR_MONTH, C.SUBSCR_NO, C.AT_FT_CODE, SUM(C.CALL_COST),
                SUM(C.DATA_VOL), SUM(CASE WHEN C.CALL_COST = 0 THEN C.DATA_VOL ELSE 0 END),
                SUM(C.AT_C_DR_SC), SUM(CASE WHEN C.CALL_COST = 0 THEN C.AT_C_DR_SC ELSE 0 END), 
                SUM(C.AT_CDRRD_M), SUM(CASE WHEN C.CALL_COST = 0 THEN C.AT_CDRRD_M ELSE 0 END), 
                SUM(1), SUM(CASE WHEN C.CALL_COST = 0 THEN 1 ELSE 0 END)
           FROM CALL_' || vYEAR_MONTH_STR || ' C
           GROUP BY C.SUBSCR_NO, C.AT_FT_CODE'
      USING pYEAR_MONTH;
  END IF;      
  MERGE INTO CALL_STATISTICS CS
    USING (SELECT * FROM CALL_STATISTICS_TEMP) CST
      ON (CS.YEAR_MONTH = CST.YEAR_MONTH 
            AND CS.SUBSCR_NO = CST.SUBSCR_NO 
            AND CS.AT_FT_CODE = CST.AT_FT_CODE)
    WHEN MATCHED THEN 
      UPDATE SET CS.CALL_SUM = CST.CALL_SUM, 
                 CS.DATA_VOL = CST.DATA_VOL, CS.ZERO_COST_DATA_VOL = CST.ZERO_COST_DATA_VOL,
                 CS.AT_C_DR_SC = CST.AT_C_DR_SC, CS.ZERO_COST_AT_C_DR_SC = CST.ZERO_COST_AT_C_DR_SC,
                 CS.AT_CDRRD_M = CST.AT_CDRRD_M, CS.ZERO_COST_AT_CDRRD_M = CST.ZERO_COST_AT_CDRRD_M,
                 CS.AMOUNT = CST.AMOUNT, CS.ZERO_COST_AMOUNT = CST.ZERO_COST_AMOUNT
    WHEN NOT MATCHED THEN
      INSERT(CS.YEAR_MONTH, CS.SUBSCR_NO, CS.AT_FT_CODE, CS.CALL_SUM, 
             CS.DATA_VOL, CS.ZERO_COST_DATA_VOL, CS.AT_C_DR_SC, CS.ZERO_COST_AT_C_DR_SC, 
             CS.AT_CDRRD_M, CS.ZERO_COST_AT_CDRRD_M, CS.AMOUNT, CS.ZERO_COST_AMOUNT)
        VALUES(CST.YEAR_MONTH, CST.SUBSCR_NO, CST.AT_FT_CODE, CST.CALL_SUM, 
               CST.DATA_VOL, CST.ZERO_COST_DATA_VOL, CST.AT_C_DR_SC, CST.ZERO_COST_AT_C_DR_SC, 
               CST.AT_CDRRD_M, CST.ZERO_COST_AT_CDRRD_M, CST.AMOUNT, CST.ZERO_COST_AMOUNT);                   
  COMMIT;           
END;                          

--GRANT EXECUTE ON CALLS_STAT_RECALC TO CORP_MOBILE_ROLE;