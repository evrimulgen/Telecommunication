
  CREATE OR REPLACE FUNCTION "CORP_MOBILE"."CALC_BALANCE_ROWS_TABLE_BY_DA2" (
  pPHONE_NUMBER IN VARCHAR2
  ) RETURN BALANCE_ROW_TAB PIPELINED AS
--#Version=1
--
-- Возвращает расшифровку баланса из CALC_BALANCE_ROWS2, но абонплату распределяет 
-- по дням, по одной строке на каждый день.
--
  vDATE_ROWS DBMS_SQL.DATE_TABLE;
  vCOST_ROWS DBMS_SQL.NUMBER_TABLE;
  vDESCRIPTION_ROWS DBMS_SQL.VARCHAR2_TABLE;
  TYPE CALL_CURSOR_TYPE  IS REF CURSOR;
  vCALL_CURSOR CALL_CURSOR_TYPE;
  I BINARY_INTEGER;
  cABONPAYMENT_PATTERN CONSTANT VARCHAR2(100 CHAR) := '(.* Абонплата.*) [cс] (\d\d\.\d\d\.\d\d\d\d) по (\d\d\.\d\d\.\d\d\d\d)(.*)';
  cDETAIL_PATTERN CONSTANT VARCHAR2(100) := 'Детализация звонков за (\d\d)\.(\d\d\d\d).*';
  vDESCRIPTION VARCHAR2(4000);
  vDESCRIPTION1 VARCHAR2(4000);
  vDESCRIPTION2 VARCHAR2(4000);
  BEGIN_DATE DATE;
  vDATE DATE;
  END_DATE DATE;
  vCOST NUMBER;
  vTABLE_NAME VARCHAR2(100 CHAR);
  vSQL VARCHAR2(500 CHAR);
BEGIN
  CALC_BALANCE_ROWS2(pPHONE_NUMBER, vDATE_ROWS, vCOST_ROWS, vDESCRIPTION_ROWS);
  -- 
  I := vDATE_ROWS.FIRST;
  WHILE I IS NOT NULL LOOP
    vDESCRIPTION := vDESCRIPTION_ROWS(I);
    IF REGEXP_LIKE(vDESCRIPTION, cABONPAYMENT_PATTERN) THEN
      BEGIN_DATE := TO_DATE(REGEXP_REPLACE(vDESCRIPTION, cABONPAYMENT_PATTERN, '\2'), 'DD.MM.YYYY');
      END_DATE := TO_DATE(REGEXP_REPLACE(vDESCRIPTION, cABONPAYMENT_PATTERN, '\3'), 'DD.MM.YYYY');
      vDESCRIPTION1 := REGEXP_REPLACE(vDESCRIPTION, cABONPAYMENT_PATTERN, '\1');
      vDESCRIPTION2 := REGEXP_REPLACE(vDESCRIPTION, cABONPAYMENT_PATTERN, '\4');
      vCOST := vCOST_ROWS(I) / (END_DATE-BEGIN_DATE+1);
      -- Перебираем все дни
      vDATE := BEGIN_DATE;
      WHILE vDATE <= END_DATE LOOP
        PIPE ROW(
          BALANCE_ROW_TYPE(
            vDATE,
            vCOST,
            vDESCRIPTION1 || ' за ' || TO_CHAR(vDATE, 'DD.MM.YYYY') || vDESCRIPTION2
            )
          );
        vDATE := vDATE + 1;
      END LOOP;
    ELSIF REGEXP_LIKE(vDESCRIPTION, cDETAIL_PATTERN) THEN
      -- Звонки достаем из нужной таблицы на момент загрузки 
      vTABLE_NAME := REGEXP_REPLACE(vDESCRIPTION, cDETAIL_PATTERN, 'CALL_\1_\2');
      vSQL := 'SELECT INSERT_DATE, SUM(CALL_COST) FROM '||vTABLE_NAME||'
WHERE SUBSCR_NO=:PHONE_NUMBER
GROUP BY INSERT_DATE
HAVING SUM(CALL_COST) <> 0';
      OPEN vCALL_CURSOR FOR vSQL USING pPHONE_NUMBER;
      LOOP
        FETCH vCALL_CURSOR INTO vDATE, vCOST;
        EXIT WHEN vCALL_CURSOR%NOTFOUND;
        PIPE ROW(
          BALANCE_ROW_TYPE(
            vDATE,
            vCOST,
            'Детализация услуг' 
            )
          );
      END LOOP;
      CLOSE vCALL_CURSOR;    
    ELSE
      PIPE ROW(
        BALANCE_ROW_TYPE(
          vDATE_ROWS(I),
          vCOST_ROWS(I),
          vDESCRIPTION_ROWS(I)
          )
        );
    END IF;
    I := vDATE_ROWS.NEXT(I);
  END LOOP;
END;