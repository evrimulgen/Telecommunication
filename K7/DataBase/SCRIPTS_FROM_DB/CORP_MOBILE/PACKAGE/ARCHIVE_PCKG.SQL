
  CREATE OR REPLACE PACKAGE "CORP_MOBILE"."ARCHIVE_PCKG" AS
--
--#Version=5
--v.5 18.08.2015 Крайнов. Оптимизация архивации.
--v.4 04.08.2015 Афросин.Убрал условие на вставку платежей в архив
--v.3 03.08.2015 Афросин.Всталвил зплатку на загрузку платежей в архив
--v.2 2015.05.15 Крайнов. Архивация платежей.
--
  PROCEDURE ADD_REC_API_GET_CTN_INFO_LIST(
    pBAN IN NUMBER
    );  
--    
  PROCEDURE ADD_REC_API_GET_PAYMENT_LIST(
    pBAN IN NUMBER
    );  
--      
END; 
CREATE OR REPLACE PACKAGE BODY "CORP_MOBILE"."ARCHIVE_PCKG" AS
   --
  PROCEDURE ADD_REC_API_GET_CTN_INFO_LIST(
    pBAN IN NUMBER
    ) IS
  --PRAGMA AUTONOMOUS_TRANSACTION;
  vDATE DATE;
  NEW_ID INTEGER;
  BEGIN
    vDATE:=SYSDATE;
    MERGE INTO ARCHIVE_API_GET_CTN_INFO_LIST CIL
      USING (SELECT pBAN BAN, SUBSTR(CTN, -10) CTN, STATUSDATE, STATUS, PRICEPLAN, 
                    REASONSTATUS, LASTACTIVITY, ACTIVATIONDATE, SUBSCRIBERHLR,
                    vDATE LAST_CHECK_DATE 
               FROM API_GET_CTN_INFO_LIST) API                  
        ON (CIL.BAN = API.BAN
              AND CIL.CTN = API.CTN
              AND CIL.END_DATE IS NULL
              AND CIL.STATUSDATE = API.STATUSDATE
              AND CIL.STATUS = API.STATUS
              AND CIL.PRICEPLAN = API.PRICEPLAN
              AND CIL.REASONSTATUS = API.REASONSTATUS
              AND CIL.LASTACTIVITY = API.LASTACTIVITY
              AND CIL.ACTIVATIONDATE = API.ACTIVATIONDATE
              AND CIL.SUBSCRIBERHLR = API.SUBSCRIBERHLR)        
      WHEN MATCHED THEN
      -- Совпало
        UPDATE SET CIL.LAST_CHECK_DATE = API.LAST_CHECK_DATE         
      WHEN NOT MATCHED THEN
      -- Не совпало
        INSERT(CIL.BAN, CIL.CTN, CIL.STATUSDATE, CIL.STATUS, CIL.PRICEPLAN, 
               CIL.REASONSTATUS, CIL.LASTACTIVITY, CIL.ACTIVATIONDATE, 
               CIL.SUBSCRIBERHLR, CIL.BEGIN_DATE, CIL.LAST_CHECK_DATE)
          VALUES(API.BAN, API.CTN, API.STATUSDATE, API.STATUS, API.PRICEPLAN, 
                 API.REASONSTATUS, API.LASTACTIVITY, API.ACTIVATIONDATE, 
                 API.SUBSCRIBERHLR, API.LAST_CHECK_DATE, API.LAST_CHECK_DATE);      
    UPDATE ARCHIVE_API_GET_CTN_INFO_LIST CIL
      SET CIL.END_DATE = vDATE - 1/24/60/60
      WHERE CIL.BAN = pBAN
        AND CIL.END_DATE IS NULL
        AND CIL.LAST_CHECK_DATE < vDATE;
--    COMMIT;  
  END;
   --
  PROCEDURE ADD_REC_API_GET_PAYMENT_LIST(
    pBAN IN NUMBER
    ) IS
  --PRAGMA AUTONOMOUS_TRANSACTION;
  vDATE DATE;
  NEW_ID INTEGER;
  BEGIN
    vDATE:=SYSDATE;
    MERGE INTO ARCHIVE_API_GET_PAYMENT_LIST PL
      USING (SELECT pBAN BAN, SUBSTR(CTN, -10) CTN, PAYMENTDATE, PAYMENTSTATUS, 
                    PAYMENTTYPE, PAYMENTORIGINALAMT, PAYMENTCURRENTAMT, BANKPAYMENTID, 
                    PAYMENTACTIVATEDATE, vDATE LAST_CHECK_DATE 
               FROM (SELECT DISTINCT CTN, PAYMENTDATE, PAYMENTSTATUS, PAYMENTTYPE, 
                            PAYMENTORIGINALAMT, PAYMENTCURRENTAMT, 
                            BANKPAYMENTID, PAYMENTACTIVATEDATE 
                       FROM API_GET_PAYMENT_LIST)) API               
        ON (PL.BAN = API.BAN
              AND nvl(PL.CTN, '000') = nvl(API.CTN, '000')
              AND PL.PAYMENTDATE = API.PAYMENTDATE
              AND PL.PAYMENTSTATUS = API.PAYMENTSTATUS
              AND PL.PAYMENTTYPE = API.PAYMENTTYPE
              AND PL.PAYMENTORIGINALAMT = API.PAYMENTORIGINALAMT
              AND PL.PAYMENTCURRENTAMT = API.PAYMENTCURRENTAMT
              AND PL.BANKPAYMENTID = API.BANKPAYMENTID
              AND PL.PAYMENTACTIVATEDATE = API.PAYMENTACTIVATEDATE)        
      WHEN MATCHED THEN
      -- Совпало
        UPDATE SET PL.LAST_CHECK_DATE = API.LAST_CHECK_DATE,
                   PL.END_DATE = NULL         
      WHEN NOT MATCHED THEN
      -- Не совпало
        INSERT(PL.BAN, PL.CTN, PL.PAYMENTDATE, PL.PAYMENTSTATUS, PL.PAYMENTTYPE, 
               PL.PAYMENTORIGINALAMT, PL.PAYMENTCURRENTAMT, PL.BANKPAYMENTID, 
               PL.PAYMENTACTIVATEDATE, PL.BEGIN_DATE, PL.LAST_CHECK_DATE)
          VALUES(API.BAN, API.CTN, API.PAYMENTDATE, API.PAYMENTSTATUS, API.PAYMENTTYPE, 
                 API.PAYMENTORIGINALAMT, API.PAYMENTCURRENTAMT, API.BANKPAYMENTID, 
                 API.PAYMENTACTIVATEDATE, API.LAST_CHECK_DATE, API.LAST_CHECK_DATE);      
    UPDATE ARCHIVE_API_GET_PAYMENT_LIST PL
      SET PL.END_DATE = vDATE - 1/24/60/60
      WHERE PL.BAN = pBAN
        AND PL.END_DATE IS NULL
        AND PL.LAST_CHECK_DATE < vDATE
        AND PL.BANKPAYMENTID IN (SELECT DISTINCT BANKPAYMENTID FROM API_GET_PAYMENT_LIST);
--    COMMIT;   
  END;
   --
END; 