
  CREATE OR REPLACE PACKAGE "CORP_MOBILE"."SHOW_USER_ALERT" IS
--Version=1
--  
FUNCTION CHECK_EXISTS_ALERT(
  pCONTRACT_ID IN INTEGER
  ) RETURN INTEGER;
--
FUNCTION GET_CREDIT_INFO(
  pCONTRACT_ID IN INTEGER
  ) RETURN VARCHAR2;
--
FUNCTION GET_RASSROCHKA_INFO(
  pCONTRACT_ID IN INTEGER
  ) RETURN VARCHAR2;
--     
FUNCTION GET_CURRENT_INSTALLMENT_PAID(
  pCONTRACT_ID IN INTEGER
  ) RETURN NUMBER;
--
END SHOW_USER_ALERT; 

CREATE OR REPLACE PACKAGE BODY "CORP_MOBILE"."SHOW_USER_ALERT" IS
--
FUNCTION CHECK_EXISTS_ALERT(
  pCONTRACT_ID IN INTEGER
  ) RETURN INTEGER IS
  CURSOR C IS
    SELECT *
      FROM CONTRACTS
      WHERE CONTRACT_ID = pCONTRACT_ID;
  CURSOR C2 IS 
    SELECT C.PHONE_NUMBER_FEDERAL, FB.ACCOUNT_ID, FB.YEAR_MONTH
      FROM DB_LOADER_FULL_FINANCE_BILL FB, 
           CONTRACTS C,
           ACCOUNT_LOADED_BILLS AB
      WHERE C.CONTRACT_ID = pCONTRACT_ID
        AND C.IS_CREDIT_CONTRACT = 1
        AND C.PHONE_NUMBER_FEDERAL = FB.PHONE_NUMBER
        AND FB.COMPLETE_BILL = 1
        AND FB.ACCOUNT_ID = AB.ACCOUNT_ID
        AND FB.YEAR_MONTH = AB.YEAR_MONTH
        AND AB.DATE_CREDIT_END >= TRUNC(SYSDATE); 
  DUMMY C%ROWTYPE;  
  DUMMY2 C2%ROWTYPE;  
  ITOG INTEGER;   
BEGIN
  ITOG:=0;
  IF ITOG = 0 THEN  -- Проверим рассрочки и скидки на ТП
    OPEN C;
    FETCH C INTO DUMMY;
    IF C%FOUND THEN
      IF (NVL(DUMMY.INSTALLMENT_PAYMENT_MONTHS, 0)) > 0 
          OR (NVL(DUMMY.ABON_TP_DISCOUNT, 0) <> 0)
          or (nvl(dummy.disconnect_limit,0)!=0)
          or (nvl(dummy.connect_limit,0)!=0)
           THEN 
        ITOG:=1;
      END IF;
    ELSE
      ITOG:=0;
    END IF;
  CLOSE C;
  END IF;
  IF ITOG = 0 THEN  -- Проверим кредиты
    OPEN C2;
    FETCH C2 INTO DUMMY2;
    IF C2%FOUND THEN
      ITOG:=1;
    ELSE
      ITOG:=0;
    END IF;
    CLOSE C2;
  END IF;
  RETURN ITOG;
END;
--
FUNCTION GET_CREDIT_INFO(
  pCONTRACT_ID IN INTEGER
  ) RETURN VARCHAR2 IS
  CURSOR C IS 
    SELECT C.PHONE_NUMBER_FEDERAL,
           NVL(C.IS_CREDIT_CONTRACT, 0) IS_CREDIT_CONTRACT,
           TRUNC(V.BILL_SUM_NEW, 2) BILL_SUM,
           TRUNC(V.ABON_TP_NEW + V.ABON_ADD_NEW + V.DISCOUNT_NEW, 2) ABONKA,
           V.YEAR_MONTH,
           AB.DATE_CREDIT_END
      FROM CONTRACTS C,
           V_BILL_FINANCE_FOR_CLIENTS V,
           ACCOUNT_LOADED_BILLS AB
      WHERE C.CONTRACT_ID=pCONTRACT_ID
        AND NVL(C.IS_CREDIT_CONTRACT, 0)=1
        AND C.PHONE_NUMBER_FEDERAL=V.PHONE_NUMBER
        AND V.ACCOUNT_ID = AB.ACCOUNT_ID
        AND V.YEAR_MONTH = AB.YEAR_MONTH
        AND TRUNC(AB.DATE_CREDIT_END) >=TRUNC(SYSDATE)
        AND AB.LOAD_BILL_IN_BALANCE = 1
        and v.COMPLETE_BILL = 1
    UNION ALL            
    SELECT C.PHONE_NUMBER_FEDERAL,
           NVL(C.IS_CREDIT_CONTRACT, 0) IS_CREDIT_CONTRACT,
           V.BILL_SUM,
           V.SUBSCRIBER_PAYMENT_NEW+V.SUBSCRIBER_PAYMENT_ADD_OLD+V.SUBSCRIBER_PAYMENT_ADD_VOZVRAT ABONKA,
           V.YEAR_MONTH,
           AB.DATE_CREDIT_END
      FROM CONTRACTS C,
           V_BILL_FOR_CLIENT V,
           ACCOUNT_LOADED_BILLS AB,
           V_BILL_FINANCE_FOR_CLIENTS V2
      WHERE C.CONTRACT_ID=pCONTRACT_ID
        AND NVL(C.IS_CREDIT_CONTRACT, 0)=1
        AND C.PHONE_NUMBER_FEDERAL=V.PHONE_NUMBER
        AND V.ACCOUNT_ID = AB.ACCOUNT_ID
        AND V.YEAR_MONTH = AB.YEAR_MONTH
        AND TRUNC(AB.DATE_CREDIT_END) >=TRUNC(SYSDATE)
        AND AB.LOAD_BILL_IN_BALANCE = 1
        AND V.ACCOUNT_ID = V2.ACCOUNT_ID(+)
        AND V.YEAR_MONTH = V2.YEAR_MONTH(+)
        AND V.PHONE_NUMBER = V2.PHONE_NUMBER(+)
        AND V2.PHONE_NUMBER IS NULL;
  DUMMY C%ROWTYPE;      
  ITOG VARCHAR2(300 CHAR);
  BALANCE NUMBER(13, 2);      
  BILL NUMBER(13, 2);
  MONTH_NAME VARCHAR2(20 CHAR);   
  vBILLS NUMBER(13, 2);   
  vABONKA NUMBER(13, 2);   
BEGIN
  IF TO_NUMBER(TO_CHAR(SYSDATE, 'DD'))<=31 THEN
    vBILLS:=0;
    vABONKA:=0;
    FOR rec IN C 
    LOOP
      vBILLS:=vBILLS+rec.BILL_SUM;
      vABONKA:=vABONKA+rec.ABONKA;
    END LOOP;
    OPEN C;
    FETCH C INTO DUMMY;
    IF (C%FOUND) AND (TRUNC(DUMMY.DATE_CREDIT_END) >= TRUNC(SYSDATE)) THEN
      IF NVL(DUMMY.YEAR_MONTH, 0)>0 THEN
        MONTH_NAME:=CASE
                      WHEN DUMMY.YEAR_MONTH-100*TRUNC(DUMMY.YEAR_MONTH/100)=1 THEN 'январь'
                      WHEN DUMMY.YEAR_MONTH-100*TRUNC(DUMMY.YEAR_MONTH/100)=2 THEN 'февраль'
                      WHEN DUMMY.YEAR_MONTH-100*TRUNC(DUMMY.YEAR_MONTH/100)=3 THEN 'март'
                      WHEN DUMMY.YEAR_MONTH-100*TRUNC(DUMMY.YEAR_MONTH/100)=4 THEN 'апрель'
                      WHEN DUMMY.YEAR_MONTH-100*TRUNC(DUMMY.YEAR_MONTH/100)=5 THEN 'май'
                      WHEN DUMMY.YEAR_MONTH-100*TRUNC(DUMMY.YEAR_MONTH/100)=6 THEN 'июнь'
                      WHEN DUMMY.YEAR_MONTH-100*TRUNC(DUMMY.YEAR_MONTH/100)=7 THEN 'июль'
                      WHEN DUMMY.YEAR_MONTH-100*TRUNC(DUMMY.YEAR_MONTH/100)=8 THEN 'август'
                      WHEN DUMMY.YEAR_MONTH-100*TRUNC(DUMMY.YEAR_MONTH/100)=9 THEN 'сентябрь'
                      WHEN DUMMY.YEAR_MONTH-100*TRUNC(DUMMY.YEAR_MONTH/100)=10 THEN 'октябрь'
                      WHEN DUMMY.YEAR_MONTH-100*TRUNC(DUMMY.YEAR_MONTH/100)=11 THEN 'ноябрь'
                      WHEN DUMMY.YEAR_MONTH-100*TRUNC(DUMMY.YEAR_MONTH/100)=12 THEN 'декабрь'
                      ELSE ''
                    END;
        BALANCE:=GET_ABONENT_BALANCE(DUMMY.PHONE_NUMBER_FEDERAL) - vABONKA;
        ITOG:='Счет за '||MONTH_NAME||': '||TO_CHAR(vBILLS)||'. Баланс с аб. пл. на '||TO_CHAR(SYSDATE, 'DD.MM.YY')||': '||TO_CHAR(BALANCE);
      END IF;
    END IF;
    CLOSE C;
  ELSE
    ITOG:='';
  END IF;
  RETURN ITOG;
END;
--
FUNCTION GET_RASSROCHKA_INFO(
  pCONTRACT_ID IN INTEGER
  ) RETURN VARCHAR2 IS
  CURSOR C IS
    SELECT C.INSTALLMENT_PAYMENT_DATE,
           C.INSTALLMENT_PAYMENT_SUM,
           NVL(C.INSTALLMENT_PAYMENT_MONTHS, 0) INSTALLMENT_PAYMENT_MONTHS,
           SHOW_USER_ALERT.GET_CURRENT_INSTALLMENT_PAID(C.CONTRACT_ID) FULL_INST_PAID
      FROM CONTRACTS C
      WHERE C.CONTRACT_ID = pCONTRACT_ID;
  DUMMY C%ROWTYPE;
  ITOG VARCHAR2(300 CHAR);
BEGIN
  OPEN C;
  FETCH C INTO DUMMY;
  IF C%FOUND THEN
    IF DUMMY.INSTALLMENT_PAYMENT_MONTHS > 0 THEN
      ITOG:='Рассрочка ' || DUMMY.INSTALLMENT_PAYMENT_SUM || 'р с ' || TO_CHAR(DUMMY.INSTALLMENT_PAYMENT_DATE, 'DD.MM.YYYY') || ' на ' || DUMMY.INSTALLMENT_PAYMENT_MONTHS || ' месяца.';
    ELSE
      ITOG:='';
    END IF;
  ELSE
    ITOG:='';
  END IF;
  CLOSE C;
  RETURN ITOG;
END;
--     
FUNCTION GET_CURRENT_INSTALLMENT_PAID(
  pCONTRACT_ID IN INTEGER
  ) RETURN NUMBER IS
  CURSOR C IS 
    SELECT C.INSTALLMENT_PAYMENT_DATE,
           C.INSTALLMENT_PAYMENT_MONTHS,
           C.INSTALLMENT_PAYMENT_SUM
      FROM CONTRACTS C
      WHERE C.CONTRACT_ID = pCONTRACT_ID;
  DUMMY C%ROWTYPE;    
  ITOG NUMBER;  
  vINST_TEMP_SUM NUMBER;
BEGIN
  ITOG:=0;
  OPEN C;
  FETCH C INTO DUMMY;
  IF C%FOUND THEN  
    IF DUMMY.INSTALLMENT_PAYMENT_MONTHS > 0 THEN 
      FOR I IN 0..DUMMY.INSTALLMENT_PAYMENT_MONTHS-1 LOOP
        IF ADD_MONTHS(DUMMY.INSTALLMENT_PAYMENT_DATE, I) < SYSDATE THEN
          IF ADD_MONTHS(DUMMY.INSTALLMENT_PAYMENT_DATE-1, I+1) < SYSDATE THEN
            vINST_TEMP_SUM:=TRUNC(DUMMY.INSTALLMENT_PAYMENT_SUM/DUMMY.INSTALLMENT_PAYMENT_MONTHS, 2);
          ELSE 
            vINST_TEMP_SUM:=TRUNC(DUMMY.INSTALLMENT_PAYMENT_SUM / DUMMY.INSTALLMENT_PAYMENT_MONTHS
              * (1 - (ADD_MONTHS(DUMMY.INSTALLMENT_PAYMENT_DATE-1, I+1) - TRUNC(SYSDATE)) / (ADD_MONTHS(DUMMY.INSTALLMENT_PAYMENT_DATE-1, I+1) - ADD_MONTHS(DUMMY.INSTALLMENT_PAYMENT_DATE-1, I))), 2);
          END IF;      
          ITOG:=ITOG + vINST_TEMP_SUM;
        END IF;
      END LOOP;
    ELSE
      RETURN NULL;
    END IF;
  ELSE
    RETURN NULL;
  END IF;
  RETURN ITOG;
END;  
--
END; 
