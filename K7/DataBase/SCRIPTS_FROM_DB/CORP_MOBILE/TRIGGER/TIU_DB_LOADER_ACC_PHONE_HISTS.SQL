
  CREATE OR REPLACE TRIGGER "CORP_MOBILE"."TIU_DB_LOADER_ACC_PHONE_HISTS" 
  BEFORE INSERT OR UPDATE ON DB_LOADER_ACCOUNT_PHONE_HISTS FOR EACH ROW
--#Version=1
DECLARE
  vABON_PERIOD_BEGIN DATE;
  vABON_PERIOD_END DATE;
BEGIN
  IF INSERTING THEN
    IF NVL(:NEW.HISTORY_ID, 0) = 0 then
      :NEW.HISTORY_ID := NEW_DB_LOADER_ACC_PH_HIST_ID;
    END IF;
    :NEW.USER_CREATED := USER;
    :NEW.DATE_CREATED := SYSDATE;
    INSERT INTO PHONES_TARIF_FOR_RECALC (PHONE_NUMBER) VALUES (:NEW.PHONE_NUMBER);
  END IF;
  IF UPDATING THEN
    IF :NEW.CELL_PLAN_CODE<>:OLD.CELL_PLAN_CODE THEN
      INSERT INTO PHONES_TARIF_FOR_RECALC (PHONE_NUMBER) VALUES (:NEW.PHONE_NUMBER);
    END IF;
  END IF;
  :NEW.USER_LAST_UPDATED := USER;
  :NEW.DATE_LAST_UPDATED := SYSDATE;
  vABON_PERIOD_BEGIN:=:NEW.BEGIN_DATE;
  vABON_PERIOD_END:=:NEW.END_DATE;
  IF vABON_PERIOD_END > SYSDATE THEN
    vABON_PERIOD_END:=SYSDATE;
  END IF;
  FOR L IN TO_NUMBER(TO_CHAR(vABON_PERIOD_BEGIN, 'YYYYMM'))..TO_NUMBER(TO_CHAR(vABON_PERIOD_END, 'YYYYMM'))
  LOOP
    IF (L - TRUNC(L/100)*100 > 0) AND (L - TRUNC(L/100)*100 < 13) 
        AND (L<=TO_NUMBER(TO_CHAR(SYSDATE, 'YYYYMM'))) THEN
      ADD_QUEUE_ABONENT_PER_REBILD(L, :NEW.PHONE_NUMBER);
    END IF;
  END LOOP;
END; 
ALTER TRIGGER "CORP_MOBILE"."TIU_DB_LOADER_ACC_PHONE_HISTS" ENABLE