CREATE TABLE BEELINE_TICKET_TYPES (
  TICKET_TYPE_ID INTEGER,
  TICKET_TYPE_NAME VARCHAR2 (50 CHAR),
  USER_CREATED  VARCHAR2(30 CHAR),
  DATE_CREATED  DATE,
  USER_LAST_UPDATED  VARCHAR2(30 CHAR),
  DATE_LAST_UPDATED  DATE
);

COMMENT ON TABLE BEELINE_TICKET_TYPES IS 'Справочник типов заявки на блокировку/разблокировку через API';
COMMENT ON COLUMN BEELINE_TICKET_TYPES.TICKET_TYPE_ID IS 'Код типа заявки';
COMMENT ON COLUMN BEELINE_TICKET_TYPES.TICKET_TYPE_NAME IS 'Наименование кода типа заявки';

CREATE UNIQUE INDEX I_PR_BEELINE_TICKET_TYPE_ID ON BEELINE_TICKET_TYPES (TICKET_TYPE_ID);

ALTER TABLE BEELINE_TICKET_TYPES ADD (
  CONSTRAINT PK_BEELINE_TICKET_TYPE_ID
  PRIMARY KEY (TICKET_TYPE_ID)
  USING INDEX I_PR_BEELINE_TICKET_TYPE_ID
  ENABLE VALIDATE );


INSERT INTO BEELINE_TICKET_TYPES (TICKET_TYPE_ID) 
    SELECT BT.TICKET_TYPE 
    FROM BEELINE_TICKETS BT 
    GROUP BY BT.TICKET_TYPE;
COMMIT; 

UPDATE BEELINE_TICKET_TYPES BTT SET BTT.TICKET_TYPE_NAME = 'Список счетов с суммами' WHERE BTT.TICKET_TYPE_ID = 5;
UPDATE BEELINE_TICKET_TYPES BTT SET BTT.TICKET_TYPE_NAME = 'Блокировка' WHERE BTT.TICKET_TYPE_ID = 9;
UPDATE BEELINE_TICKET_TYPES BTT SET BTT.TICKET_TYPE_NAME = 'Разблокировка' WHERE BTT.TICKET_TYPE_ID = 10;
UPDATE BEELINE_TICKET_TYPES BTT SET BTT.TICKET_TYPE_NAME = 'Смена Sim-карты' WHERE BTT.TICKET_TYPE_ID = 12;
COMMIT;

--#if not ObjectExists("S_NEW_BEELINE_TICKET_TYPE_ID")
CREATE SEQUENCE S_NEW_BEELINE_TICKET_TYPE_ID;
--#end if

CREATE OR REPLACE FUNCTION NEW_BEELINE_TICKET_TYPE_ID RETURN NUMBER IS
--#Version=1
  vRES NUMBER;
BEGIN
  SELECT S_NEW_BEELINE_TICKET_TYPE_ID.NEXTVAL
  INTO vRES
  FROM DUAL;
  RETURN vRES;
END;
/

--#IF GetVersion("TIU_BEELINE_TICKET_TYPES") < 1 THEN
CREATE OR REPLACE TRIGGER TIU_BEELINE_TICKET_TYPES 
  BEFORE INSERT OR UPDATE ON BEELINE_TICKET_TYPES FOR EACH ROW 
--#Version=1
BEGIN 
  IF INSERTING THEN 
    IF NVL(:NEW.TICKET_TYPE_ID, 0) = 0 then 
      :NEW.TICKET_TYPE_ID := NEW_BEELINE_TICKET_TYPE_ID; 
    END IF; 
    :NEW.USER_CREATED := USER; 
    :NEW.DATE_CREATED := SYSDATE;
  END IF; 
  :NEW.USER_LAST_UPDATED := USER; 
  :NEW.DATE_LAST_UPDATED := SYSDATE; 
END;
--#end if

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON BEELINE_TICKET_TYPES TO CORP_MOBILE_ROLE;

GRANT SELECT ON BEELINE_TICKET_TYPES TO CORP_MOBILE_ROLE_RO;  
