CREATE TABLE HOT_BILLING_CALLS_DUPLICATE(
  DBF_ID     INTEGER,
  SUBSCR_NO  NUMBER(11),
  CH_SEIZ_DT DATE,
  US_SEQ_N   NUMBER(9),
  AT_SOC     VARCHAR2(9 BYTE),
  AT_FT_CODE VARCHAR2(6 BYTE),
  PC_PLAN_CD VARCHAR2(9 BYTE),
  C_ACT_CD   VARCHAR2(1 BYTE),
  AT_C_DR_SC VARCHAR2(9 BYTE),
  AT_CDRRD_M VARCHAR2(11 BYTE),
  AT_CHG_AMT NUMBER(11, 2),
  CALLING_NO VARCHAR2(21 BYTE),
  MESSAGE_TP VARCHAR2(1 BYTE),
  SRV_FT_CD  VARCHAR2(6 BYTE),
  DATA_VOL   NUMBER(11, 2),
  IMEI       NUMBER(15),
  CELL_ID    NUMBER(6),
  PROV_ID    VARCHAR2(8 BYTE),
  DIALED_DIG VARCHAR2(21 BYTE),
  UOM        VARCHAR2(2 BYTE),
  DISCT_SOCS VARCHAR2(100 BYTE),
  CALL_COST  NUMBER(11, 2),
  MN_UNLIM   NUMBER(1),
  DATE_INSERT DATE
  ) TABLESPACE HOT_BILLING;

COMMENT ON TABLE HOT_BILLING_CALLS_DUPLICATE IS 'ГорБиллинг - Тарифицированные звонки';

COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.DBF_ID IS 'ID файла источника';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.SUBSCR_NO IS 'Сотовый номер';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.CH_SEIZ_DT IS 'Дата_время совершения звонка';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.US_SEQ_N IS 'Порядковый номер записи (служебное поле)';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.AT_SOC IS 'Услуга, по которой определяется тарификация';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.AT_FT_CODE IS 'Код звонка в билайне';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.PC_PLAN_CD IS 'Тарифный план';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.C_ACT_CD IS 'Тип вызова';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.AT_C_DR_SC IS 'Длительность (сек.)';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.AT_CDRRD_M IS 'Длительность (мин., с округлением)';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.AT_CHG_AMT IS 'Стоимость';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.CALLING_NO IS 'Номер инициатора звонка';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.MESSAGE_TP IS 'Тип записи: домашний или роуминг';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.SRV_FT_CD IS 'Сервис (код)';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.DATA_VOL IS 'Объем (для data)';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.IMEI IS 'IMEI (код)';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.CELL_ID IS 'Идентификатор соты';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.PROV_ID IS 'Роуминг-провайдер';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.DIALED_DIG IS 'Набранный номер';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.UOM IS 'Единица измерения';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.DISCT_SOCS IS 'Услуга-скидка';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.CALL_COST IS 'Стоимость Итоговая';
COMMENT ON COLUMN HOT_BILLING_CALLS_DUPLICATE.MN_UNLIM IS 'Услуга-скидка';

CREATE UNIQUE INDEX PK_HOT_BILLING_CALLS_DUPLICATE ON HOT_BILLING_CALLS_DUPLICATE(SUBSCR_NO, CH_SEIZ_DT, US_SEQ_N) COMPRESS 1 TABLESPACE HOT_BILLING;

CREATE INDEX I_HB_DC$SUBSCR_NO$AT_FT_CODE ON HOT_BILLING_CALLS_DUPLICATE(SUBSCR_NO, AT_FT_CODE) COMPRESS 1 TABLESPACE HOT_BILLING;

CREATE INDEX I_HB_DUPL_CALLS$DBF_ID ON HOT_BILLING_CALLS_DUPLICATE(DBF_ID) TABLESPACE HOT_BILLING;

CREATE OR REPLACE TRIGGER TIU_HB_DUPLICATE_CALLS
  BEFORE INSERT OR UPDATE ON HOT_BILLING_CALLS_DUPLICATE 
  REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
BEGIN
  IF INSERTING THEN
    :NEW.DATE_INSERT:=SYSDATE;            
  END IF; 
END;  

GRANT DELETE, INSERT, SELECT, UPDATE ON HOT_BILLING_CALLS_DUPLICATE TO CORP_MOBILE_ROLE;

GRANT SELECT ON HOT_BILLING_CALLS_DUPLICATE TO CORP_MOBILE_ROLE_RO;