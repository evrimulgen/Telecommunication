CREATE TABLE RECOMMENDED_TARIFF_OPTIONS(
  RECOMMENDED_ID INTEGER NOT NULL PRIMARY KEY,
  TARIFF_ID INTEGER NOT NULL,
  TARIFF_OPTION_ID INTEGER NOT NULL,
  USER_CREATED VARCHAR2(30 CHAR),
  DATE_CREATED DATE,
  USER_LAST_UPDATED VARCHAR2(30 CHAR),
  DATE_LAST_UPDATED DATE
  );

COMMENT ON TABLE RECOMMENDED_TARIFF_OPTIONS IS 'Рекомендуемые опции к тарифу';
COMMENT ON COLUMN RECOMMENDED_TARIFF_OPTIONS.recommended_id IS 'Первичный ключ';
COMMENT ON COLUMN RECOMMENDED_TARIFF_OPTIONS.tariff_id IS 'Тариф';
COMMENT ON COLUMN RECOMMENDED_TARIFF_OPTIONS.tariff_option_id IS 'Тарифная опция';
COMMENT ON COLUMN RECOMMENDED_TARIFF_OPTIONS.USER_CREATED IS 'ПОЛЬЗОВАТЕЛЬ, СОЗДАВШИЙ';
COMMENT ON COLUMN RECOMMENDED_TARIFF_OPTIONS.DATE_CREATED IS 'ДАТА СОЗДАНИЯ';
COMMENT ON COLUMN RECOMMENDED_TARIFF_OPTIONS.USER_LAST_UPDATED IS 'ПОЛЬЗОВАТЕЛЬ, ИЗМЕНИВШИЙ';
COMMENT ON COLUMN RECOMMENDED_TARIFF_OPTIONS.DATE_LAST_UPDATED IS 'ДАТА ПОСЛЕДНЕГО ИЗМЕНЕНИЯ';


CREATE SEQUENCE S_RECOMMENDED_ID
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;  
  
CREATE OR REPLACE TRIGGER TIU_RECOMMENDED_TARIFF_OPTIONS
  BEFORE INSERT OR UPDATE ON RECOMMENDED_TARIFF_OPTIONS FOR EACH ROW
--#Version=1
BEGIN
  IF INSERTING THEN
    :NEW.USER_CREATED := USER;
    :NEW.DATE_CREATED := SYSDATE;
    IF NVL(:NEW.RECOMMENDED_ID, 0)=0 THEN
      :NEW.RECOMMENDED_ID := S_RECOMMENDED_ID.NEXTVAL;
    END IF;
  END IF;
  :NEW.USER_LAST_UPDATED := USER;
  :NEW.DATE_LAST_UPDATED := SYSDATE;
END;
/ 


GRANT SELECT, INSERT, UPDATE, DELETE ON RECOMMENDED_TARIFF_OPTIONS TO CORP_MOBILE_ROLE;
GRANT SELECT ON RECOMMENDED_TARIFF_OPTIONS TO CORP_MOBILE_ROLE_RO;
