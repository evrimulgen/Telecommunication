CREATE TABLE RESULT_FOR_HOST_MONITOR_TEST
(
  TEST_ID integer primary key,
  TEST_NAME_ENG VARCHAR2(30 char),
  IS_COLLECTOR integer,
  TEST_RESULT NUMBER (15, 7),
  JOB_NAME varchar2(30 char),
  COMMENTS varchar2(10 char),
  USER_CREATED varchar2(30 char),
  DATE_CRETAED DATE,
  USER_UPDATED varchar2(30 char),
  DATE_UPDATED DATE
  
  
);

COMMENT ON TABLE RESULT_FOR_HOST_MONITOR_TEST IS 'Таблица с результатами тестов для хост монитора';
COMMENT ON COLUMN RESULT_FOR_HOST_MONITOR_TEST.TEST_NAME_ENG IS 'Название теста на английском языке';
COMMENT ON COLUMN RESULT_FOR_HOST_MONITOR_TEST.IS_COLLECTOR IS 'Признак теста (0 - К7, 1- коллектор)';
COMMENT ON COLUMN RESULT_FOR_HOST_MONITOR_TEST.TEST_RESULT IS 'Результат теста';
COMMENT ON COLUMN RESULT_FOR_HOST_MONITOR_TEST.JOB_NAME IS 'Название JOB, которым выполняется тест';
COMMENT ON COLUMN RESULT_FOR_HOST_MONITOR_TEST.COMMENTS IS 'Комментарий к тесту';

CREATE SEQUENCE S_RES_FOR_HOST_MONITOR_TEST_ID
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER;

CREATE OR REPLACE TRIGGER TIU_RES_FOR_HOST_MONITOR_TEST
  BEFORE INSERT OR UPDATE
   ON RESULT_FOR_HOST_MONITOR_TEST FOR EACH ROW
BEGIN
  if INSERTING then
    
    if nvl(:NEW.TEST_ID, 0) = 0 then 
      :NEW.TEST_ID := S_RES_FOR_HOST_MONITOR_TEST_ID.NEXTVAL;
    end if;
   
   :NEW.USER_CREATED := USER;
   :NEW.DATE_CRETAED := sysdate;
  end if;
  
  if UPDATING then
    :NEW.USER_UPDATED := USER;
    :NEW.DATE_UPDATED := sysdate;
  end if;
END;
/

SET DEFINE OFF;
Insert into RESULT_FOR_HOST_MONITOR_TEST
   (TEST_NAME_ENG, IS_COLLECTOR, JOB_NAME, COMMENTS)
 Values
   ('K7_PHONE_STATUS_LOAD', 0, 'J_SET_PHONE_STATUS_TEST_RESULT','Статусы телефонов по К7');

Insert into RESULT_FOR_HOST_MONITOR_TEST
   (TEST_NAME_ENG, IS_COLLECTOR, JOB_NAME, COMMENTS)
 Values
   ('COLLECTOR_PHONE_STATUS_LOAD', 1, 'J_SET_PHONE_STATUS_TEST_RESULT', 'Загрузка статусов телефонов по Коллектору');
COMMIT;

Insert into RESULT_FOR_HOST_MONITOR_TEST
   (TEST_NAME_ENG, IS_COLLECTOR, TEST_RESULT, JOB_NAME, COMMENTS)
 Values
   ('HANGED_JOB_COUNT', -1, 5, 'J_SET_JOB_STATUS_TEST_RESULT', 'Получения количества зависших джобов');
COMMIT;
