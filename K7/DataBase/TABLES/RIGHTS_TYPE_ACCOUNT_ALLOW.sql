CREATE TABLE RIGHTS_TYPE_ACCOUNT_ALLOW
(
  ID				INTEGER NOT NULL,
  RIGHTS_TYPE			INTEGER,
  ACCOUNT_ID			INTEGER,
  USER_NAME_CREATED		VARCHAR2(30 CHAR),
  DATE_CREATED			DATE,
  USER_NAME_LAST_UPDATED	VARCHAR2(30 CHAR),
  DATE_LAST_UPDATED		DATE
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/

COMMENT ON TABLE RIGHTS_TYPE_ACCOUNT_ALLOW IS 'Доступные счета определенный типам прав'
/

COMMENT ON COLUMN RIGHTS_TYPE_ACCOUNT_ALLOW.ID IS 'Первичный ключ'
/

COMMENT ON COLUMN RIGHTS_TYPE_ACCOUNT_ALLOW.RIGHTS_TYPE IS 'Тип прав пользователей : 1 - администратор, 2 - просмотр, 3 - только инф. по абоненту, иначе обычный пользователь'
/

COMMENT ON COLUMN RIGHTS_TYPE_ACCOUNT_ALLOW.ACCOUNT_ID IS 'Код лицевого счёта'
/

COMMENT ON COLUMN RIGHTS_TYPE_ACCOUNT_ALLOW.USER_NAME_CREATED IS 'Пользователь, создавший запись'
/

COMMENT ON COLUMN RIGHTS_TYPE_ACCOUNT_ALLOW.DATE_CREATED IS 'Дата/время создания записи'
/

COMMENT ON COLUMN RIGHTS_TYPE_ACCOUNT_ALLOW.USER_NAME_LAST_UPDATED IS 'Пользователь, редактировавший запись последним'
/

COMMENT ON COLUMN RIGHTS_TYPE_ACCOUNT_ALLOW.DATE_LAST_UPDATED IS 'Дата/время последней редакции записи'
/


ALTER TABLE RIGHTS_TYPE_ACCOUNT_ALLOW ADD CONSTRAINT PK_RIGHTS_TYPE_ACCOUNT_ALLOW PRIMARY KEY (ID);

CREATE SEQUENCE S_RIGHTS_TYPE_ACCOUNT_ALLOW_ID
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER;

CREATE OR REPLACE FUNCTION NEW_RIGHTS_TYPE_ACCOUNT_ID RETURN NUMBER IS
  RES INTEGER;
begin
  select S_RIGHTS_TYPE_ACCOUNT_ALLOW_ID.NEXTVAL
  INTO RES
  FROM DUAL;
  RETURN RES;
END;


CREATE OR REPLACE TRIGGER TIU_RIGHTS_TYPE_ACCOUNT
  BEFORE INSERT OR UPDATE ON RIGHTS_TYPE_ACCOUNT_ALLOW FOR EACH ROW
BEGIN
  IF INSERTING THEN
    IF NVL(:NEW.ID, 0) = 0 then
      :NEW.ID := NEW_RIGHTS_TYPE_ACCOUNT_ID;
    END IF;
    :NEW.USER_NAME_CREATED := USER;
    :NEW.DATE_CREATED := SYSDATE;
  END IF;
  :NEW.USER_NAME_LAST_UPDATED := USER;
  :NEW.DATE_LAST_UPDATED := SYSDATE;
END;
/

GRANT SELECT, DELETE, INSERT, UPDATE ON RIGHTS_TYPE_ACCOUNT_ALLOW TO CORP_MOBILE_ROLE;
GRANT SELECT ON RIGHTS_TYPE_ACCOUNT_ALLOW TO CORP_MOBILE_ROLE_RO;

GRANT EXECUTE ON NEW_RIGHTS_TYPE_ACCOUNT_ID TO CORP_MOBILE_ROLE;

grant select on S_RIGHTS_TYPE_ACCOUNT_ALLOW_ID to CORP_MOBILE_ROLE




