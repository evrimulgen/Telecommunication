CREATE SEQUENCE S_NEW_TARIFF_OPTION_ID;

CREATE OR REPLACE FUNCTION NEW_TARIFF_OPTION_ID RETURN NUMBER IS
--#Version=1
  vRES NUMBER;
BEGIN
  SELECT S_NEW_TARIFF_OPTION_ID.NEXTVAL
  INTO vRES
  FROM DUAL;
  RETURN vRES;
END;
/

CREATE TABLE TARIFF_OPTIONS
(
  TARIFF_OPTION_ID   INTEGER                    NOT NULL,
  OPERATOR_ID        INTEGER
    CONSTRAINT CHK_TARIFF_OPTIONS_OPERATOR_NN NOT NULL,
  OPTION_CODE VARCHAR2(30 CHAR)
    CONSTRAINT CHK_TARIFF_OPTIONS_CODE_NN NOT NULL,
  OPTION_NAME        VARCHAR2(100 CHAR)
    CONSTRAINT CHK_TARIFF_OPTIONS_NAME_NN NOT NULL,
  USER_CREATED       VARCHAR2(30 CHAR),
  DATE_CREATED       DATE,
  USER_LAST_UPDATED  VARCHAR2(30 CHAR),
  DATE_LAST_UPDATED  DATE
);

ALTER TABLE TARIFF_OPTIONS ADD  CONSTRAINT PK_TARIFF_OPTIONS PRIMARY KEY (TARIFF_OPTION_ID);

ALTER TABLE TARIFF_OPTIONS ADD  CONSTRAINT FK_TARIFF_OPTIONS_OPERATOR_ID
 FOREIGN KEY (OPERATOR_ID)
 REFERENCES OPERATORS;

CREATE OR REPLACE TRIGGER CORP_MOBILE.TU_TARIFFS_OPTS
BEFORE UPDATE
ON CORP_MOBILE.TARIFF_OPTIONS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
   PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
  IF UPDATING THEN  
    P_NEW_TARIF_OPTS (:OLD.OPTION_CODE); 
  END IF;          
END;

CREATE OR REPLACE TRIGGER TIU_TARIFF_OPTIONS
  BEFORE INSERT OR UPDATE ON TARIFF_OPTIONS FOR EACH ROW
--#Version=1
BEGIN
  IF INSERTING THEN
    IF NVL(:NEW.TARIFF_OPTION_ID, 0) = 0 then
      :NEW.TARIFF_OPTION_ID := NEW_TARIFF_OPTION_ID;
    END IF;
    :NEW.USER_CREATED := USER;
    :NEW.DATE_CREATED := SYSDATE;
  END IF;
  :NEW.USER_LAST_UPDATED := USER;
  :NEW.DATE_LAST_UPDATED := SYSDATE;
END;
/

COMMENT ON TABLE TARIFF_OPTIONS IS 'Тарифные опции';

COMMENT ON COLUMN TARIFF_OPTIONS.TARIFF_OPTION_ID IS 'Первичный ключ';

COMMENT ON COLUMN TARIFF_OPTIONS.OPERATOR_ID IS 'Код оператора сотовой связи';

COMMENT ON COLUMN TARIFF_OPTIONS.OPTION_CODE IS 'Код опции';

COMMENT ON COLUMN TARIFF_OPTIONS.OPTION_NAME IS 'Название опции';

COMMENT ON COLUMN TARIFF_OPTIONS.USER_CREATED IS 'Пользователь, создавший запись';

COMMENT ON COLUMN TARIFF_OPTIONS.DATE_CREATED IS 'Дата/время создания записи';

COMMENT ON COLUMN TARIFF_OPTIONS.USER_LAST_UPDATED IS 'Пользователь, редактировавший запись последним';

COMMENT ON COLUMN TARIFF_OPTIONS.DATE_LAST_UPDATED IS 'Дата/время последней редакции записи';

CREATE INDEX I_TARIFF_OPTIONS_OPERATOR_ID ON TARIFF_OPTIONS (OPERATOR_ID) COMPRESS;

ALTER TABLE TARIFF_OPTIONS ADD KOEF_KOMISS NUMBER(13, 2);

COMMENT ON COLUMN TARIFF_OPTIONS.KOEF_KOMISS IS 'Коэффициент учета опции для комиссии дилеров';

ALTER TABLE TARIFF_OPTIONS ADD CALC_UNBLOCK NUMBER(1);

COMMENT ON COLUMN TARIFF_OPTIONS.CALC_UNBLOCK IS 'Опция считается всегда 1-Да, 0-Нет';

ALTER TABLE TARIFF_OPTIONS ADD DISCR_SPISANIE NUMBER(1);

COMMENT ON COLUMN TARIFF_OPTIONS.DISCR_SPISANIE IS 'Дискретное списание(1-целиком или 0-по дням)';

ALTER TABLE TARIFF_OPTIONS ADD OPTION_NAME_FOR_AB VARCHAR2(100 CHAR);

COMMENT ON COLUMN TARIFF_OPTIONS.OPTION_NAME_FOR_AB IS 'Название опции для отправки в sms абоненту (если "-", то не показываем)';

--#if not ColumnExists("TARIFF_OPTIONS.IS_ROAMING_DISCOUNT")
ALTER TABLE TARIFF_OPTIONS ADD IS_ROAMING_DISCOUNT NUMBER(1);
COMMENT ON COLUMN TARIFF_OPTIONS.IS_ROAMING_DISCOUNT IS 'Услуга является скидкой в роуминге';
--#end if

--#if not ColumnExists("TARIFF_OPTIONS.DEFAULT_RETARIF_ROAM_DISCOUNT")
ALTER TABLE TARIFF_OPTIONS ADD DEFAULT_RETARIF_ROAM_DISCOUNT NUMBER(1);
COMMENT ON COLUMN TARIFF_OPTIONS.DEFAULT_RETARIF_ROAM_DISCOUNT IS 'Услуга подключается по умолчанию при перетарификации роуминга';
--#end if

--#if not ColumnExists("TARIFF_OPTIONS.CAN_BE_TURNED_BY_OPERATOR")
ALTER TABLE TARIFF_OPTIONS ADD CAN_BE_TURNED_BY_OPERATOR NUMBER(1);
COMMENT ON COLUMN TARIFF_OPTIONS.CAN_BE_TURNED_BY_OPERATOR IS 'Услуга может быть подключена оператором из программы';
--#end if

--#if not ColumnExists("TARIFF_OPTIONS.ORDER_NUMBER")
ALTER TABLE TARIFF_OPTIONS ADD ORDER_NUMBER INTEGER;
COMMENT ON COLUMN TARIFF_OPTIONS.ORDER_NUMBER IS 'Порядковый номер для отображения';
--#end if

--#if not ColumnExists("TARIFF_OPTIONS.IS_FAVORITED")
ALTER TABLE TARIFF_OPTIONS ADD IS_FAVORITED NUMBER(1);
COMMENT ON COLUMN TARIFF_OPTIONS.IS_FAVORITED IS 'Избранные услуги';
--#end if

--#if not ColumnExists("TARIFF_OPTIONS.CAN_BE_TURNED_BY_ABONENT")
ALTER TABLE TARIFF_OPTIONS ADD CAN_BE_TURNED_BY_ABONENT NUMBER(1);
COMMENT ON COLUMN TARIFF_OPTIONS.CAN_BE_TURNED_BY_ABONENT IS 'Услуга может быть подключена абонентом самостоятельно';
--#end if

--#if not ColumnExists("TARIFF_OPTIONS.USSD_TURN_ON_COMMAND")
ALTER TABLE TARIFF_OPTIONS ADD USSD_TURN_ON_COMMAND VARCHAR2(100);
COMMENT ON COLUMN TARIFF_OPTIONS.USSD_TURN_ON_COMMAND IS 'Команда USSD для подключения услуги';
--#end if

--#if not ColumnExists("TARIFF_OPTIONS.USSD_TURN_OFF_COMMAND")
ALTER TABLE TARIFF_OPTIONS ADD USSD_TURN_OFF_COMMAND VARCHAR2(100);
COMMENT ON COLUMN TARIFF_OPTIONS.USSD_TURN_OFF_COMMAND IS 'Команда USSD для отключения услуги';
--#end if


ALTER TABLE TARIFF_OPTIONS ADD CONSTRAINT UQ_TARIFF_OPTION_CODE
UNIQUE(OPTION_CODE);

alter table tariff_options add (is_auto_internet number(1) default 0);
COMMENT ON COLUMN TARIFF_OPTIONS.IS_AUTO_INTERNET IS 'Признак автоподключения internet доп.пакета(опции)';

alter table tariff_options add (internet_volume number(12) default 0);
COMMENT ON COLUMN TARIFF_OPTIONS.internet_volume IS 'Объём доступного на опции интернет-трафика, поле используется для подбора подходящего доп.пакетп при авто-подключении.';

alter table tariff_options add (is_unlim_internet number(1) default 0);
COMMENT ON COLUMN TARIFF_OPTIONS.IS_UNLIM_INTERNET IS 'Признак безлимитного internet доп.пакета(опции)';
	