CREATE TABLE USSD_CHANGE_CONTRACT_STATUS
(
  USSD_CHANGE_CONTRACT_STATUS_ID   INTEGER NOT NULL PRIMARY KEY,
  DESCRIPTION varchar2(10s0 char),
  USER_CREATED       VARCHAR2(30 CHAR),
  DATE_CREATED       DATE
);

COMMENT ON TABLE USSD_CHANGE_CONTRACT_STATUS IS 'Статусы заявок по USSD на смену тарифного плана';

COMMENT ON COLUMN USSD_CHANGE_CONTRACT_STATUS.USSD_CHANGE_CONTRACT_STATUS_ID IS 'ИД статуса';

COMMENT ON COLUMN USSD_CHANGE_CONTRACT_STATUS.DESCRIPTION IS 'Описание статуса';


COMMENT ON COLUMN USSD_CHANGE_CONTRACT_STATUS.USER_CREATED IS 'Пользователь, создавший запись';

COMMENT ON COLUMN USSD_CHANGE_CONTRACT_STATUS.DATE_CREATED IS 'Дата/время создания записи';


CREATE SEQUENCE S_USSD_CHANGE_CONTRACT_STAT_ID
  START WITH 0
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER TI_USSD_CHANGE_CONTRACT_STATUS
  BEFORE INSERT OR UPDATE ON USSD_CHANGE_CONTRACT_STATUS FOR EACH ROW
BEGIN
  if nvl(:NEW.USSD_CHANGE_CONTRACT_STATUS_ID, 0) = 0 then
    :NEW.USSD_CHANGE_CONTRACT_STATUS_ID := S_USSD_CHANGE_CONTRACT_STAT_ID.NEXTVAL;    
  end if;
  :NEW.USER_CREATED := USER;
  :NEW.DATE_CREATED := SYSDATE;
END;
/

Insert into USSD_CHANGE_CONTRACT_STATUS
   (USSD_CHANGE_CONTRACT_STATUS_ID, DESCRIPTION)
 Values
   (0, 'Ожидание получения статуса');
Insert into USSD_CHANGE_CONTRACT_STATUS
   (USSD_CHANGE_CONTRACT_STATUS_ID, DESCRIPTION)
 Values
   (1, 'Заявка выполнена');
Insert into USSD_CHANGE_CONTRACT_STATUS
   (USSD_CHANGE_CONTRACT_STATUS_ID, DESCRIPTION)
 Values
   (2, 'Доп.договор создан');
Insert into USSD_CHANGE_CONTRACT_STATUS
   (USSD_CHANGE_CONTRACT_STATUS_ID, DESCRIPTION)
 Values
   (3, 'Заявка обработана с ошибкой. Доп. договор не создан');
COMMIT;

ALTER TABLE USSD_CHANGE_CONTRACT_STATUS ADD ( CAN_ADD_CONTRACT_CHANGES INTEGER );
COMMENT ON COLUMN USSD_CHANGE_CONTRACT_STATUS.CAN_ADD_CONTRACT_CHANGES IS 'Признак статуса, указывающий на то, что можно создавать доп.договор: 1 - можно 0 - нельзя';

Insert into USSD_CHANGE_CONTRACT_STATUS
   ( DESCRIPTION)
 Values
   ( 'Заявка ждет отправки на Email');
commit;

CREATE OR REPLACE TRIGGER TI_USSD_CHANGE_CONTRACT_STATUS
  BEFORE INSERT ON USSD_CHANGE_CONTRACT_STATUS FOR EACH ROW
BEGIN
  if nvl(:NEW.USSD_CHANGE_CONTRACT_STATUS_ID, 0) = 0 then
    :NEW.USSD_CHANGE_CONTRACT_STATUS_ID := S_USSD_CHANGE_CONTRACT_STAT_ID.NEXTVAL;    
  end if;
  :NEW.USER_CREATED := USER;
  :NEW.DATE_CREATED := SYSDATE;
END;
/