CREATE TABLE USSD_CHANGE_PP_LOG
 (
       YEAR_MONTH INTEGER,
       PHONE_NUMBER VARCHAR2(10),
       USSD_CODE    VARCHAR2(50),
       TICKET_ID INTEGER,
       ERROR_MESSAGE VARCHAR2(200),
       DATE_CREATED DATE,
       USER_CREATED VARCHAR2(30),
       DATE_INSERTED DATE,
       USER_INSERTED VARCHAR2(30)
       
 );
COMMENT ON TABLE USSD_CHANGE_PP_LOG IS 'Лог заявок на  смену тарифного плана';
COMMENT ON COLUMN USSD_CHANGE_PP_LOG.YEAR_MONTH IS 'Год/месяц создания заявки';
COMMENT ON COLUMN USSD_CHANGE_PP_LOG.PHONE_NUMBER IS 'Номер телефона';
COMMENT ON COLUMN USSD_CHANGE_PP_LOG.USSD_CODE IS 'USSD команда для перехода';
COMMENT ON COLUMN USSD_CHANGE_PP_LOG.TICKET_ID IS 'Номер заявки в билайне(при смене через API)';
COMMENT ON COLUMN USSD_CHANGE_PP_LOG.ERROR_MESSAGE IS 'Текст ошибки';
COMMENT ON COLUMN USSD_CHANGE_PP_LOG.DATE_CREATED IS 'Дата создания заявки';
COMMENT ON COLUMN USSD_CHANGE_PP_LOG.USER_CREATED IS 'Создавший пользователь';
COMMENT ON COLUMN USSD_CHANGE_PP_LOG.DATE_INSERTED IS 'Дата переноса записи в лог';
COMMENT ON COLUMN USSD_CHANGE_PP_LOG.USER_INSERTED IS 'Пользователь, занесший запись в лог';

CREATE OR REPLACE TRIGGER TI_USSD_CHANGE_PP_LOG
  BEFORE INSERT ON USSD_CHANGE_PP_LOG FOR EACH ROW
--#Version=1
BEGIN
    :NEW.YEAR_MONTH := to_number(to_char(sysdate, 'yyyymm'));
    :NEW.DATE_INSERTED := SYSDATE;
    :NEW.USER_INSERTED := USER; 
END;

ALTER TABLE USSD_CHANGE_PP_LOG ADD( USSD_CHANGE_CONTRACT_STATUS_ID INTEGER );

COMMENT ON COLUMN USSD_CHANGE_PP_LOG.USSD_CHANGE_CONTRACT_STATUS_ID IS 'Статус заявки по USSD на смену тарифного плана(по таблице USSD_CHANGE_CONTRACT_STATUS)';