CREATE OR REPLACE VIEW V_ROAMING_RETARIF_PROFIT_PHONE AS
select
--#Version=2
-- показывает выгоду от перетарификации опций в разрезе телефонов.
-- Работает правильно только за 2014 год,
-- за другой год надо переписывать выборку звонков.
--
-- 2. Уколов. Добавил 2015 год.
-- 1. Уколов. Первая версия.
--
  TRUNC(ROAMING_RETARIF_PHONES.BEGIN_DATE_TIME) BEGIN_DATE_TIME,
  TRUNC(ROAMING_RETARIF_PHONES.END_DATE_TIME) END_DATE_TIME,
  ROAMING_RETARIF_PHONES.PHONE_NUMBER, 
  SUM(trunc(c.cost_chng, 2)) OPTIONS_PROFIT,
  5*(TRUNC(NVL(ROAMING_RETARIF_PHONES.END_DATE_TIME, SYSDATE))-
    TRUNC(ROAMING_RETARIF_PHONES.BEGIN_DATE_TIME)+1) ABON_PAYMENT,
  ROUND(AVG(C.INSERT_DATE-C.START_TIME)*24, 1) LOAD_DELAY,
  SUM(trunc(c.cost_chng, 2)) - 5*(TRUNC(NVL(ROAMING_RETARIF_PHONES.END_DATE_TIME, SYSDATE))-
    TRUNC(ROAMING_RETARIF_PHONES.BEGIN_DATE_TIME)+1) SUMMARY_PROFIT
from 
  (select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_08_2014
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_09_2014
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_10_2014
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_11_2014
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_12_2014
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_01_2015
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_02_2015
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_03_2015
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_04_2015
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_05_2015
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_06_2015
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_07_2015
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_08_2015
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_09_2015
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_10_2015
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_11_2015
  UNION ALL
  select SUBSCR_NO, CALL_COST, START_TIME, COST_CHNG, SERVICETYPE, INSERT_DATE from CALL_12_2015) C, 
  ROAMING_RETARIF_PHONES
where 
  c.subscr_no(+) = ROAMING_RETARIF_PHONES.phone_number
  AND ROAMING_RETARIF_PHONES.ROAMING_RETARIF_METHOD=1 /* Только с пересчетом */
  and (c.start_time(+) between ROAMING_RETARIF_PHONES.BEGIN_DATE_TIME and nvl(ROAMING_RETARIF_PHONES.END_DATE_TIME, sysdate))
GROUP BY
  ROAMING_RETARIF_PHONES.PHONE_NUMBER,
  TRUNC(ROAMING_RETARIF_PHONES.BEGIN_DATE_TIME),
  TRUNC(ROAMING_RETARIF_PHONES.END_DATE_TIME),
  TRUNC(NVL(ROAMING_RETARIF_PHONES.END_DATE_TIME, SYSDATE))
ORDER BY
  TRUNC(ROAMING_RETARIF_PHONES.BEGIN_DATE_TIME) DESC
/

--GRANT SELECT ON V_ROAMING_RETARIF_PROFIT_PHONE TO ALEXEY_UKOLOV;