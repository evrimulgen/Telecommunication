
  CREATE OR REPLACE TRIGGER "SIM_TRADE"."BUI_DB_LOADER_ACC_PHONES" 
  before insert or update on db_loader_account_phones  
  for each row
  -- Version = 2
declare
  CURSOR C(YM IN INTEGER, PH IN VARCHAR2) IS
    SELECT *
      FROM DB_LOADER_PHONE_PERIODS DB
      WHERE DB.YEAR_MONTH = YM
        AND DB.PHONE_NUMBER = PH;
  vDUMMY C%ROWTYPE;
  CURSOR H(PH IN VARCHAR2, CH IN DATE) IS
    SELECT *
      FROM DB_LOADER_ACCOUNT_PHONE_HISTS D
      WHERE D.PHONE_NUMBER = PH
        AND D.BEGIN_DATE <= CH
        AND D.END_DATE >= CH;
  vDUMMY_H H%ROWTYPE;     
begin
  :new.last_check_date_time:=sysdate;
  OPEN C(:NEW.YEAR_MONTH, :NEW.PHONE_NUMBER);
  FETCH C INTO vDUMMY;
  IF C%FOUND THEN
    UPDATE DB_LOADER_PHONE_PERIODS DB
      SET DB.ACCOUNT_ID = :NEW.ACCOUNT_ID,
          DB.TARIFF_CODE = :NEW.CELL_PLAN_CODE
      WHERE DB.YEAR_MONTH = :NEW.YEAR_MONTH 
        AND DB.PHONE_NUMBER = :NEW.PHONE_NUMBER;
  ELSE
    INSERT INTO DB_LOADER_PHONE_PERIODS(YEAR_MONTH, PHONE_NUMBER, ACCOUNT_ID, TARIFF_CODE)
      VALUES(:NEW.YEAR_MONTH, :NEW.PHONE_NUMBER, :NEW.ACCOUNT_ID, :NEW.CELL_PLAN_CODE);
  END IF;
  CLOSE C;  
  OPEN H(:NEW.PHONE_NUMBER, :new.last_check_date_time);
  FETCH H INTO vDUMMY_H;
  IF H%FOUND THEN
    IF NVL(:new.PHONE_IS_ACTIVE, 0) <> NVL(vDUMMY_H.PHONE_IS_ACTIVE, 0) 
        OR NVL(:new.CELL_PLAN_CODE, '0') <> NVL(vDUMMY_H.CELL_PLAN_CODE, '0') 
        OR NVL(:new.CONSERVATION, 0) <> NVL(vDUMMY_H.CONSERVATION, 0) 
        OR NVL(:new.SYSTEM_BLOCK, 0) <> NVL(vDUMMY_H.SYSTEM_BLOCK, 0)
        OR NVL(:new.STATUS_ID, 0) <> NVL(vDUMMY_H.STATUS_ID, 0) THEN
      UPDATE DB_LOADER_ACCOUNT_PHONE_HISTS D
        SET D.END_DATE = :new.last_check_date_time - 1/24/60/60  --  -1sec
        WHERE D.PHONE_NUMBER = :NEW.PHONE_NUMBER
          AND D.BEGIN_DATE <= :new.last_check_date_time
          AND D.END_DATE >= :new.last_check_date_time;
      INSERT INTO DB_LOADER_ACCOUNT_PHONE_HISTS(PHONE_NUMBER, BEGIN_DATE, END_DATE, PHONE_IS_ACTIVE, 
                                                CELL_PLAN_CODE, CONSERVATION, SYSTEM_BLOCK, STATUS_ID)
        VALUES(:NEW.PHONE_NUMBER, :new.last_check_date_time, TO_DATE('01.01.3000','DD.MM.YYYY'), :new.PHONE_IS_ACTIVE, 
               :new.CELL_PLAN_CODE, :new.CONSERVATION, :new.SYSTEM_BLOCK, :new.STATUS_ID);
    END IF;
  ELSE
    INSERT INTO DB_LOADER_ACCOUNT_PHONE_HISTS(PHONE_NUMBER, BEGIN_DATE, END_DATE, PHONE_IS_ACTIVE, 
                                              CELL_PLAN_CODE, CONSERVATION, SYSTEM_BLOCK, STATUS_ID)
      VALUES(:NEW.PHONE_NUMBER, :new.last_check_date_time, TO_DATE('01.01.3000','DD.MM.YYYY'), :new.PHONE_IS_ACTIVE, 
             :new.CELL_PLAN_CODE, :new.CONSERVATION, :new.SYSTEM_BLOCK, :new.STATUS_ID);
  END IF;
  CLOSE H;
end BUI_db_loader_acc_phones; 
ALTER TRIGGER "SIM_TRADE"."BUI_DB_LOADER_ACC_PHONES" ENABLE