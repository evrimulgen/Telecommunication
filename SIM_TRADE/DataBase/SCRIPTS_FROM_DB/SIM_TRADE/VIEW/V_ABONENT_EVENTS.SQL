
  CREATE OR REPLACE FORCE VIEW "SIM_TRADE"."V_ABONENT_EVENTS" ("PHONE_NUMBER", "EVENT_CODE", "DESCRIPTION", "IMAGE_BMP", "EVENT_DATE", "INCOME", "OUTCOME", "BALANCE", "EVENT", "NOTE") AS 
  SELECT
--#Version=5
--
-- События, произошедние с абонентом.
-- Открывать с фильтром PHONE_NUMBER=...!
--
  CONTRACTS.PHONE_NUMBER_FEDERAL as PHONE_NUMBER, 
  EVENTS.EVENT_CODE,
  EVENT_DESCRIPTIONS.DESCRIPTION,
  EVENT_DESCRIPTIONS.IMAGE_BMP, 
  EVENTS.EVENT_DATE, 
  CASE WHEN EVENTS.COST > 0 THEN ROUND(EVENTS.COST, 2) ELSE NULL END INCOME,
  CASE WHEN EVENTS.COST < 0 THEN ROUND(EVENTS.COST, 2) ELSE NULL END OUTCOME,
  EVENTS.BALANCE, 
  EVENTS.EVENT,
  EVENTS.NOTE
FROM
(SELECT  --статус
  DB_LOADER_ACCOUNT_PHONE_HISTS.PHONE_NUMBER,
  'STATUS' as EVENT_CODE, 
  DB_LOADER_ACCOUNT_PHONE_HISTS.BEGIN_DATE as EVENT_DATE,
  TO_NUMBER(NULL) COST,
  TO_NUMBER(NULL) BALANCE,
  'Смена статуса' EVENT,
  CASE 
    WHEN DB_LOADER_ACCOUNT_PHONE_HISTS.PHONE_IS_ACTIVE = 1 THEN
      'Активен, тариф '|| DB_LOADER_ACCOUNT_PHONE_HISTS.CELL_PLAN_CODE
    ELSE
      'Блокирован'
  END as NOTE
FROM DB_LOADER_ACCOUNT_PHONE_HISTS
/*
UNION ALL
SELECT --расшифровка баланса (входят платежи и счета)
  ABONENT_BALANCE_ROWS.ROW_DATE BEGIN_DATE, 
  ABONENT_BALANCE_ROWS.ROW_COMMENT ACTION,
  'Поступило: '||ABONENT_BALANCE_ROWS.ROW_COST NOTE
FROM ABONENT_BALANCE_ROWS
WHERE ABONENT_BALANCE_ROWS.ROW_COST > 0
UNION ALL
SELECT
  ABONENT_BALANCE_ROWS.ROW_DATE BEGIN_DATE, 
  ABONENT_BALANCE_ROWS.ROW_COMMENT ACTION,
  'Начислено: '||-ABONENT_BALANCE_ROWS.ROW_COST NOTE
FROM ABONENT_BALANCE_ROWS
WHERE ABONENT_BALANCE_ROWS.ROW_COST < 0
*/
UNION ALL
select  --блок/разблок
  t.phone_number, 
  CASE ticket_type
    WHEN 15 THEN -- Подключение/отключение услуг
        (SELECT 
        CASE WHEN TARIFF_OPTIONS_REQ_LOG.INCLUSION_TYPE='A' THEN
          'OPTION_TURN_ON'
        ELSE 
          'OPTION_TURN_OFF'
        END  
          FROM TARIFF_OPTIONS_REQ_LOG 
          WHERE 
          TARIFF_OPTIONS_REQ_LOG.REQUEST_ID=TO_CHAR(t.TICKET_ID)
          AND ROWNUM<=1)
  WHEN 9 THEN
    'BLOCK'
  WHEN 10 THEN
    'UNLOCK'
  ELSE
    'TICKET' 
  END as ACTION_TYPE, 
  t.date_create begin_date,
  TO_NUMBER(NULL) COST,
  TO_NUMBER(NULL) BALANCE,
CASE WHEN ticket_type = 15 THEN -- Подключение/отключение услуг
    (SELECT 
      CASE 
        WHEN TARIFF_OPTIONS_REQ_LOG.INCLUSION_TYPE='A' THEN
          'Подключение услуги ' || TARIFF_OPTIONS_REQ_LOG.OPTION_CODE
          ELSE 
          'Отключение услуги ' || TARIFF_OPTIONS_REQ_LOG.OPTION_CODE
      END  
      FROM TARIFF_OPTIONS_REQ_LOG 
      WHERE 
      TARIFF_OPTIONS_REQ_LOG.REQUEST_ID=TO_CHAR(t.TICKET_ID)
      AND ROWNUM<=1)
  WHEN ticket_type = 9 THEN -- Блокировка
    'Команда блокирования' || (select ' на сохранение' from queue_phone_reblock_log where ticked_lock_id=t.ticket_id)
  WHEN ticket_type = 10 THEN -- Блокировка
    'Команда разблокирования' || (select ' (для блока на сохранение)' from queue_phone_reblock_log where ticked_unlock_id=t.ticket_id)
  ELSE
    'Команда ' || NVL((select ticket_type_name from beeline_ticket_types where beeline_ticket_types.ticket_type_id=t.ticket_type), '???') 
  END action,
  TO_CHAR(T.USER_CREATED) || ', заявка ' || TO_CHAR(t.TICKET_ID) || ' ' || decode(nvl(t.answer,'-1'),'-1','Не проверено','0','Отклонена','1','Исполнено','Иное')
    ||'. '||t.comments note
from beeline_tickets t
UNION ALL
SELECT --отправленные смс
  SMS_LOG.PHONE,
  'SMS' as ACTION_TYPE, 
  SEND_DATE BEGIN_DATE,
  TO_NUMBER(NULL) COST,
  TO_NUMBER(NULL) BALANCE,
  'SMS '||DECODE(STATUS, 'DELIVERED', 'доставлено', 'Статус: '||STATUS),
  MESSAGE NOTE
FROM SMS_LOG
--
UNION ALL
SELECT --отправленные USSD
  USSD_LOG.MSISDN,
  'USSD' as ACTION_TYPE, 
  USSD_DATE BEGIN_DATE,
  TO_NUMBER(NULL) COST,
  TO_NUMBER(NULL) BALANCE,
  'USSD: '||USSD,
  TEXT_RES
FROM USSD_LOG
  WHERE USSD IS NOT NULL
--
UNION ALL
SELECT --автороуминг включен
  PHONE_NUMBER,
  'AUTOROAMING_ON' as ACTION_TYPE, 
   BEGIN_DATE_TIME BEGIN_DATE, 
  TO_NUMBER(NULL) COST,
  TO_NUMBER(NULL) BALANCE,
   'Автороуминг включен' ACTION,
   'Заявка на подключение: '||SERVICE_ON_TICKET_ID AS NOTE
FROM ROAMING_RETARIF_PHONES
UNION ALL
SELECT --автороуминг отключен
  PHONE_NUMBER,
  'AUTOROAMING_OFF' as ACTION_TYPE, 
   END_DATE_TIME,
  TO_NUMBER(NULL) COST,
  TO_NUMBER(NULL) BALANCE,
   'Автороуминг отключен' ACTION,
   'Заявка на отключение: '||SERVICE_OFF_TICKET_ID AS NOTE
FROM ROAMING_RETARIF_PHONES
-- Платежи обычные
UNION ALL
SELECT
  PHONE_NUMBER, 
  'PAYMENT' as ACTION_TYPE, 
  REAL_CREATED_AT, 
  PAYMENT_SUM COST,
  TO_NUMBER(NULL) BALANCE,
  'Платеж: '||PAYMENT_REMARK||' от '||TO_CHAR(PAYMENT_DATE, 'DD.MM.YYYY'), 
  to_char(PAYMENT_SUM)||' руб.'
FROM
  V_FULL_BALANCE_PAYMENTS
  WHERE PAYMENT_TYPE<>3 -- Обещанные платежи исключаем
--
-- Платежи "до счета", окончившие действие
--
UNION ALL
SELECT
  RECEIVED_PAYMENTS.PHONE_NUMBER,
  'PAYMENT_STOPPED_ON_BILL',
  ACCOUNT_LOADED_BILLS.DATE_LAST_UPDATE AS CREATED_DATE,
  -RECEIVED_PAYMENTS.PAYMENT_SUM COST,
  TO_NUMBER(NULL) BALANCE,
  'Корректировка к счету прекратила действие',
  -RECEIVED_PAYMENTS.PAYMENT_SUM || ' руб. от ' || TO_CHAR(RECEIVED_PAYMENTS.DATE_CREATED, 'DD.MM.YYYY HH24:MI:SS')
FROM 
  RECEIVED_PAYMENTS, 
  DB_LOADER_FULL_FINANCE_BILL,
  ACCOUNT_LOADED_BILLS
WHERE     
  IS_CONTRACT_PAYMENT = 0 -- Кроме платежей в момент заключения договора
  AND REVERSESCHET = 1
  AND DB_LOADER_FULL_FINANCE_BILL.PHONE_NUMBER=RECEIVED_PAYMENTS.phone_number
  AND DB_LOADER_FULL_FINANCE_BILL.YEAR_MONTH=TO_NUMBER(TO_CHAR(RECEIVED_PAYMENTS.PAYMENT_DATE_TIME, 'yyyymm'))
  AND ACCOUNT_LOADED_BILLS.ACCOUNT_ID=DB_LOADER_FULL_FINANCE_BILL.ACCOUNT_ID
  AND ACCOUNT_LOADED_BILLS.YEAR_MONTH=DB_LOADER_FULL_FINANCE_BILL.YEAR_MONTH
  AND ACCOUNT_LOADED_BILLS.LOAD_BILL_IN_BALANCE=1
-- Платежи обещанные начали действовать
UNION ALL
select
  phone_number,
  'PROMISED_PAYMENT_ON' as ACTION_TYPE, 
  DATE_CREATED,
  promised_sum,
  TO_NUMBER(NULL) BALANCE,
  'Обещанный платеж от '||TO_CHAR(payment_date, 'dd.mm.yyyy'),
  to_char(promised_sum) || ' р. действует до ' || TO_CHAR(PROMISED_DATE_END, 'dd.mm.yyyy')
FROM
  promised_payments
-- Платежи обещанные закончили действовать
UNION ALL
select
  phone_number,
  'PROMISED_PAYMENT_OFF' as ACTION_TYPE, 
  PROMISED_DATE,
  -PROMISED_SUM,
  TO_NUMBER(NULL) BALANCE,
  'Закончился обещанный платеж от '||TO_CHAR(payment_date, 'dd.mm.yyyy'),
  to_char(promised_sum)
FROM
  promised_payments
UNION ALL
-- Баланс
select
  contracts.phone_number_federal,
  'BALANCE_ROW',
  BALANCE.ROW_DATE,
  BALANCE.ROW_COST,
  TO_NUMBER(NULL) BALANCE,
  BALANCE.DESCRIPTION,
  TO_CHAR(ROUND(BALANCE.ROW_COST, 2)) || ' руб.'
FROM 
  CONTRACTS,
  TABLE(CALC_BALANCE_ROWS_TABLE_BY_DAY(contracts.phone_number_federal)) BALANCE
WHERE
  CONTRACTS.CONTRACT_DATE=(SELECT MAX(C2.CONTRACT_DATE) FROM CONTRACTS C2 WHERE C2.PHONE_NUMBER_FEDERAL=CONTRACTS.PHONE_NUMBER_FEDERAL)
  AND BALANCE.DESCRIPTION not like 'Оплата:%' -- Оплаты считаем отдельно
UNION ALL
-- Новый договор
select
  contracts.phone_number_federal,
  'NEW_CONTRACT',
  CONTRACTS.CONTRACT_DATE,
  TO_NUMBER(NULL) COST,
  TO_NUMBER(NULL) BALANCE,
  'Новый договор',
  'Код: ' || CONTRACTS.CONTRACT_ID
FROM 
  CONTRACTS
WHERE
  CONTRACTS.CONTRACT_DATE=(SELECT MAX(C2.CONTRACT_DATE) FROM CONTRACTS C2 WHERE C2.PHONE_NUMBER_FEDERAL=CONTRACTS.PHONE_NUMBER_FEDERAL)
UNION ALL
-- Изменения контракта
select
  contracts.phone_number_federal,
  'CONTRACT_CHANGE',
  CONTRACT_CHANGES.DATE_CREATED,
  TO_NUMBER(NULL) COST,
  TO_NUMBER(NULL) BALANCE,
  DOCUM_TYPES.DOCUM_TYPE_NAME,
  TARIFFS.TARIFF_NAME
FROM 
  CONTRACTS,
  CONTRACT_CHANGES,
  DOCUM_TYPES,
  TARIFFS
WHERE 
  CONTRACTS.CONTRACT_ID=CONTRACT_CHANGES.CONTRACT_ID
  AND CONTRACTS.CONTRACT_DATE=(SELECT MAX(C2.CONTRACT_DATE) FROM CONTRACTS C2 WHERE C2.PHONE_NUMBER_FEDERAL=CONTRACTS.PHONE_NUMBER_FEDERAL)
  AND CONTRACT_CHANGES.DOCUM_TYPE_ID=DOCUM_TYPES.DOCUM_TYPE_ID
  AND TARIFFS.TARIFF_ID(+)=CONTRACT_CHANGES.TARIFF_ID
--
-- Смена л/счета
--
UNION ALL
SELECT
  ACCS.phone_number, 
  'ACCOUNT_CHANGED',
  ACCS.account_date,
  TO_NUMBER(NULL) COST,
  TO_NUMBER(NULL) BALANCE,
  'Смена лицевого счета',
  ACCOUNTS_PREV.account_number || ' (' || ACCOUNTS_PREV.company_name || ')' ||
  ' => ' || ACCOUNTS.account_number || ' (' || ACCOUNTS.company_name || ')' 
FROM (
SELECT ACCOUNT_DATE, 
  ACCOUNT_ID, 
  LAG(ACCOUNT_ID, 1)  OVER(PARTITION BY PHONE_NUMBER ORDER BY ACCOUNT_DATE) PREV_ACCOUNT_ID,
  PHONE_NUMBER, SOURCE 
FROM V_PHONE_ACCOUNT_HISTORY
) ACCS,
ACCOUNTS,
ACCOUNTS ACCOUNTS_PREV
where ACCS.account_id <> ACCS.prev_account_id
and ACCOUNTS.account_id=ACCS.account_id
and ACCOUNTS_PREV.account_id=ACCS.prev_account_id
--
-- История балансов
--
UNION ALL
SELECT 
  CONTRACTS.PHONE_NUMBER_FEDERAL,
  'BALANCE_FIX',
  IOT_BALANCE_HISTORY.START_TIME,
  TO_NUMBER(NULL) COST,
  IOT_BALANCE_HISTORY.BALANCE,
  'Зафиксирован баланс', 
  TO_CHAR(IOT_BALANCE_HISTORY.BALANCE) || ' руб.' 
FROM 
  CONTRACTS,
  IOT_BALANCE_HISTORY 
WHERE
  CONTRACTS.CONTRACT_DATE=(SELECT MAX(C2.CONTRACT_DATE) FROM CONTRACTS C2 WHERE C2.PHONE_NUMBER_FEDERAL=CONTRACTS.PHONE_NUMBER_FEDERAL)
  AND IOT_BALANCE_HISTORY.PHONE_NUMBER=TO_NUMBER(CONTRACTS.PHONE_NUMBER_FEDERAL)
  AND IOT_BALANCE_HISTORY.START_TIME >= SYSDATE-60
) EVENTS,
  CONTRACTS,
  EVENT_DESCRIPTIONS
WHERE 
  EVENTS.PHONE_NUMBER=CONTRACTS.PHONE_NUMBER_FEDERAL
  AND CONTRACTS.CONTRACT_DATE=(SELECT MAX(C2.CONTRACT_DATE) FROM CONTRACTS C2 WHERE C2.PHONE_NUMBER_FEDERAL=CONTRACTS.PHONE_NUMBER_FEDERAL)
  AND EVENT_DESCRIPTIONS.EVENT_CODE(+) = EVENTS.EVENT_CODE
  AND EVENTS.EVENT_DATE >= CONTRACTS.CONTRACT_DATE-10