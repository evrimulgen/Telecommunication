--#if not TableExists('ACCOUNT_LOAD_LOGS') then
--DROP TABLE ACCOUNT_LOAD_LOGS;

CREATE TABLE ACCOUNT_LOAD_LOGS (
  ACCOUNT_LOAD_LOG_ID INTEGER
    CONSTRAINT PK_ACCOUNT_LOAD_LOGS PRIMARY KEY,
  ACCOUNT_ID INTEGER
    CONSTRAINT FK_ACCOUNT_LOAD_LOGS_ACC_ID REFERENCES ACCOUNTS ON DELETE CASCADE,
  LOAD_DATE_TIME DATE,
  IS_SUCCESS NUMBER(1, 0) CHECK (IS_SUCCESS IN (0, 1)),
  ERROR_TEXT VARCHAR2(2000 CHAR)
);
 
ALTER TABLE ACCOUNT_LOAD_LOGS ADD ACCOUNT_LOAD_TYPE_ID INTEGER;

ALTER TABLE ACCOUNT_LOAD_LOGS ADD CONSTRAINT FK_ACCOUNT_LOAD_TYPE_ID 
 FOREIGN KEY (ACCOUNT_LOAD_TYPE_ID) REFERENCES ACCOUNT_LOAD_TYPES;
 
COMMENT ON TABLE ACCOUNT_LOAD_LOGS IS 'Журнал загрузок информации с сайта оператора';

COMMENT ON COLUMN ACCOUNT_LOAD_LOGS.ACCOUNT_LOAD_LOG_ID IS 'Код записи (первичный ключ)';

COMMENT ON COLUMN ACCOUNT_LOAD_LOGS.ACCOUNT_ID IS 'Код лицевого счёта';

COMMENT ON COLUMN ACCOUNT_LOAD_LOGS.LOAD_DATE_TIME IS 'Дата и время загрузки';

COMMENT ON COLUMN ACCOUNT_LOAD_LOGS.IS_SUCCESS IS 'Признак успешной загрузки (1 - успешно, 0 - ошибка)';

COMMENT ON COLUMN ACCOUNT_LOAD_LOGS.ERROR_TEXT IS 'Текст ошибки, если она была';

COMMENT ON COLUMN ACCOUNT_LOAD_LOGS.ACCOUNT_LOAD_TYPE_ID IS 'Код вида загрузки';


CREATE INDEX I_ACCOUNT_LOAD_LOGS_ACC_LOAD_D ON ACCOUNT_LOAD_LOGS (ACCOUNT_ID, LOAD_DATE_TIME)
COMPRESS 1;

CREATE SEQUENCE S_NEW_ACCOUNT_LOAD_LOG_ID;

CREATE OR REPLACE FUNCTION NEW_ACCOUNT_LOAD_LOG_ID RETURN NUMBER IS
--#Version=1
  vRES NUMBER;
BEGIN
  --raise_application_error(-20000, '!');
  SELECT S_NEW_ACCOUNT_LOAD_LOG_ID.NEXTVAL
  INTO vRES
  FROM DUAL;
  RETURN vRES;
END;
-- Add/modify columns 
alter table ACCOUNT_LOAD_LOGS add beeline_rn nvarchar2(30);
-- Add comments to the columns 
comment on column ACCOUNT_LOAD_LOGS.beeline_rn
  is 'Код заказа билайн';
/
--#end if

--#if not IndexExists('I_ACCOUNT_LOAD_LOGS_BEELINE_RN') then
CREATE INDEX I_ACCOUNT_LOAD_LOGS_BEELINE_RN ON ACCOUNT_LOAD_LOGS(BEELINE_RN);
--#end if

--#if not IndexExists('I_ACCOUNT_LOAD_LOGS_TYPE_ER_DT') then
CREATE INDEX I_ACCOUNT_LOAD_LOGS_TYPE_ER_DT ON ACCOUNT_LOAD_LOGS(ACCOUNT_LOAD_TYPE_ID, ERROR_TEXT, LOAD_DATE_TIME) COMPRESS 2;
--#end if

--#if not IndexExists('I_ACCOUNT_LOAD_LOGS_TYPE_SC_DT') then
CREATE INDEX I_ACCOUNT_LOAD_LOGS_TYPE_SC_DT ON ACCOUNT_LOAD_LOGS(ACCOUNT_LOAD_TYPE_ID, IS_SUCCESS, LOAD_DATE_TIME) COMPRESS 2;
--#end if

--#if not IndexExists('I_ACCOUNT_LOAD_LOGS_ACC_ACTYPE') then
CREATE INDEX I_ACCOUNT_LOAD_LOGS_ACC_ACTYPE ON ACCOUNT_LOAD_LOGS(ACCOUNT_ID, ACCOUNT_LOAD_TYPE_ID);
--#end if