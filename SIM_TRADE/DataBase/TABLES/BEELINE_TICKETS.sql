CREATE TABLE BEELINE_TICKETS
(
  TICKET_ID     NVARCHAR2(15)                   NOT NULL,
  ACCOUNT_ID    INTEGER,
  BAN           VARCHAR2(15 BYTE),
  TICKET_TYPE   INTEGER,
  ANSWER        INTEGER,
  COMMENTS      VARCHAR2(500 BYTE),
  PHONE_NUMBER  VARCHAR2(10 BYTE),
  USER_CREATED  NVARCHAR2(50),
  DATE_UPDATE   DATE,
  DATE_CREATE   DATE
)
TABLESPACE USERS
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BEELINE_TICKETS IS 'Таблица заявок Би.';

COMMENT ON COLUMN BEELINE_TICKETS.TICKET_ID IS 'Номер заявки в Би.';

COMMENT ON COLUMN BEELINE_TICKETS.ACCOUNT_ID IS 'Лицевой счёт(ИД)';

COMMENT ON COLUMN BEELINE_TICKETS.TICKET_TYPE IS 'Тип заявки 10- разблокировка, 9 - блокировка, 12 - смена сим-карты';

COMMENT ON COLUMN BEELINE_TICKETS.ANSWER IS ' 0 не проверенные; 1 удачно(разрешенные); 2 ошибка - на проверку в билайн';

COMMENT ON COLUMN BEELINE_TICKETS.COMMENTS IS 'Комментарии к заявке, если были.';

COMMENT ON COLUMN BEELINE_TICKETS.PHONE_NUMBER IS 'Телефон, если блок-разблок';


CREATE INDEX I_BEELINE_TICKETS_ACCOUNT_ANSW ON BEELINE_TICKETS
(ACCOUNT_ID, ANSWER)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL
COMPRESS 1;

CREATE INDEX I_BEELINE_TICKETS_PHONE_NUMBER ON BEELINE_TICKETS
(PHONE_NUMBER)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL
COMPRESS 1;


CREATE INDEX I_BEELINE_TICKETS_ANSWER ON BEELINE_TICKETS (ANSWER);

CREATE INDEX I_BEELINE_TICKETS_TICKET_TYPE ON BEELINE_TICKETS (TICKET_TYPE);

CREATE UNIQUE INDEX I_PR_TICKET_BEE ON BEELINE_TICKETS (TICKET_ID);

create index i_beeline_tickets_date_update on beeline_tickets(date_update);

ALTER TABLE BEELINE_TICKETS ADD (
  CONSTRAINT I_PR_TICKET_BEE
  PRIMARY KEY
  (TICKET_ID)
  USING INDEX I_PR_TICKET_BEE
  ENABLE VALIDATE);

ALTER TABLE BEELINE_TICKETS ADD (
  CONSTRAINT FK_BEELINE_TICKETS_ANSWER 
  FOREIGN KEY (ANSWER) 
  REFERENCES ANSWER_TYPES (ANSWER_TYPE_ID)
  ENABLE VALIDATE,
  CONSTRAINT FK_BEELINE_TICKETS_TICKET_TYPE 
  FOREIGN KEY (TICKET_TYPE) 
  REFERENCES BEELINE_TICKET_TYPES (TICKET_TYPE_ID)
  ENABLE VALIDATE);

GRANT ALTER, DELETE, INSERT, SELECT, UPDATE ON BEELINE_TICKETS TO CORP_MOBILE_ROLE;

GRANT SELECT ON BEELINE_TICKETS TO CORP_MOBILE_ROLE_RO;

CREATE OR REPLACE TRIGGER TIU_BEELINE_TICKETS
  BEFORE INSERT OR UPDATE ON BEELINE_TICKETS FOR EACH ROW 
--#Version=1
DECLARE 
  vSTATUS VARCHAR2(100 CHAR);
BEGIN
  IF (UPDATING) AND (:NEW.TICKET_TYPE IN (9, 10)) THEN 
    IF (NVL(:NEW.ANSWER, -1) = 0) AND (NVL(:OLD.ANSWER, -1) = -1) then
      vSTATUS:=BEELINE_API_PCKG.PHONE_STATUS(:NEW.PHONE_NUMBER);
      SELECT B.STATUS_CODE INTO vSTATUS
        FROM DB_LOADER_ACCOUNT_PHONES D,
             BEELINE_STATUS_CODE B
        WHERE D.PHONE_NUMBER = :NEW.PHONE_NUMBER
          AND D.YEAR_MONTH = TO_NUMBER(TO_CHAR(SYSDATE, 'YYYYMM'))
          AND D.STATUS_ID = B.STATUS_ID(+)
          and rownum <=1;
      :NEW.COMMENTS := :NEW.COMMENTS||'Код статуса: '||vSTATUS;
    END IF;
  END IF;
END;
/
