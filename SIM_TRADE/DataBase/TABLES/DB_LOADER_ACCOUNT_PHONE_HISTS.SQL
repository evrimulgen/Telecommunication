--DROP TABLE DB_LOADER_ACCOUNT_PHONE_HISTS;

--#if not ObjectExists("S_NEW_DB_LOADER_ACC_PH_HIST_ID") then
CREATE SEQUENCE S_NEW_DB_LOADER_ACC_PH_HIST_ID;
--#end if

--#if GetVersion("NEW_DB_LOADER_ACC_PH_HIST_ID") < 1 then
CREATE OR REPLACE FUNCTION NEW_DB_LOADER_ACC_PH_HIST_ID RETURN NUMBER IS
--#Version=1
  vRES NUMBER;
BEGIN
  SELECT S_NEW_DB_LOADER_ACC_PH_HIST_ID.NEXTVAL
  INTO vRES
  FROM DUAL;
  RETURN vRES;
END;
/
--#end if

--#if not TableExists("DB_LOADER_ACCOUNT_PHONE_HISTS") then
CREATE TABLE DB_LOADER_ACCOUNT_PHONE_HISTS (
  HISTORY_ID     INTEGER    NOT NULL) ; 
--#End if
  
--#if not ColumnExists("DB_LOADER_ACCOUNT_PHONE_HISTS.PHONE_NUMBER") then
ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD   PHONE_NUMBER   VARCHAR2 (100 CHAR);
--#end if

--#if not ColumnExists("DB_LOADER_ACCOUNT_PHONE_HISTS.BEGIN_DATE") then
ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD   BEGIN_DATE   DATE;
--#end if

--#if not ColumnExists("DB_LOADER_ACCOUNT_PHONE_HISTS.END_DATE") then
ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD   END_DATE  DATE;
--#end if

--#if not ColumnExists("DB_LOADER_ACCOUNT_PHONE_HISTS.PHONE_IS_ACTIVE") then
ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD PHONE_IS_ACTIVE NUMBER(1);
--#end if

--#if not ColumnExists("DB_LOADER_ACCOUNT_PHONE_HISTS.CELL_PLAN_CODE") then
ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD CELL_PLAN_CODE VARCHAR2(50 CHAR);
--#end if

--#if not ColumnExists("DB_LOADER_ACCOUNT_PHONE_HISTS.USER_CREATED") then
ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD USER_CREATED       VARCHAR2(30 CHAR);
--#end if

--#if not ColumnExists("DB_LOADER_ACCOUNT_PHONE_HISTS.DATE_CREATED") then
ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD DATE_CREATED       DATE;
--#end if

--#if not ColumnExists("DB_LOADER_ACCOUNT_PHONE_HISTS.USER_LAST_UPDATED") then
ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD USER_LAST_UPDATED  VARCHAR2(30 CHAR);
--#end if

--#if not ColumnExists("DB_LOADER_ACCOUNT_PHONE_HISTS.DATE_LAST_UPDATED") then
ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD DATE_LAST_UPDATED  DATE;
--#end if

--#if not ObjectExists("PK_DB_LOADER_ACC_PHONE_HISTS") then
ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD 
  CONSTRAINT PK_DB_LOADER_ACC_PHONE_HISTS
    PRIMARY KEY ( HISTORY_ID ) ;
--#end if

CREATE INDEX I_DB_LOADER_ACC_PH_HIST_PHONE
ON DB_LOADER_ACCOUNT_PHONE_HISTS
(PHONE_NUMBER) COMPRESS 1
/

--#if Left(GetTableComment("DB_LOADER_ACCOUNT_PHONE_HISTS"), 5) <> "Произ" then
COMMENT ON TABLE DB_LOADER_ACCOUNT_PHONE_HISTS IS '';
--#end if

--#if Left(GetColumnComment("DB_LOADER_ACCOUNT_PHONE_HISTS.HISTORY_ID"), 5) <> "ПК" then
COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.HISTORY_ID IS 'Первичный ключ';
--#end if
--#if Left(GetColumnComment("DB_LOADER_ACCOUNT_PHONE_HISTS.BEGIN_DATE"), 5) <> "Дата " then
COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.BEGIN_DATE IS 'Дата начала (включительно)';
--#end if
--#if Left(GetColumnComment("DB_LOADER_ACCOUNT_PHONE_HISTS.END_DATE"), 5) <> "Дата " then
COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.END_DATE IS 'Дата окончания (НЕ включительно)';
--#end if
--#if Left(GetColumnComment("DB_LOADER_ACCOUNT_PHONE_HISTS.PHONE_NUMBER"), 5) <> "Номер" then
COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.PHONE_NUMBER IS 'Номер телефона';
--#end if
--#if Left(GetColumnComment("DB_LOADER_ACCOUNT_PHONE_HISTS.PHONE_IS_ACTIVE"), 5) <> "1-акт" then
COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.PHONE_IS_ACTIVE IS '1-активен, иначе нет';
--#end if
--#if Left(GetColumnComment("DB_LOADER_ACCOUNT_PHONE_HISTS.USER_CREATED"), 5) <> "Польз" then
COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.USER_CREATED IS 'Пользователь, создавший запись';
--#end if
--#if Left(GetColumnComment("DB_LOADER_ACCOUNT_PHONE_HISTS.DATE_CREATED"), 5) <> "Дата/" then
COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.DATE_CREATED IS 'Дата/время создания записи';
--#end if
--#if Left(GetColumnComment("DB_LOADER_ACCOUNT_PHONE_HISTS.USER_LAST_UPDATED"), 5) <> "Польз" then
COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.USER_LAST_UPDATED IS 'Пользователь, редактировавший запись последним';
--#end if
--#if Left(GetColumnComment("DB_LOADER_ACCOUNT_PHONE_HISTS.DATE_LAST_UPDATED"), 5) <> "Дата/" then
COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.DATE_LAST_UPDATED IS 'Дата/время последней редакции записи';
--#end if
--#if Left(GetColumnComment("DB_LOADER_ACCOUNT_PHONE_HISTS.CELL_PLAN_CODE"), 5) <> "Код т" then
COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.CELL_PLAN_CODE IS 'Код тарифного плана';
--#end if

--#if GetVersion("TIU_DB_LOADER_ACC_PHONE_HISTS") < 1 then
CREATE OR REPLACE TRIGGER TIU_DB_LOADER_ACC_PHONE_HISTS
  BEFORE INSERT OR UPDATE ON DB_LOADER_ACCOUNT_PHONE_HISTS FOR EACH ROW
--#Version=1
BEGIN
  IF INSERTING THEN
    IF NVL(:NEW.HISTORY_ID, 0) = 0 then
      :NEW.HISTORY_ID := NEW_DB_LOADER_ACC_PH_HIST_ID;
    END IF;
    :NEW.USER_CREATED := USER;
    :NEW.DATE_CREATED := SYSDATE;
    INSERT INTO PHONES_TARIF_FOR_RECALC (PHONE_NUMBER) VALUES (:NEW.PHONE_NUMBER);
  END IF;
  IF UPDATING THEN
    IF :NEW.CELL_PLAN_CODE<>:OLD.CELL_PLAN_CODE THEN
      INSERT INTO PHONES_TARIF_FOR_RECALC (PHONE_NUMBER) VALUES (:NEW.PHONE_NUMBER);
    END IF;
  END IF;
  :NEW.USER_LAST_UPDATED := USER;
  :NEW.DATE_LAST_UPDATED := SYSDATE;
  FOR L IN TRUNC(TO_NUMBER(TO_CHAR(:NEW.BEGIN_DATE, 'YYYYMM')))..TRUNC(TO_NUMBER(TO_CHAR(:NEW.END_DATE, 'YYYYMM')))
  LOOP
    IF (L - TRUNC(L/100)*100 > 0) AND (L - TRUNC(L/100)*100 < 13) 
        AND (L<=TO_NUMBER(TO_CHAR(SYSDATE, 'YYYYMM'))) THEN
      INSERT INTO QUEUE_ABONENT_PER_REBILD(YEAR_MONTH, PHONE_NUMBER)
        VALUES(L, :NEW,PHONE_NUMBER);
    END IF;
  END LOOP;
END;
/
--#end if

ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD (
  CONSTRAINT U_PHONE_END_DATE
 UNIQUE (PHONE_NUMBER, END_DATE));

--#if not IndexExists('I_DB_LOADER_ACP_HST_PH_ACT_DTS') then
CREATE INDEX I_DB_LOADER_ACP_HST_PH_ACT_DTS ON DB_LOADER_ACCOUNT_PHONE_HISTS
(PHONE_NUMBER, PHONE_IS_ACTIVE, BEGIN_DATE, END_DATE) COMPRESS 2;
--#end if

--#if not IndexExists('DB_LOADER_ACC_PHONE_HISTS_OPT') then
CREATE INDEX DB_LOADER_ACC_PHONE_HISTS_OPT ON DB_LOADER_ACCOUNT_PHONE_HISTS
(PHONE_NUMBER, PHONE_IS_ACTIVE, END_DATE, BEGIN_DATE) COMPRESS 2;
--#end if


ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD CONSERVATION  NUMBER(1);

ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD SYSTEM_BLOCK  NUMBER(1);

ALTER TABLE DB_LOADER_ACCOUNT_PHONE_HISTS ADD STATUS_ID  INTEGER;

COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.CONSERVATION IS 'Номер на сохранении 1-да, 0-нет, по деф=0';

COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.SYSTEM_BLOCK IS 'Системный блок за мошенничество 1-да, 0-нет, по деф=0';

COMMENT ON COLUMN DB_LOADER_ACCOUNT_PHONE_HISTS.STATUS_ID IS 'Код статуса номера в Билайне';