CREATE TABLE DETAIL_STATS(
  DETAIL_STATS_ID INTEGER PRIMARY KEY,
  DETAIL_INFO_ID INTEGER NOT NULL,
  DETAIL_TYPE_ID INTEGER NOT NULL,
  SUM_COST NUMBER(13,2) NOT NULL
  );
  
ALTER TABLE DETAIL_STATS
  ADD CONSTRAINT FK_DETAIL_STATS_DETAIL_INFO_ID
  FOREIGN KEY (DETAIL_INFO_ID)
  REFERENCES DETAILS_INFO(DETAIL_INFO_ID);
  
ALTER TABLE DETAIL_STATS
  ADD CONSTRAINT FK_DETAIL_STATS_DETAIL_TYPE_ID
  FOREIGN KEY (DETAIL_TYPE_ID)
  REFERENCES DETAIL_TYPES(DETAIL_TYPE_ID);
 
CREATE SEQUENCE S_NEW_DETAIL_STATS_ID
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;  
  
CREATE OR REPLACE FUNCTION NEW_DETAIL_STATS_ID RETURN INTEGER IS
--#Version=1
  vRES NUMBER;
BEGIN
  SELECT S_NEW_DETAIL_STATS_ID.NEXTVAL
    INTO vRES
    FROM DUAL;
  RETURN vRES;
END;  

CREATE OR REPLACE TRIGGER TIU_DETAIL_STATS
  BEFORE INSERT OR UPDATE ON DETAIL_STATS FOR EACH ROW
--#Version=1
DECLARE
  PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
  IF INSERTING THEN
    IF NVL(:NEW.DETAIL_STATS_ID, 0)=0 THEN
      :NEW.DETAIL_STATS_ID:=NEW_DETAIL_STATS_ID;
    END IF;
  END IF;
END;
/ 
  
CREATE INDEX I_DETAIL_STATS_DETAIL_INFO_ID ON DETAIL_STATS
  (DETAIL_INFO_ID)
  LOGGING
  NOPARALLEL;
  
CREATE INDEX I_DETAIL_STATS_DETAIL_TYPE_ID ON DETAIL_STATS
  (DETAIL_TYPE_ID)
  LOGGING
  NOPARALLEL; 
  
--GRANT DELETE, INSERT, SELECT, UPDATE ON DETAIL_STATS TO CORP_MOBILE_ROLE;

--GRANT SELECT ON DETAIL_STATS TO CORP_MOBILE_ROLE_RO;   