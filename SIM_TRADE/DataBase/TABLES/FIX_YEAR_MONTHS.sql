CREATE TABLE FIX_YEAR_MONTHS(
  FIX_YEAR_MONTH_ID INTEGER PRIMARY KEY,
  FIX_YEAR_MONTH INTEGER,
  FIX_DATE DATE,
  ACCOUNT_ID INTEGER CONSTRAINT NN_ACCOUNT_ID NOT NULL
);
 
CREATE SEQUENCE S_NEW_FIX_YEAR_MONTH_ID;

CREATE OR REPLACE FUNCTION NEW_FIX_YEAR_MONTH_ID RETURN NUMBER IS
--#Version=1
  vRES NUMBER;
BEGIN
  SELECT S_NEW_FIX_YEAR_MONTH_ID.NEXTVAL
  INTO vRES
  FROM DUAL;
  RETURN vRES;
END;

CREATE OR REPLACE TRIGGER TIU_FIX_YEAR_MONTHS
  BEFORE INSERT OR UPDATE ON FIX_YEAR_MONTHS FOR EACH ROW
--#Version=1
BEGIN
  IF INSERTING THEN
    IF NVL(:NEW.FIX_YEAR_MONTH_ID, 0) = 0 then
      :NEW.FIX_YEAR_MONTH_ID := NEW_FIX_YEAR_MONTH_ID;
    END IF;
    :NEW.FIX_DATE := SYSDATE;
  END IF;
END;

CREATE UNIQUE INDEX CORP_MOBILE.U_FIX_YEAR_MONTH_ACC ON CORP_MOBILE.FIX_YEAR_MONTHS
(FIX_YEAR_MONTH, ACCOUNT_ID)
LOGGING
NOPARALLEL;

ALTER TABLE CORP_MOBILE.FIX_YEAR_MONTHS ADD(
  CONSTRAINT U_FIX_YEAR_MONTH_ACC
 UNIQUE (FIX_YEAR_MONTH, ACCOUNT_ID)
    USING INDEX);

ALTER TABLE FIX_YEAR_MONTHS ADD 
CONSTRAINT FK_ACCOUNT_ID
 FOREIGN KEY (ACCOUNT_ID)
 REFERENCES ACCOUNTS (ACCOUNT_ID) ENABLE
 VALIDATE;
/