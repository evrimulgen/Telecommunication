--#if not TableExists("INACTIVE_PHONE_LESS_CONTRACT") then
CREATE TABLE INACTIVE_PHONE_LESS_CONTRACT
(
  INACTIVE_PHONE_ID	INTEGER,
  PHONE_NUMBER		VARCHAR2(10) NOT NULL,
  SIM_NUMBER		NUMBER(18) NOT NULL,
  SYSTEM_BILLING	INTEGER CHECK (SYSTEM_BILLING IN (1, 2)),
  DOP_INFO		VARCHAR2(300),
  PAID			INTEGER,
  MASK_BEAUTY_ID	INTEGER,
  PRICE			INTEGER NOT NULL,
  USER_CREATED		VARCHAR2(30 CHAR) NOT NULL,
  DATE_CREATED		DATE NOT NULL,
  USER_LAST_UPDATED	VARCHAR2(30 CHAR),
  DATE_LAST_UPDATED	DATE

)
TABLESPACE USERS;
--#end if

--#if GetTableComment("INACTIVE_PHONE_LESS_CONTRACT")<>"Неактивные номера без контрактов" then
COMMENT ON TABLE INACTIVE_PHONE_LESS_CONTRACT IS 'Неактивные номера без контрактов';
--#end if

--#if GetColumnComment("INACTIVE_PHONE_LESS_CONTRACT.PHONE_NUMBER") <> "Номер" then
COMMENT ON COLUMN INACTIVE_PHONE_LESS_CONTRACT.PHONE_NUMBER IS 'Номер';
--#end if

--#if GetColumnComment("INACTIVE_PHONE_LESS_CONTRACT.SIM_NUMBER") <> "Номер сим" then
COMMENT ON COLUMN INACTIVE_PHONE_LESS_CONTRACT.SIM_NUMBER IS 'Номер сим';
--#end if

--#if GetColumnComment("INACTIVE_PHONE_LESS_CONTRACT.SYSTEM_BILLING") <> "Система расчетов (1 - PREPAID, 2 - POSTPAID)" then
COMMENT ON COLUMN INACTIVE_PHONE_LESS_CONTRACT.SYSTEM_BILLING IS 'Система расчетов (1 - PREPAID, 2 - POSTPAID)';
--#end if

--#if GetColumnComment("INACTIVE_PHONE_LESS_CONTRACT.PAID") <> "Платный" then
COMMENT ON COLUMN INACTIVE_PHONE_LESS_CONTRACT.PAID IS 'Платный';
--#end if

--#if GetColumnComment("INACTIVE_PHONE_LESS_CONTRACT.DOP_INFO") <> "Доп.инфо" then
COMMENT ON COLUMN INACTIVE_PHONE_LESS_CONTRACT.DOP_INFO IS 'Доп.инфо';
--#end if

--#if GetColumnComment("INACTIVE_PHONE_LESS_CONTRACT.MASK_BEAUTY_ID") <> "Маска" then
COMMENT ON COLUMN INACTIVE_PHONE_LESS_CONTRACT.MASK_BEAUTY_ID IS 'Маска';
--#end if

--#if GetColumnComment("INACTIVE_PHONE_LESS_CONTRACT.PRICE") <> "Рыночная стоимость" then
COMMENT ON COLUMN INACTIVE_PHONE_LESS_CONTRACT.PRICE IS 'Рыночная стоимость';
--#end if

--#if GetColumnComment("INACTIVE_PHONE_LESS_CONTRACT.USER_CREATED") <> "Пользователь, создавший запись" then
COMMENT ON COLUMN INACTIVE_PHONE_LESS_CONTRACT.USER_CREATED IS 'Пользователь, создавший запись';
--#end if

--#if GetColumnComment("INACTIVE_PHONE_LESS_CONTRACT.DATE_CREATED") <> "Дата создания записи" then
COMMENT ON COLUMN INACTIVE_PHONE_LESS_CONTRACT.DATE_CREATED IS 'Дата создания записи';
--#end if

--#if GetColumnComment("INACTIVE_PHONE_LESS_CONTRACT.USER_LAST_UPDATED") <> "Пользователь, редактировавший запись последним" then
COMMENT ON COLUMN INACTIVE_PHONE_LESS_CONTRACT.USER_LAST_UPDATED IS 'Пользователь, редактировавший запись последним';
--#end if

--#if GetColumnComment("INACTIVE_PHONE_LESS_CONTRACT.DATE_LAST_UPDATED") <> "Дата последней редакции записи" then
COMMENT ON COLUMN INACTIVE_PHONE_LESS_CONTRACT.DATE_LAST_UPDATED IS 'Дата последней редакции записи';
--#end if

--#if not ConstraintExists("PK_INACTIVE_PHONE_LESS_CONTRA") then
ALTER TABLE INACTIVE_PHONE_LESS_CONTRACT ADD CONSTRAINT PK_INACTIVE_PHONE_LESS_CONTRA PRIMARY KEY (INACTIVE_PHONE_ID);
--#end if

--#if not IndexExists("I_INACTIVE_PHONE_NUMBER") THEN
CREATE INDEX I_INACTIVE_PHONE_NUMBER ON INACTIVE_PHONE_LESS_CONTRACT
(PHONE_NUMBER)
LOGGING
NOPARALLEL;
--#end if

CREATE SEQUENCE S_NEW_INACTIVE_PHONE_ID
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  ORDER;
  

CREATE OR REPLACE FUNCTION NEW_INACTIVE_PHONE_ID RETURN NUMBER IS
--#Version=1
  vRES NUMBER;
BEGIN
  SELECT S_NEW_INACTIVE_PHONE_ID.NEXTVAL
    INTO vRES
    FROM DUAL;
  RETURN vRES;
END;

CREATE OR REPLACE TRIGGER TIU_INACTIVE_PHONE_LESS_CONTRA
  BEFORE INSERT OR UPDATE ON INACTIVE_PHONE_LESS_CONTRACT FOR EACH ROW
BEGIN
  IF INSERTING THEN
    IF NVL(:NEW.INACTIVE_PHONE_ID, 0) = 0 THEN
      :NEW.INACTIVE_PHONE_ID := NEW_INACTIVE_PHONE_ID;
    END IF;
    :NEW.USER_CREATED := USER;
    :NEW.DATE_CREATED := SYSDATE;
  END IF;
  :NEW.USER_LAST_UPDATED := USER;
  :NEW.DATE_LAST_UPDATED := SYSDATE;
END;

--GRANT DELETE, INSERT, SELECT, UPDATE ON INACTIVE_PHONE_LESS_CONTRACT TO CORP_MOBILE_ROLE;
--GRANT DELETE, INSERT, SELECT, UPDATE ON INACTIVE_PHONE_LESS_CONTRACT TO LONTANA;
--GRANT DELETE, INSERT, SELECT, UPDATE ON INACTIVE_PHONE_LESS_CONTRACT TO SIM_TRADE;
--GRANT SELECT ON INACTIVE_PHONE_LESS_CONTRACT TO CORP_MOBILE_ROLE_RO;