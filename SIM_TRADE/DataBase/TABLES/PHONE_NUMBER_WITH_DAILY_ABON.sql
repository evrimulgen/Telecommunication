CREATE TABLE PHONE_NUMBER_WITH_DAILY_ABON(
  PHONE_NUMBER VARCHAR2(10 CHAR),
  USER_LAST_UPDATE VARCHAR2(30 CHAR),
  DATE_LAST_UPDATE DATE
  );
  
CREATE OR REPLACE TRIGGER TIU_PHONE_NUMBER_WITH_DAILY_AB
  BEFORE INSERT OR UPDATE ON PHONE_NUMBER_WITH_DAILY_ABON FOR EACH ROW
  DECLARE
  CURSOR C(pPHONE IN VARCHAR2) IS
    SELECT C.DAILY_ABON_BANNED
      FROM CONTRACTS C
      WHERE C.PHONE_NUMBER_FEDERAL = pPHONE
        AND NOT EXISTS (SELECT 1
                          FROM CONTRACT_CANCELS CC
                          WHERE CC.CONTRACT_ID = C.CONTRACT_ID);
    DUMMY C%ROWTYPE;
BEGIN
  :NEW.USER_LAST_UPDATE:=USER;
  :NEW.DATE_LAST_UPDATE:=SYSDATE;  
  OPEN C(:NEW.PHONE_NUMBER);
  FETCH C INTO DUMMY;
  IF C%FOUND THEN
    IF NVL(DUMMY.DAILY_ABON_BANNED, 0) = 1 THEN
      :NEW.PHONE_NUMBER:='0000000000';
    END IF;
  END IF;
END;  

GRANT SELECT, INSERT, UPDATE, DELETE ON PHONE_NUMBER_WITH_DAILY_ABON TO LONTANA_ROLE;

-- Add/modify columns 
alter table PHONE_NUMBER_WITH_DAILY_ABON modify phone_number not null;
-- Create/Recreate primary, unique and foreign key constraints 
alter table PHONE_NUMBER_WITH_DAILY_ABON
  add constraint PK_DAILY_ABON_PH_N primary key (PHONE_NUMBER);