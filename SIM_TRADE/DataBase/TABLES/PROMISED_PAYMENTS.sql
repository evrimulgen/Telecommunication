--#if isclient("CORP_MOBILE") or isclient("GSM_CORP") then

--#if not TableExists("PROMISED_PAYMENTS") then
CREATE TABLE PROMISED_PAYMENTS(
  PHONE_NUMBER VARCHAR2(10 CHAR) NOT NULL,
  PAYMENT_DATE DATE NOT NULL,
  PROMISED_DATE DATE NOT NULL,
  PROMISED_SUM NUMBER(15, 2) NOT NULL,
  USER_CREATED VARCHAR2(30 CHAR),
  DATE_CREATED DATE,
  USER_LAST_UPDATED VARCHAR2(30 CHAR),
  DATE_LAST_UPDATED DATE
  );

--#end if

--#if GetVersion("TIU_PROMISED_PAYMENTS")<1 then
CREATE OR REPLACE TRIGGER TIU_PROMISED_PAYMENTS
  BEFORE INSERT OR UPDATE ON PROMISED_PAYMENTS FOR EACH ROW
--#Version=1
BEGIN
  IF INSERTING THEN
    :NEW.USER_CREATED := USER;
    :NEW.DATE_CREATED := SYSDATE;
  END IF;  
  :NEW.USER_LAST_UPDATED := USER;
  :NEW.DATE_LAST_UPDATED := SYSDATE;
END;
/
--#end if

--#if not IndexExists("I_PROMISED_PAYMENTS") THEN
CREATE INDEX I_PROMISED_PAYMENTS ON PROMISED_PAYMENTS
(PHONE_NUMBER, PROMISED_DATE, PAYMENT_DATE, PROMISED_SUM)
LOGGING
NOPARALLEL;  
--#end if


--#if not ColumnExists("PROMISED_PAYMENTS.PROMISED_DATE_END") then
ALTER TABLE PROMISED_PAYMENTS ADD PROMISED_DATE_END DATE;
--#end if

COMMENT ON TABLE PROMISED_PAYMENTS IS 'Îáåùàííûå ïëàòåæè';
COMMENT ON COLUMN PROMISED_PAYMENTS.PHONE_NUMBER IS 'ÍÎÌÅÐ ÒÅËÅÔÎÍÀ';
COMMENT ON COLUMN PROMISED_PAYMENTS.PAYMENT_DATE IS 'ÄÀÒÀ ÏËÀÒÅÆÀ';
COMMENT ON COLUMN PROMISED_PAYMENTS.PROMISED_DATE IS 'Äàòà îêîí÷àíèÿ îáåùàííîãî ïëàòåæà ôàêòè÷åñêàÿ';
COMMENT ON COLUMN PROMISED_PAYMENTS.PROMISED_SUM IS 'ÑÓÌÌÀ ÎÒËÎÆÅÍÍÎÃÎ ÏËÀÒÅÆÀ';
COMMENT ON COLUMN PROMISED_PAYMENTS.USER_CREATED IS 'ÏÎËÜÇÎÂÀÒÅËÜ, ÑÎÇÄÀÂØÈÉ';
COMMENT ON COLUMN PROMISED_PAYMENTS.DATE_CREATED IS 'ÄÀÒÀ ÑÎÇÄÀÍÈß';
COMMENT ON COLUMN PROMISED_PAYMENTS.USER_LAST_UPDATED IS 'ÏÎËÜÇÎÂÀÒÅËÜ, ÈÇÌÅÍÈÂØÈÉ';
COMMENT ON COLUMN PROMISED_PAYMENTS.DATE_LAST_UPDATED IS 'ÄÀÒÀ ÏÎÑËÅÄÍÅÃÎ ÈÇÌÅÍÅÍÈß';
COMMENT ON COLUMN PROMISED_PAYMENTS.PROMISED_DATE_END IS 'Ïëàíîâàÿ äàòà îêîí÷àíèÿ îáåùàííîãî ïëàòåæà';


--#if not GrantExists("PROMISED_PAYMENTS", "ROLE", "SELECT") then
begin EXECUTE IMMEDIATE 'GRANT ALL ON PROMISED_PAYMENTS TO &MAIN_SCHEMA'||'_ROLE'; end;
--#end if

--#if not GrantExists("PROMISED_PAYMENTS", "ROLE_RO", "SELECT") then
begin EXECUTE IMMEDIATE 'GRANT SELECT ON PROMISED_PAYMENTS TO &MAIN_SCHEMA'||'_ROLE_RO'; end;
--#end if

--#if not GrantExists("PROMISED_PAYMENTS", "ROLE_RO", "UPDATE") then
begin EXECUTE IMMEDIATE 'GRANT UPDATE ON PROMISED_PAYMENTS TO &MAIN_SCHEMA'||'_ROLE_RO'; end;
--#end if

--#if not GrantExists("PROMISED_PAYMENTS", "ROLE_RO", "INSERT") then
begin EXECUTE IMMEDIATE 'GRANT INSERT ON PROMISED_PAYMENTS TO &MAIN_SCHEMA'||'_ROLE_RO'; end;
--#end if

--#if not GrantExists("PROMISED_PAYMENTS", "ROLE_RO", "DELETE") then
begin EXECUTE IMMEDIATE 'GRANT DELETE ON PROMISED_PAYMENTS TO &MAIN_SCHEMA'||'_ROLE_RO'; end;
--#end if

--#end if

ALTER TABLE PROMISED_PAYMENTS ADD(SMS_SENDED INTEGER DEFAULT 0);

COMMENT ON COLUMN PROMISED_PAYMENTS.SMS_SENDED IS 'Ïðèçíàê òîãî, ÷òî ñìñ îòïðàâëåíà (0 - îòïðàâêè íå áûëî; 1 - ñìñ îòïðàâëåíà)';