DROP TABLE CORP_MOBILE.DB_LOADER_PAYMENTS CASCADE CONSTRAINTS;

CREATE TABLE CORP_MOBILE.DB_LOADER_PAYMENTS
(
  ACCOUNT_ID               INTEGER,
  YEAR_MONTH               INTEGER,
  PHONE_NUMBER             VARCHAR2(10 CHAR),
  PAYMENT_DATE             DATE,
  PAYMENT_SUM              NUMBER(15,2),
  PAYMENT_STATUS_IS_VALID  NUMBER(1),
  PAYMENT_NUMBER           VARCHAR2(30 CHAR),
  PAYMENT_STATUS_TEXT      VARCHAR2(200 CHAR),
  CONTRACT_ID              INTEGER,
  DATE_CREATED             DATE
)
TABLESPACE USERS
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          9M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN CORP_MOBILE.DB_LOADER_PAYMENTS.CONTRACT_ID IS 'Ссылка на контракт, к которому относится платёж';

COMMENT ON COLUMN CORP_MOBILE.DB_LOADER_PAYMENTS.DATE_CREATED IS 'Дата загрузки платежа в БД';



CREATE INDEX CORP_MOBILE.I_DB_LOADER_PAYMENTS_CONTRACT ON CORP_MOBILE.DB_LOADER_PAYMENTS
(CONTRACT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE INDEX CORP_MOBILE.I_DB_LOADER_PAYMENTS_PHONE ON CORP_MOBILE.DB_LOADER_PAYMENTS
(ACCOUNT_ID, TO_NUMBER("PHONE_NUMBER"), SIGN("PAYMENT_SUM"), PAYMENT_NUMBER)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;

CREATE UNIQUE INDEX CORP_MOBILE.U_LDR_PAYMENTS ON CORP_MOBILE.DB_LOADER_PAYMENTS
(PHONE_NUMBER, PAYMENT_NUMBER, PAYMENT_SUM, PAYMENT_DATE, PAYMENT_STATUS_IS_VALID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;

CREATE INDEX I_DB_LOADER_PAYMENTS_F2 ON DB_LOADER_PAYMENTS(ACCOUNT_ID, NVL(PAYMENT_NUMBER, 0), NVL(phone_number, '000')) 
COMPRESS 1;

CREATE OR REPLACE TRIGGER CORP_MOBILE.TI_DB_LOADER_PAYMENTS
BEFORE INSERT
ON CORP_MOBILE.DB_LOADER_PAYMENTS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
  :NEW.DATE_CREATED := SYSDATE;
  if :new.phone_number is not null then 
  INSERT INTO QUEUE_CURRENT_BALANCES(PHONE_NUMBER, QUEUE_TYPE)
    VALUES(:NEW.PHONE_NUMBER, 42);
  end if;
END;
/


CREATE OR REPLACE SYNONYM CORP_MOBILE_C7.DB_LOADER_PAYMENTS FOR CORP_MOBILE.DB_LOADER_PAYMENTS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_COPY_1341.DB_LOADER_PAYMENTS FOR CORP_MOBILE.DB_LOADER_PAYMENTS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_COPY2.DB_LOADER_PAYMENTS FOR CORP_MOBILE.DB_LOADER_PAYMENTS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_COPY4.DB_LOADER_PAYMENTS FOR CORP_MOBILE.DB_LOADER_PAYMENTS;


CREATE OR REPLACE SYNONYM "CORP_MOBILE_CС".DB_LOADER_PAYMENTS FOR CORP_MOBILE.DB_LOADER_PAYMENTS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_COPY_27.DB_LOADER_PAYMENTS FOR CORP_MOBILE.DB_LOADER_PAYMENTS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_COPY_NPV.DB_LOADER_PAYMENTS FOR CORP_MOBILE.DB_LOADER_PAYMENTS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_COPY_LEV.DB_LOADER_PAYMENTS FOR CORP_MOBILE.DB_LOADER_PAYMENTS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_C0318.DB_LOADER_PAYMENTS FOR CORP_MOBILE.DB_LOADER_PAYMENTS;


CREATE OR REPLACE SYNONYM CORP_MOBILE_C0409.DB_LOADER_PAYMENTS FOR CORP_MOBILE.DB_LOADER_PAYMENTS;


ALTER TABLE CORP_MOBILE.DB_LOADER_PAYMENTS ADD (
  CONSTRAINT U_LDR_PAYMENTS
  UNIQUE (PHONE_NUMBER, PAYMENT_NUMBER, PAYMENT_SUM, PAYMENT_DATE, PAYMENT_STATUS_IS_VALID)
  USING INDEX CORP_MOBILE.U_LDR_PAYMENTS
  ENABLE VALIDATE);

ALTER TABLE CORP_MOBILE.DB_LOADER_PAYMENTS ADD (
  CONSTRAINT FK_DB_LOADER_PAYMENTS_CONTRACT 
  FOREIGN KEY (CONTRACT_ID) 
  REFERENCES CORP_MOBILE.CONTRACTS (CONTRACT_ID)
  ON DELETE SET NULL
  ENABLE VALIDATE);

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.DB_LOADER_PAYMENTS TO CORP_MOBILE_C0318;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.DB_LOADER_PAYMENTS TO CORP_MOBILE_C0409;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.DB_LOADER_PAYMENTS TO CORP_MOBILE_C7;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.DB_LOADER_PAYMENTS TO CORP_MOBILE_COPY2;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.DB_LOADER_PAYMENTS TO CORP_MOBILE_COPY4;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.DB_LOADER_PAYMENTS TO CORP_MOBILE_COPY_1341;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.DB_LOADER_PAYMENTS TO CORP_MOBILE_COPY_27;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.DB_LOADER_PAYMENTS TO CORP_MOBILE_COPY_LEV;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.DB_LOADER_PAYMENTS TO CORP_MOBILE_COPY_NPV;

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.DB_LOADER_PAYMENTS TO "CORP_MOBILE_CС";

GRANT DELETE, INSERT, SELECT, UPDATE ON CORP_MOBILE.DB_LOADER_PAYMENTS TO CORP_MOBILE_ROLE;

GRANT SELECT ON CORP_MOBILE.DB_LOADER_PAYMENTS TO CORP_MOBILE_ROLE_RO;
