CREATE OR REPLACE FORCE VIEW V_PHONE_NUMBER_FOR_UNBL_SAVE_3 AS
  SELECT P.PHONE_NUMBER, 
         --CB.BALANCE,CB.LAST_UPDATE,SUM(P.PAYMENT_SUM),SUM(P.PAYMENT_SUM)+CB.BALANCE,
         GET_ABONENT_BALANCE (P.PHONE_NUMBER) BALANCE,
         AB.SURNAME || ' ' || AB.NAME || ' ' || AB.PATRONYMIC FIO,
         PH.ACCOUNT_ID,
         DECODE (DG.HAND_BLOCK, 1, 'Да', 0, 'Нет') HAND_BLOCK
    FROM DB_LOADER_PAYMENTS P,
         DB_LOADER_ACCOUNT_PHONES PH,
         IOT_CURRENT_BALANCE CB,
         CONTRACTS DG,
         TARIFFS TR,
         ABONENTS AB
   WHERE P.PHONE_NUMBER = PH.PHONE_NUMBER
     AND DG.PHONE_NUMBER_FEDERAL = PH.PHONE_NUMBER
     AND CB.PHONE_NUMBER = P.PHONE_NUMBER
     AND DG.TARIFF_ID = TR.TARIFF_ID
     AND AB.ABONENT_ID = DG.ABONENT_ID
     AND NOT EXISTS (SELECT 1
                       FROM CONTRACT_CANCELS CC
                       WHERE DG.CONTRACT_ID = CC.CONTRACT_ID)
     AND PH.YEAR_MONTH = (SELECT MAX (P2.YEAR_MONTH)
                            FROM DB_LOADER_ACCOUNT_PHONES P2
                            WHERE P2.ACCOUNT_ID = PH.ACCOUNT_ID)
 --and p.payment_date>cb.last_update
     AND P.PAYMENT_DATE > SYSDATE - 3
     AND PH.PHONE_IS_ACTIVE = 0
     AND PH.CONSERVATION = 1
     AND PH.SYSTEM_BLOCK != 1
     AND (DG.HAND_BLOCK = 0 OR (DG.HAND_BLOCK = 1 AND DG.HAND_BLOCK_DATE_END < TRUNC(SYSDATE)))
--
  GROUP BY PH.ACCOUNT_ID, P.PHONE_NUMBER, CB.BALANCE, DG.DISCONNECT_LIMIT, 
           DG.CONNECT_LIMIT, TR.BALANCE_UNBLOCK, --CB.LAST_UPDATE,
           AB.SURNAME || ' ' || AB.NAME || ' ' || AB.PATRONYMIC, DG.HAND_BLOCK
    HAVING CB.BALANCE - NVL(DG.DISCONNECT_LIMIT, 0) > NVL(DG.CONNECT_LIMIT, NVL(TR.BALANCE_UNBLOCK, 0));


GRANT DELETE, INSERT, SELECT, UPDATE, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON V_PHONE_NUMBER_FOR_UNBL_SAVE_3 TO CORP_MOBILE_ROLE;

GRANT SELECT ON V_PHONE_NUMBER_FOR_UNBL_SAVE_3 TO CORP_MOBILE_ROLE_RO;